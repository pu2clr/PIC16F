

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan  3 13:05:45 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 12/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     008F                     	;# 
   125     0090                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0094                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009E                     	;# 
   142     009F                     	;# 
   143     0105                     	;# 
   144     0107                     	;# 
   145     0108                     	;# 
   146     0109                     	;# 
   147     010C                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     010F                     	;# 
   152     0185                     	;# 
   153     0187                     	;# 
   154     0188                     	;# 
   155     0189                     	;# 
   156     018C                     	;# 
   157     018D                     	;# 
   158     0000                     	;# 
   159     0001                     	;# 
   160     0002                     	;# 
   161     0003                     	;# 
   162     0004                     	;# 
   163     0005                     	;# 
   164     0006                     	;# 
   165     0007                     	;# 
   166     0008                     	;# 
   167     0009                     	;# 
   168     000A                     	;# 
   169     000B                     	;# 
   170     000C                     	;# 
   171     000D                     	;# 
   172     000E                     	;# 
   173     000E                     	;# 
   174     000F                     	;# 
   175     0010                     	;# 
   176     0011                     	;# 
   177     0012                     	;# 
   178     0013                     	;# 
   179     0014                     	;# 
   180     0015                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0017                     	;# 
   184     0018                     	;# 
   185     0019                     	;# 
   186     001A                     	;# 
   187     001B                     	;# 
   188     001B                     	;# 
   189     001C                     	;# 
   190     001D                     	;# 
   191     001E                     	;# 
   192     001F                     	;# 
   193     0081                     	;# 
   194     0085                     	;# 
   195     0086                     	;# 
   196     0087                     	;# 
   197     0088                     	;# 
   198     0089                     	;# 
   199     008C                     	;# 
   200     008D                     	;# 
   201     008E                     	;# 
   202     008F                     	;# 
   203     0090                     	;# 
   204     0091                     	;# 
   205     0092                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0094                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     009F                     	;# 
   221     0105                     	;# 
   222     0107                     	;# 
   223     0108                     	;# 
   224     0109                     	;# 
   225     010C                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     0185                     	;# 
   231     0187                     	;# 
   232     0188                     	;# 
   233     0189                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     000E                     	;# 
   251     000E                     	;# 
   252     000F                     	;# 
   253     0010                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0014                     	;# 
   258     0015                     	;# 
   259     0015                     	;# 
   260     0016                     	;# 
   261     0017                     	;# 
   262     0018                     	;# 
   263     0019                     	;# 
   264     001A                     	;# 
   265     001B                     	;# 
   266     001B                     	;# 
   267     001C                     	;# 
   268     001D                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     0081                     	;# 
   272     0085                     	;# 
   273     0086                     	;# 
   274     0087                     	;# 
   275     0088                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008F                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0097                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009A                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     0105                     	;# 
   300     0107                     	;# 
   301     0108                     	;# 
   302     0109                     	;# 
   303     010C                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     0185                     	;# 
   309     0187                     	;# 
   310     0188                     	;# 
   311     0189                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314                           
   315                           	psect	idataBANK1
   316     0B11                     __pidataBANK1:
   317                           
   318                           ;initializer for main@F1787
   319     0B11  3408               	retlw	8
   320     0B12  3400               	retlw	0
   321     0B13  3402               	retlw	2
   322     0B14  3403               	retlw	3
   323     0B15  3404               	retlw	4
   324     0B16  3405               	retlw	5
   325     0B17  3406               	retlw	6
   326     0B18  3407               	retlw	7
   327     001E                     _ADRESH	set	30
   328     001F                     _ADCON0bits	set	31
   329     001F                     _ADCON0	set	31
   330     000B                     _INTCONbits	set	11
   331     0006                     _PORTBbits	set	6
   332     0001                     _TMR0	set	1
   333     0015                     _CCPR1L	set	21
   334     0017                     _CCP1CON	set	23
   335     0012                     _T2CON	set	18
   336     0008                     _PORTD	set	8
   337     0088                     _TRISD	set	136
   338     009E                     _ADRESL	set	158
   339     009F                     _ADCON1	set	159
   340     0081                     _OPTION_REGbits	set	129
   341     0086                     _TRISBbits	set	134
   342     0092                     _PR2	set	146
   343     0188                     _ANSEL	set	392
   344     0189                     _ANSELH	set	393
   345                           
   346                           	psect	strings
   347     0800                     __pstrings:
   348     0800                     stringtab:
   349     0800                     __stringtab:
   350                           
   351                           ;	String table - string pointers are 1 byte each
   352     0800  1BFF               	btfsc	btemp+1,7
   353     0801  280A               	ljmp	stringcode
   354     0802  1383               	bcf	3,7
   355     0803  187F               	btfsc	btemp+1,0
   356     0804  1783               	bsf	3,7
   357     0805  0800               	movf	0,w
   358     0806  0A84               	incf	4,f
   359     0807  1903               	skipnz
   360     0808  0AFF               	incf	btemp+1,f
   361     0809  0008               	return
   362     080A                     stringcode:
   363     080A                     stringdir:
   364     080A  3008               	movlw	high stringdir
   365     080B  008A               	movwf	10
   366     080C  0804               	movf	4,w
   367     080D  0A84               	incf	4,f
   368     080E  0782               	addwf	2,f
   369     080F                     __stringbase:
   370     080F  3400               	retlw	0
   371     0810                     __end_of__stringtab:
   372     0810                     STR_1:
   373     0810  3443               	retlw	67	;'C'
   374     0811  344F               	retlw	79	;'O'
   375     0812  344F               	retlw	79	;'O'
   376     0813  344C               	retlw	76	;'L'
   377     0814  3445               	retlw	69	;'E'
   378     0815  3452               	retlw	82	;'R'
   379     0816  3420               	retlw	32	;' '
   380     0817  3452               	retlw	82	;'R'
   381     0818  3450               	retlw	80	;'P'
   382     0819  344D               	retlw	77	;'M'
   383     081A  3420               	retlw	32	;' '
   384     081B  3443               	retlw	67	;'C'
   385     081C  346F               	retlw	111	;'o'
   386     081D  3475               	retlw	117	;'u'
   387     081E  346E               	retlw	110	;'n'
   388     081F  3474               	retlw	116	;'t'
   389     0820  3465               	retlw	101	;'e'
   390     0821  3472               	retlw	114	;'r'
   391     0822  3400               	retlw	0
   392     0823                     STR_2:
   393     0823  3452               	retlw	82	;'R'
   394     0824  3450               	retlw	80	;'P'
   395     0825  344D               	retlw	77	;'M'
   396     0826  343A               	retlw	58	;':'
   397     0827  3420               	retlw	32	;' '
   398     0828  3400               	retlw	0
   399     0829                     STR_3:
   400     0829  3425               	retlw	37	;'%'
   401     082A  3475               	retlw	117	;'u'
   402     082B  3400               	retlw	0
   403                           
   404                           	psect	cinit
   405     07E3                     start_initialization:	
   406                           ; #config settings
   407                           
   408     07E3                     __initialization:
   409                           
   410                           ; Initialize objects allocated to BANK1
   411     07E3  1383               	bcf	3,7	;select IRP bank0
   412     07E4  30E2               	movlw	low (__pdataBANK1+8)
   413     07E5  00FD               	movwf	btemp+-1
   414     07E6  300B               	movlw	high __pidataBANK1
   415     07E7  00FE               	movwf	btemp
   416     07E8  3011               	movlw	low __pidataBANK1
   417     07E9  00FF               	movwf	btemp+1
   418     07EA  30DA               	movlw	low __pdataBANK1
   419     07EB  0084               	movwf	4
   420     07EC  120A  158A  234B  120A  118A  	fcall	init_ram0
   421                           
   422                           ; Clear objects allocated to BANK1
   423     07F1  30A0               	movlw	low __pbssBANK1
   424     07F2  0084               	movwf	4
   425     07F3  30C0               	movlw	low (__pbssBANK1+32)
   426     07F4  120A  158A  2309   	fcall	clear_ram0
   427                           
   428                           ; Clear objects allocated to BANK0
   429     07F7  01E2               	clrf	__pbssBANK0& (0+127)
   430     07F8  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   431     07F9  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   432     07FA  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   433     07FB  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   434     07FC                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437     07FC                     __end_of__initialization:
   438     07FC  0183               	clrf	3
   439     07FD  120A  118A  282D   	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bssBANK0
   442     0062                     __pbssBANK0:
   443     0062                     _width:
   444     0062                     	ds	2
   445     0064                     _prec:
   446     0064                     	ds	2
   447     0066                     _flags:
   448     0066                     	ds	1
   449                           
   450                           	psect	bssBANK1
   451     00A0                     __pbssBANK1:
   452     00A0                     _dbuf:
   453     00A0                     	ds	32
   454                           
   455                           	psect	dataBANK1
   456     00DA                     __pdataBANK1:
   457     00DA                     main@F1787:
   458     00DA                     	ds	8
   459                           
   460                           	psect	inittext
   461     0B47                     init_fetch0:	
   462                           ;	Called with low address in FSR and high address in W
   463                           
   464     0B47  087E               	movf	126,w
   465     0B48  008A               	movwf	10
   466     0B49  087F               	movf	127,w
   467     0B4A  0082               	movwf	2
   468     0B4B                     init_ram0:	
   469                           ;Called with:
   470                           ;	high address of idata address in btemp 
   471                           ;	low address of idata address in btemp+1 
   472                           ;	low address of data in FSR
   473                           ;	high address + 1 of data in btemp-1
   474                           
   475     0B4B  2347  120A  158A   	fcall	init_fetch0
   476     0B4E  0080               	movwf	0
   477     0B4F  0A84               	incf	4,f
   478     0B50  0804               	movf	4,w
   479     0B51  067D               	xorwf	125,w
   480     0B52  1903               	btfsc	3,2
   481     0B53  3400               	retlw	0
   482     0B54  0AFF               	incf	127,f
   483     0B55  1903               	btfsc	3,2
   484     0B56  0AFE               	incf	126,f
   485     0B57  2B4B               	goto	init_ram0
   486                           
   487                           	psect	clrtext
   488     0B09                     clear_ram0:	
   489                           ;	Called with FSR containing the base address, and
   490                           ;	W with the last address+1
   491                           
   492     0B09  0064               	clrwdt	;clear the watchdog before getting into this loop
   493     0B0A                     clrloop0:
   494     0B0A  0180               	clrf	0	;clear RAM location pointed to by FSR
   495     0B0B  0A84               	incf	4,f	;increment pointer
   496     0B0C  0604               	xorwf	4,w	;XOR with final address
   497     0B0D  1903               	btfsc	3,2	;have we reached the end yet?
   498     0B0E  3400               	retlw	0	;all done for this memory range, return
   499     0B0F  0604               	xorwf	4,w	;XOR again to restore value
   500     0B10  2B0A               	goto	clrloop0	;do the next byte
   501                           
   502                           	psect	cstackBANK1
   503     00C0                     __pcstackBANK1:
   504     00C0                     main@rpm:
   505                           
   506                           ; 10 bytes @ 0x0
   507     00C0                     	ds	10
   508     00CA                     main@pulses:
   509                           
   510                           ; 2 bytes @ 0xA
   511     00CA                     	ds	2
   512     00CC                     main@fanRPM:
   513                           
   514                           ; 2 bytes @ 0xC
   515     00CC                     	ds	2
   516     00CE                     main@temperature:
   517                           
   518                           ; 4 bytes @ 0xE
   519     00CE                     	ds	4
   520     00D2                     main@lcd:
   521                           
   522                           ; 8 bytes @ 0x12
   523     00D2                     	ds	8
   524                           
   525                           	psect	cstackCOMMON
   526     0070                     __pcstackCOMMON:
   527     0070                     ?___flge:
   528     0070                     ?_Lcd_Clear:	
   529                           ; 1 bit 
   530                           
   531     0070                     ?_putch:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ??_putch:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_SetBit:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_PulseEnable:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_Lcd_Init:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_initPWM:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ??_initPWM:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_initRPM:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ??_initRPM:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_initADC:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_initADC:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_main:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?__Umul8_16:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_fputc:	
   571                           ; 2 bytes @ 0x0
   572                           
   573     0070                     ?_countPulses:	
   574                           ; 2 bytes @ 0x0
   575                           
   576     0070                     ?_readADC:	
   577                           ; 2 bytes @ 0x0
   578                           
   579     0070                     ?___wmul:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0070                     ?___lwdiv:	
   583                           ; 2 bytes @ 0x0
   584                           
   585     0070                     ?___lwmod:	
   586                           ; 2 bytes @ 0x0
   587                           
   588     0070                     ?___xxtofl:	
   589                           ; 2 bytes @ 0x0
   590                           
   591     0070                     __Umul8_16@multiplicand:	
   592                           ; 4 bytes @ 0x0
   593                           
   594     0070                     putch@c:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     SetBit@port:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ___wmul@multiplier:	
   601                           ; 2 bytes @ 0x0
   602                           
   603     0070                     ___lwdiv@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606     0070                     ___lwmod@divisor:	
   607                           ; 2 bytes @ 0x0
   608                           
   609     0070                     fputc@c:	
   610                           ; 2 bytes @ 0x0
   611                           
   612     0070                     ___flge@ff1:	
   613                           ; 2 bytes @ 0x0
   614                           
   615     0070                     ___xxtofl@val:	
   616                           ; 4 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620     0070                     	ds	2
   621     0072                     ??__Umul8_16:
   622     0072                     ??_countPulses:	
   623                           ; 1 bytes @ 0x2
   624                           
   625     0072                     ??_readADC:	
   626                           ; 1 bytes @ 0x2
   627                           
   628     0072                     SetBit@pin:	
   629                           ; 1 bytes @ 0x2
   630                           
   631     0072                     fputc@fp:	
   632                           ; 1 bytes @ 0x2
   633                           
   634     0072                     countPulses@pulseCount:	
   635                           ; 1 bytes @ 0x2
   636                           
   637     0072                     ___wmul@multiplicand:	
   638                           ; 2 bytes @ 0x2
   639                           
   640     0072                     ___lwdiv@dividend:	
   641                           ; 2 bytes @ 0x2
   642                           
   643     0072                     ___lwmod@dividend:	
   644                           ; 2 bytes @ 0x2
   645                           
   646                           
   647                           ; 2 bytes @ 0x2
   648     0072                     	ds	1
   649     0073                     ??_fputc:
   650     0073                     SetBit@value:	
   651                           ; 1 bytes @ 0x3
   652                           
   653                           
   654                           ; 1 bytes @ 0x3
   655     0073                     	ds	1
   656     0074                     ??_SetBit:
   657     0074                     ??___wmul:	
   658                           ; 1 bytes @ 0x4
   659                           
   660     0074                     ??___lwdiv:	
   661                           ; 1 bytes @ 0x4
   662                           
   663     0074                     ??___lwmod:	
   664                           ; 1 bytes @ 0x4
   665                           
   666     0074                     ??___xxtofl:	
   667                           ; 1 bytes @ 0x4
   668                           
   669     0074                     countPulses@lastState:	
   670                           ; 1 bytes @ 0x4
   671                           
   672     0074                     ___wmul@product:	
   673                           ; 1 bytes @ 0x4
   674                           
   675     0074                     __Umul8_16@product:	
   676                           ; 2 bytes @ 0x4
   677                           
   678     0074                     ___flge@ff2:	
   679                           ; 2 bytes @ 0x4
   680                           
   681                           
   682                           ; 4 bytes @ 0x4
   683     0074                     	ds	1
   684     0075                     countPulses@currentState:
   685     0075                     ___lwmod@counter:	
   686                           ; 1 bytes @ 0x5
   687                           
   688     0075                     ___lwdiv@quotient:	
   689                           ; 1 bytes @ 0x5
   690                           
   691                           
   692                           ; 2 bytes @ 0x5
   693     0075                     	ds	1
   694     0076                     ??_PulseEnable:
   695     0076                     __Umul8_16@word_mpld:	
   696                           ; 1 bytes @ 0x6
   697                           
   698                           
   699                           ; 2 bytes @ 0x6
   700     0076                     	ds	1
   701     0077                     ___lwdiv@counter:
   702                           
   703                           ; 1 bytes @ 0x7
   704     0077                     	ds	1
   705     0078                     ??___flge:
   706     0078                     ?_vfpfcnvrt:	
   707                           ; 1 bytes @ 0x8
   708                           
   709     0078                     PulseEnable@config:	
   710                           ; 1 bytes @ 0x8
   711                           
   712     0078                     __Umul8_16@multiplier:	
   713                           ; 1 bytes @ 0x8
   714                           
   715     0078                     ___xxtofl@sign:	
   716                           ; 1 bytes @ 0x8
   717                           
   718     0078                     vfpfcnvrt@fmt:	
   719                           ; 1 bytes @ 0x8
   720                           
   721                           
   722                           ; 1 bytes @ 0x8
   723     0078                     	ds	1
   724     0079                     ?_Lcd_Command:
   725     0079                     ?_Lcd_WriteChar:	
   726                           ; 1 bytes @ 0x9
   727                           
   728     0079                     Lcd_Command@cmd:	
   729                           ; 1 bytes @ 0x9
   730                           
   731     0079                     Lcd_WriteChar@data:	
   732                           ; 1 bytes @ 0x9
   733                           
   734     0079                     ___xxtofl@exp:	
   735                           ; 1 bytes @ 0x9
   736                           
   737     0079                     vfpfcnvrt@ap:	
   738                           ; 1 bytes @ 0x9
   739                           
   740                           
   741                           ; 1 bytes @ 0x9
   742     0079                     	ds	1
   743     007A                     ??_Lcd_Command:
   744     007A                     ??_Lcd_WriteChar:	
   745                           ; 1 bytes @ 0xA
   746                           
   747     007A                     ??_vfpfcnvrt:	
   748                           ; 1 bytes @ 0xA
   749                           
   750     007A                     ___xxtofl@arg:	
   751                           ; 1 bytes @ 0xA
   752                           
   753                           
   754                           ; 4 bytes @ 0xA
   755     007A                     	ds	2
   756     007C                     ?_vfprintf:
   757     007C                     Lcd_Command@config:	
   758                           ; 2 bytes @ 0xC
   759                           
   760     007C                     Lcd_WriteChar@config:	
   761                           ; 1 bytes @ 0xC
   762                           
   763     007C                     vfprintf@fmt:	
   764                           ; 1 bytes @ 0xC
   765                           
   766                           
   767                           ; 1 bytes @ 0xC
   768     007C                     	ds	1
   769     007D                     ??_Lcd_WriteString:
   770     007D                     Lcd_WriteString@config:	
   771                           ; 1 bytes @ 0xD
   772                           
   773     007D                     Lcd_Clear@config:	
   774                           ; 1 bytes @ 0xD
   775                           
   776     007D                     vfprintf@ap:	
   777                           ; 1 bytes @ 0xD
   778                           
   779                           
   780                           ; 1 bytes @ 0xD
   781     007D                     	ds	1
   782     007E                     ??_vfprintf:
   783     007E                     ??_readTemperature:	
   784                           ; 1 bytes @ 0xE
   785                           
   786                           
   787                           	psect	cstackBANK0
   788     0020                     __pcstackBANK0:	
   789                           ; 1 bytes @ 0xE
   790                           
   791     0020                     ??_Lcd_Clear:
   792     0020                     ?_Lcd_WriteString:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0020                     ?_Lcd_SetCursor:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0020                     ?___fldiv:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0020                     Lcd_SetCursor@row:	
   802                           ; 4 bytes @ 0x0
   803                           
   804     0020                     vfpfcnvrt@fp:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0020                     Lcd_WriteString@str:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0020                     ___fldiv@a:	
   811                           ; 2 bytes @ 0x0
   812                           
   813                           
   814                           ; 4 bytes @ 0x0
   815     0020                     	ds	1
   816     0021                     Lcd_SetCursor@column:
   817     0021                     vfpfcnvrt@convarg:	
   818                           ; 1 bytes @ 0x1
   819                           
   820                           
   821                           ; 4 bytes @ 0x1
   822     0021                     	ds	1
   823     0022                     ??_Lcd_Init:
   824     0022                     ??_Lcd_SetCursor:	
   825                           ; 1 bytes @ 0x2
   826                           
   827                           
   828                           ; 1 bytes @ 0x2
   829     0022                     	ds	2
   830     0024                     Lcd_Init@config:
   831     0024                     Lcd_SetCursor@address:	
   832                           ; 1 bytes @ 0x4
   833                           
   834     0024                     ___fldiv@b:	
   835                           ; 1 bytes @ 0x4
   836                           
   837                           
   838                           ; 4 bytes @ 0x4
   839     0024                     	ds	1
   840     0025                     Lcd_SetCursor@config:
   841     0025                     vfpfcnvrt@cp:	
   842                           ; 1 bytes @ 0x5
   843                           
   844                           
   845                           ; 1 bytes @ 0x5
   846     0025                     	ds	1
   847     0026                     vfpfcnvrt@c:
   848                           
   849                           ; 1 bytes @ 0x6
   850     0026                     	ds	1
   851     0027                     vfprintf@fp:
   852                           
   853                           ; 1 bytes @ 0x7
   854     0027                     	ds	1
   855     0028                     ??___fldiv:
   856     0028                     vfprintf@cfmt:	
   857                           ; 1 bytes @ 0x8
   858                           
   859                           
   860                           ; 1 bytes @ 0x8
   861     0028                     	ds	1
   862     0029                     ?_sprintf:
   863     0029                     sprintf@fmt:	
   864                           ; 2 bytes @ 0x9
   865                           
   866                           
   867                           ; 1 bytes @ 0x9
   868     0029                     	ds	3
   869     002C                     ??_sprintf:
   870                           
   871                           ; 1 bytes @ 0xC
   872     002C                     	ds	1
   873     002D                     sprintf@ap:
   874     002D                     ___fldiv@rem:	
   875                           ; 1 bytes @ 0xD
   876                           
   877                           
   878                           ; 4 bytes @ 0xD
   879     002D                     	ds	1
   880     002E                     sprintf@s:
   881                           
   882                           ; 1 bytes @ 0xE
   883     002E                     	ds	1
   884     002F                     sprintf@f:
   885                           
   886                           ; 11 bytes @ 0xF
   887     002F                     	ds	2
   888     0031                     ___fldiv@sign:
   889                           
   890                           ; 1 bytes @ 0x11
   891     0031                     	ds	1
   892     0032                     ___fldiv@new_exp:
   893                           
   894                           ; 2 bytes @ 0x12
   895     0032                     	ds	2
   896     0034                     ___fldiv@grs:
   897                           
   898                           ; 4 bytes @ 0x14
   899     0034                     	ds	4
   900     0038                     ___fldiv@bexp:
   901                           
   902                           ; 1 bytes @ 0x18
   903     0038                     	ds	1
   904     0039                     ___fldiv@aexp:
   905                           
   906                           ; 1 bytes @ 0x19
   907     0039                     	ds	1
   908     003A                     ?___flmul:
   909     003A                     ___flmul@b:	
   910                           ; 4 bytes @ 0x1A
   911                           
   912                           
   913                           ; 4 bytes @ 0x1A
   914     003A                     	ds	4
   915     003E                     ___flmul@a:
   916                           
   917                           ; 4 bytes @ 0x1E
   918     003E                     	ds	4
   919     0042                     ??___flmul:
   920                           
   921                           ; 1 bytes @ 0x22
   922     0042                     	ds	5
   923     0047                     ___flmul@sign:
   924                           
   925                           ; 1 bytes @ 0x27
   926     0047                     	ds	1
   927     0048                     ___flmul@aexp:
   928                           
   929                           ; 1 bytes @ 0x28
   930     0048                     	ds	1
   931     0049                     ___flmul@grs:
   932                           
   933                           ; 4 bytes @ 0x29
   934     0049                     	ds	4
   935     004D                     ___flmul@bexp:
   936                           
   937                           ; 1 bytes @ 0x2D
   938     004D                     	ds	1
   939     004E                     ___flmul@prod:
   940                           
   941                           ; 4 bytes @ 0x2E
   942     004E                     	ds	4
   943     0052                     ___flmul@temp:
   944                           
   945                           ; 2 bytes @ 0x32
   946     0052                     	ds	2
   947     0054                     ?_readTemperature:
   948                           
   949                           ; 4 bytes @ 0x34
   950     0054                     	ds	4
   951     0058                     readTemperature@voltage:
   952                           
   953                           ; 4 bytes @ 0x38
   954     0058                     	ds	4
   955     005C                     readTemperature@adcValue:
   956                           
   957                           ; 2 bytes @ 0x3C
   958     005C                     	ds	2
   959     005E                     ??_main:
   960                           
   961                           ; 1 bytes @ 0x3E
   962     005E                     	ds	4
   963                           
   964                           	psect	maintext
   965     002D                     __pmaintext:	
   966 ;;
   967 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   968 ;;
   969 ;; *************** function _main *****************
   970 ;; Defined at:
   971 ;;		line 83 in file "newmain.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  rpm            10    0[BANK1 ] unsigned char [10]
   976 ;;  temperature     4   14[BANK1 ] unsigned char [10]
   977 ;;  fanRPM          2   12[BANK1 ] unsigned int 
   978 ;;  pulses          2   10[BANK1 ] unsigned int 
   979 ;;  lcd             8   18[BANK1 ] struct .
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : B00/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         0       0      26       0       0
   991 ;;      Temps:          0       4       0       0       0
   992 ;;      Totals:         0       4      26       0       0
   993 ;;Total ram usage:       30 bytes
   994 ;; Hardware stack levels required when called: 5
   995 ;; This function calls:
   996 ;;		_Lcd_Clear
   997 ;;		_Lcd_Init
   998 ;;		_Lcd_SetCursor
   999 ;;		_Lcd_WriteString
  1000 ;;		___flge
  1001 ;;		___wmul
  1002 ;;		_countPulses
  1003 ;;		_initADC
  1004 ;;		_initPWM
  1005 ;;		_initRPM
  1006 ;;		_readTemperature
  1007 ;;		_sprintf
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013     002D                     _main:	
  1014                           ;psect for function _main
  1015                           
  1016                           
  1017                           ;newmain.c: 86:     };
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1021     002D  120A  158A  233B  120A  118A  	fcall	_initPWM
  1022                           
  1023                           ;newmain.c: 87: 
  1024     0032  120A  158A  232F  120A  118A  	fcall	_initADC
  1025                           
  1026                           ;newmain.c: 88: 
  1027     0037  120A  158A  2319  120A  118A  	fcall	_initRPM
  1028                           
  1029                           ;newmain.c: 93: 
  1030     003C  30D2               	movlw	main@lcd& (0+255)
  1031     003D  0084               	movwf	4
  1032     003E  30DA               	movlw	low main@F1787
  1033     003F  00DE               	movwf	??_main
  1034     0040  0804               	movf	4,w
  1035     0041  00DF               	movwf	??_main+1
  1036     0042  3008               	movlw	8
  1037     0043  00E0               	movwf	??_main+2
  1038     0044                     u3440:
  1039     0044  085E               	movf	??_main,w
  1040     0045  0084               	movwf	4
  1041     0046  1383               	bcf	3,7	;select IRP bank1
  1042     0047  0800               	movf	0,w
  1043     0048  00E1               	movwf	??_main+3
  1044     0049  0ADE               	incf	??_main,f
  1045     004A  085F               	movf	??_main+1,w
  1046     004B  0084               	movwf	4
  1047     004C  0861               	movf	??_main+3,w
  1048     004D  0080               	movwf	0
  1049     004E  0ADF               	incf	??_main+1,f
  1050     004F  0BE0               	decfsz	??_main+2,f
  1051     0050  2844               	goto	u3440
  1052                           
  1053                           ;newmain.c: 104:         double temperature = readTemperature();
  1054     0051  1683               	bsf	3,5	;RP0=1, select bank1
  1055     0052  0188               	clrf	8	;volatile
  1056                           
  1057                           ;newmain.c: 106: 
  1058     0053  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1059     0054  120A  158A  25A1  120A  118A  	fcall	_Lcd_Init
  1060                           
  1061                           ;newmain.c: 107:         unsigned int fanRPM = (unsigned int) (pulses / 2) * (60 /400000
      +                          0);
  1062     0059  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1063     005A  120A  158A  2358  120A  118A  	fcall	_Lcd_Clear
  1064                           
  1065                           ;newmain.c: 110:         Lcd_SetCursor(&lcd, 2, 6);
  1066     005F  1283               	bcf	3,5	;RP0=0, select bank0
  1067     0060  1303               	bcf	3,6	;RP1=0, select bank0
  1068     0061  01A0               	clrf	Lcd_SetCursor@row
  1069     0062  0AA0               	incf	Lcd_SetCursor@row,f
  1070     0063  01A1               	clrf	Lcd_SetCursor@column
  1071     0064  0AA1               	incf	Lcd_SetCursor@column,f
  1072     0065  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1073     0066  120A  158A  23C3  120A  118A  	fcall	_Lcd_SetCursor
  1074                           
  1075                           ;newmain.c: 111:         Lcd_WriteString(&lcd,rpm);
  1076     006B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1077     006C  1283               	bcf	3,5	;RP0=0, select bank0
  1078     006D  1303               	bcf	3,6	;RP1=0, select bank0
  1079     006E  00A0               	movwf	Lcd_WriteString@str
  1080     006F  3080               	movlw	128
  1081     0070  00A1               	movwf	Lcd_WriteString@str+1
  1082     0071  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1083     0072  120A  158A  242D  120A  118A  	fcall	_Lcd_WriteString
  1084                           
  1085                           ;newmain.c: 112:         if (temperature > 33.0)
  1086     0077  3002               	movlw	2
  1087     0078  00A0               	movwf	Lcd_SetCursor@row
  1088     0079  01A1               	clrf	Lcd_SetCursor@column
  1089     007A  0AA1               	incf	Lcd_SetCursor@column,f
  1090     007B  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1091     007C  120A  158A  23C3  120A  118A  	fcall	_Lcd_SetCursor
  1092                           
  1093                           ;newmain.c: 113:             CCPR1L = 150;
  1094     0081  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1095     0082  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0083  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0084  00A0               	movwf	Lcd_WriteString@str
  1098     0085  3080               	movlw	128
  1099     0086  00A1               	movwf	Lcd_WriteString@str+1
  1100     0087  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1101     0088  120A  158A  242D  120A  118A  	fcall	_Lcd_WriteString
  1102     008D                     l2118:
  1103                           
  1104                           ;newmain.c: 117:             CCPR1L = 9;;newmain.c: 119:     }
  1105     008D  120A  158A  253D  120A  118A  	fcall	_readTemperature
  1106     0092  0857               	movf	?_readTemperature+3,w
  1107     0093  1683               	bsf	3,5	;RP0=1, select bank1
  1108     0094  00D1               	movwf	(main@temperature+3)^(0+128)
  1109     0095  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0096  0856               	movf	?_readTemperature+2,w
  1111     0097  1683               	bsf	3,5	;RP0=1, select bank1
  1112     0098  00D0               	movwf	(main@temperature+2)^(0+128)
  1113     0099  1283               	bcf	3,5	;RP0=0, select bank0
  1114     009A  0855               	movf	?_readTemperature+1,w
  1115     009B  1683               	bsf	3,5	;RP0=1, select bank1
  1116     009C  00CF               	movwf	(main@temperature+1)^(0+128)
  1117     009D  1283               	bcf	3,5	;RP0=0, select bank0
  1118     009E  0854               	movf	?_readTemperature,w
  1119     009F  1683               	bsf	3,5	;RP0=1, select bank1
  1120     00A0  00CE               	movwf	main@temperature^(0+128)
  1121                           
  1122                           ;newmain.c: 120: }
  1123     00A1  120A  158A  2409  120A  118A  	fcall	_countPulses
  1124     00A6  0871               	movf	?_countPulses+1,w
  1125     00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1126     00A8  00CB               	movwf	(main@pulses+1)^(0+128)
  1127     00A9  0870               	movf	?_countPulses,w
  1128     00AA  00CA               	movwf	main@pulses^(0+128)
  1129     00AB  084B               	movf	(main@pulses+1)^(0+128),w
  1130     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1131     00AD  00DF               	movwf	??_main+1
  1132     00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1133     00AF  084A               	movf	main@pulses^(0+128),w
  1134     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1135     00B1  00DE               	movwf	??_main
  1136     00B2  1003               	clrc
  1137     00B3  0CDF               	rrf	??_main+1,f
  1138     00B4  0CDE               	rrf	??_main,f
  1139     00B5  085E               	movf	??_main,w
  1140     00B6  00F0               	movwf	___wmul@multiplier
  1141     00B7  085F               	movf	??_main+1,w
  1142     00B8  00F1               	movwf	___wmul@multiplier+1
  1143     00B9  3000               	movlw	0
  1144     00BA  00F2               	movwf	___wmul@multiplicand
  1145     00BB  00F3               	movwf	___wmul@multiplicand+1
  1146     00BC  120A  158A  23A2  120A  118A  	fcall	___wmul
  1147     00C1  0871               	movf	?___wmul+1,w
  1148     00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1149     00C3  00CD               	movwf	(main@fanRPM+1)^(0+128)
  1150     00C4  0870               	movf	?___wmul,w
  1151     00C5  00CC               	movwf	main@fanRPM^(0+128)
  1152     00C6  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1153     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1154     00C8  00A9               	movwf	sprintf@fmt
  1155     00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1156     00CA  084D               	movf	(main@fanRPM+1)^(0+128),w
  1157     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1158     00CC  00AB               	movwf	?_sprintf+2
  1159     00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1160     00CE  084C               	movf	main@fanRPM^(0+128),w
  1161     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1162     00D0  00AA               	movwf	?_sprintf+1
  1163     00D1  30C0               	movlw	(low (main@rpm| 0))& (0+255)
  1164     00D2  120A  158A  236C  120A  118A  	fcall	_sprintf
  1165     00D7  3002               	movlw	2
  1166     00D8  00A0               	movwf	Lcd_SetCursor@row
  1167     00D9  3006               	movlw	6
  1168     00DA  00A1               	movwf	Lcd_SetCursor@column
  1169     00DB  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1170     00DC  120A  158A  23C3  120A  118A  	fcall	_Lcd_SetCursor
  1171     00E1  30C0               	movlw	(low (main@rpm| 0))& (0+255)
  1172     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1173     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1174     00E4  00A0               	movwf	Lcd_WriteString@str
  1175     00E5  3000               	movlw	0
  1176     00E6  00A1               	movwf	Lcd_WriteString@str+1
  1177     00E7  30D2               	movlw	(low (main@lcd| 0))& (0+255)
  1178     00E8  120A  158A  242D  120A  118A  	fcall	_Lcd_WriteString
  1179     00ED  3042               	movlw	66
  1180     00EE  00F3               	movwf	___flge@ff1+3
  1181     00EF  3004               	movlw	4
  1182     00F0  00F2               	movwf	___flge@ff1+2
  1183     00F1  3000               	movlw	0
  1184     00F2  00F1               	movwf	___flge@ff1+1
  1185     00F3  3000               	movlw	0
  1186     00F4  00F0               	movwf	___flge@ff1
  1187     00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1188     00F6  0851               	movf	(main@temperature+3)^(0+128),w
  1189     00F7  00F7               	movwf	___flge@ff2+3
  1190     00F8  0850               	movf	(main@temperature+2)^(0+128),w
  1191     00F9  00F6               	movwf	___flge@ff2+2
  1192     00FA  084F               	movf	(main@temperature+1)^(0+128),w
  1193     00FB  00F5               	movwf	___flge@ff2+1
  1194     00FC  084E               	movf	main@temperature^(0+128),w
  1195     00FD  00F4               	movwf	___flge@ff2
  1196     00FE  120A  158A  260C  120A  118A  	fcall	___flge
  1197     0103  1803               	btfsc	3,0
  1198     0104  2907               	goto	l2134
  1199     0105  3096               	movlw	150
  1200     0106  2921               	goto	L1
  1201     0107                     l2134:
  1202     0107  3041               	movlw	65
  1203     0108  00F3               	movwf	___flge@ff1+3
  1204     0109  30F0               	movlw	240
  1205     010A  00F2               	movwf	___flge@ff1+2
  1206     010B  3000               	movlw	0
  1207     010C  00F1               	movwf	___flge@ff1+1
  1208     010D  3000               	movlw	0
  1209     010E  00F0               	movwf	___flge@ff1
  1210     010F  0851               	movf	(main@temperature+3)^(0+128),w
  1211     0110  00F7               	movwf	___flge@ff2+3
  1212     0111  0850               	movf	(main@temperature+2)^(0+128),w
  1213     0112  00F6               	movwf	___flge@ff2+2
  1214     0113  084F               	movf	(main@temperature+1)^(0+128),w
  1215     0114  00F5               	movwf	___flge@ff2+1
  1216     0115  084E               	movf	main@temperature^(0+128),w
  1217     0116  00F4               	movwf	___flge@ff2
  1218     0117  120A  158A  260C  120A  118A  	fcall	___flge
  1219     011C  1803               	btfsc	3,0
  1220     011D  2920               	goto	l2138
  1221     011E  3012               	movlw	18
  1222     011F  2921               	goto	L1
  1223     0120                     l2138:
  1224     0120  3009               	movlw	9
  1225     0121                     L1:
  1226     0121  1283               	bcf	3,5	;RP0=0, select bank0
  1227     0122  0095               	movwf	21	;volatile
  1228     0123  300B               	movlw	11
  1229     0124  1283               	bcf	3,5	;RP0=0, select bank0
  1230     0125  1303               	bcf	3,6	;RP1=0, select bank0
  1231     0126  00E0               	movwf	??_main+2
  1232     0127  3026               	movlw	38
  1233     0128  00DF               	movwf	??_main+1
  1234     0129  305D               	movlw	93
  1235     012A  00DE               	movwf	??_main
  1236     012B                     u3477:
  1237     012B  0BDE               	decfsz	??_main,f
  1238     012C  292B               	goto	u3477
  1239     012D  0BDF               	decfsz	??_main+1,f
  1240     012E  292B               	goto	u3477
  1241     012F  0BE0               	decfsz	??_main+2,f
  1242     0130  292B               	goto	u3477
  1243     0131  288D               	goto	l2118
  1244     0132                     __end_of_main:
  1245                           
  1246                           	psect	text1
  1247     0B6C                     __ptext1:	
  1248 ;; *************** function _sprintf *****************
  1249 ;; Defined at:
  1250 ;;		line 9 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_sprintf.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  s               1    wreg     PTR unsigned char 
  1253 ;;		 -> main@rpm(10), 
  1254 ;;  fmt             1    9[BANK0 ] PTR const unsigned char 
  1255 ;;		 -> STR_3(3), 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  s               1   14[BANK0 ] PTR unsigned char 
  1258 ;;		 -> main@rpm(10), 
  1259 ;;  f              11   15[BANK0 ] struct _IO_FILE
  1260 ;;  ret             2    0        int 
  1261 ;;  ap              1   13[BANK0 ] PTR void [1]
  1262 ;;		 -> ?_sprintf(2), 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    9[BANK0 ] int 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 300/0
  1269 ;;		On exit  : B00/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       3       0       0       0
  1273 ;;      Locals:         0      13       0       0       0
  1274 ;;      Temps:          0       1       0       0       0
  1275 ;;      Totals:         0      17       0       0       0
  1276 ;;Total ram usage:       17 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 4
  1279 ;; This function calls:
  1280 ;;		_vfprintf
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286     0B6C                     _sprintf:	
  1287                           ;psect for function _sprintf
  1288                           
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1292                           ;sprintf@s stored from wreg
  1293     0B6C  00AE               	movwf	sprintf@s
  1294     0B6D  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1295     0B6E  00AD               	movwf	sprintf@ap
  1296     0B6F  082E               	movf	sprintf@s,w
  1297     0B70  00AF               	movwf	sprintf@f
  1298     0B71  01B1               	clrf	sprintf@f+2
  1299     0B72  01B2               	clrf	sprintf@f+3
  1300     0B73  01B8               	clrf	sprintf@f+9
  1301     0B74  01B9               	clrf	sprintf@f+10
  1302     0B75  0829               	movf	sprintf@fmt,w
  1303     0B76  00FC               	movwf	vfprintf@fmt
  1304     0B77  302D               	movlw	(low (sprintf@ap| 0))& (0+255)
  1305     0B78  00FD               	movwf	vfprintf@ap
  1306     0B79  302F               	movlw	(low (sprintf@f| 0))& (0+255)
  1307     0B7A  120A  158A  2385   	fcall	_vfprintf
  1308     0B7D  0831               	movf	sprintf@f+2,w
  1309     0B7E  072E               	addwf	sprintf@s,w
  1310     0B7F  00AC               	movwf	??_sprintf
  1311     0B80  082C               	movf	??_sprintf,w
  1312     0B81  0084               	movwf	4
  1313     0B82  1383               	bcf	3,7	;select IRP bank0
  1314     0B83  0180               	clrf	0
  1315     0B84  0008               	return
  1316     0B85                     __end_of_sprintf:
  1317                           
  1318                           	psect	text2
  1319     0B85                     __ptext2:	
  1320 ;; *************** function _vfprintf *****************
  1321 ;; Defined at:
  1322 ;;		line 1817 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  fp              1    wreg     PTR struct _IO_FILE
  1325 ;;		 -> sprintf@f(11), 
  1326 ;;  fmt             1   12[COMMON] PTR const unsigned char 
  1327 ;;		 -> STR_3(3), 
  1328 ;;  ap              1   13[COMMON] PTR PTR void 
  1329 ;;		 -> sprintf@ap(1), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  1332 ;;		 -> sprintf@f(11), 
  1333 ;;  cfmt            1    8[BANK0 ] PTR unsigned char 
  1334 ;;		 -> STR_3(3), 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2   12[COMMON] int 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 300/0
  1341 ;;		On exit  : 300/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         2       0       0       0       0
  1345 ;;      Locals:         0       2       0       0       0
  1346 ;;      Temps:          0       0       0       0       0
  1347 ;;      Totals:         2       2       0       0       0
  1348 ;;Total ram usage:        4 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 3
  1351 ;; This function calls:
  1352 ;;		_vfpfcnvrt
  1353 ;; This function is called by:
  1354 ;;		_sprintf
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358     0B85                     _vfprintf:	
  1359                           ;psect for function _vfprintf
  1360                           
  1361                           
  1362                           ;incstack = 0
  1363                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1364                           ;vfprintf@fp stored from wreg
  1365     0B85  00A7               	movwf	vfprintf@fp
  1366                           
  1367                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  1368     0B86  087C               	movf	vfprintf@fmt,w
  1369     0B87  00A8               	movwf	vfprintf@cfmt
  1370     0B88                     l1950:	
  1371                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  1372                           
  1373                           
  1374                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  1375     0B88  1283               	bcf	3,5	;RP0=0, select bank0
  1376     0B89  1303               	bcf	3,6	;RP1=0, select bank0
  1377     0B8A  0828               	movf	vfprintf@cfmt,w
  1378     0B8B  0084               	movwf	4
  1379     0B8C  120A  158A  200A  120A  158A  	fcall	stringdir
  1380     0B91  3A00               	xorlw	0
  1381     0B92  1903               	btfsc	3,2
  1382     0B93  2B9F               	goto	l1952
  1383                           
  1384                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  1385     0B94  3028               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1386     0B95  00F8               	movwf	vfpfcnvrt@fmt
  1387     0B96  087D               	movf	vfprintf@ap,w
  1388     0B97  00F9               	movwf	vfpfcnvrt@ap
  1389     0B98  0827               	movf	vfprintf@fp,w
  1390     0B99  120A  158A  2740  120A  158A  	fcall	_vfpfcnvrt
  1391     0B9E  2B88               	goto	l1950
  1392     0B9F                     l1952:
  1393                           
  1394                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  1395     0B9F  01FC               	clrf	?_vfprintf
  1396     0BA0  01FD               	clrf	?_vfprintf+1
  1397     0BA1  0008               	return
  1398     0BA2                     __end_of_vfprintf:
  1399                           
  1400                           	psect	text3
  1401     0F40                     __ptext3:	
  1402 ;; *************** function _vfpfcnvrt *****************
  1403 ;; Defined at:
  1404 ;;		line 1177 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  fp              1    wreg     PTR struct _IO_FILE
  1407 ;;		 -> sprintf@f(11), 
  1408 ;;  fmt             1    8[COMMON] PTR PTR unsigned char 
  1409 ;;		 -> vfprintf@cfmt(1), 
  1410 ;;  ap              1    9[COMMON] PTR PTR void 
  1411 ;;		 -> sprintf@ap(1), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  1414 ;;		 -> sprintf@f(11), 
  1415 ;;  convarg         4    1[BANK0 ] struct .
  1416 ;;  c               1    6[BANK0 ] unsigned char 
  1417 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  1418 ;;		 -> STR_3(3), 
  1419 ;;  done            1    0        _Bool 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 300/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         2       0       0       0       0
  1430 ;;      Locals:         0       7       0       0       0
  1431 ;;      Temps:          2       0       0       0       0
  1432 ;;      Totals:         4       7       0       0       0
  1433 ;;Total ram usage:       11 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 2
  1436 ;; This function calls:
  1437 ;;		___lwdiv
  1438 ;;		___lwmod
  1439 ;;		_fputc
  1440 ;; This function is called by:
  1441 ;;		_vfprintf
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445     0F40                     _vfpfcnvrt:	
  1446                           ;psect for function _vfpfcnvrt
  1447                           
  1448                           
  1449                           ;incstack = 0
  1450                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1451                           ;vfpfcnvrt@fp stored from wreg
  1452     0F40  00A0               	movwf	vfpfcnvrt@fp
  1453                           
  1454                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.45/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  1455     0F41  0878               	movf	vfpfcnvrt@fmt,w
  1456     0F42  0084               	movwf	4
  1457     0F43  1383               	bcf	3,7	;select IRP bank0
  1458     0F44  0800               	movf	0,w
  1459     0F45  0084               	movwf	4
  1460     0F46  120A  158A  200A  120A  158A  	fcall	stringdir
  1461     0F4B  3A25               	xorlw	37
  1462     0F4C  1D03               	skipz
  1463     0F4D  2FE9               	goto	l1596
  1464                           
  1465                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  1466     0F4E  3001               	movlw	1
  1467     0F4F  00FA               	movwf	??_vfpfcnvrt
  1468     0F50  0878               	movf	vfpfcnvrt@fmt,w
  1469     0F51  0084               	movwf	4
  1470     0F52  087A               	movf	??_vfpfcnvrt,w
  1471     0F53  0780               	addwf	0,f
  1472                           
  1473                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  1474     0F54  01E2               	clrf	_width
  1475     0F55  01E3               	clrf	_width+1
  1476     0F56  1003               	clrc
  1477     0F57  3000               	movlw	0
  1478     0F58  1803               	btfsc	3,0
  1479     0F59  3001               	movlw	1
  1480     0F5A  00E6               	movwf	_flags
  1481                           
  1482                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  1483     0F5B  30FF               	movlw	255
  1484     0F5C  00E4               	movwf	_prec
  1485     0F5D  30FF               	movlw	255
  1486     0F5E  00E5               	movwf	_prec+1
  1487                           
  1488                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1439:   if (0
  1489     0F5F  0878               	movf	vfpfcnvrt@fmt,w
  1490     0F60  0084               	movwf	4
  1491     0F61  0800               	movf	0,w
  1492     0F62  00A5               	movwf	vfpfcnvrt@cp
  1493     0F63  0825               	movf	vfpfcnvrt@cp,w
  1494     0F64  0084               	movwf	4
  1495     0F65  120A  158A  200A  120A  158A  	fcall	stringdir
  1496     0F6A  3A75               	xorlw	117
  1497     0F6B  1D03               	skipz
  1498     0F6C  2FE1               	goto	l1592
  1499                           
  1500                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  1501     0F6D  0879               	movf	vfpfcnvrt@ap,w
  1502     0F6E  0084               	movwf	4
  1503     0F6F  0800               	movf	0,w
  1504     0F70  00FA               	movwf	??_vfpfcnvrt
  1505     0F71  3002               	movlw	2
  1506     0F72  0780               	addwf	0,f
  1507     0F73  087A               	movf	??_vfpfcnvrt,w
  1508     0F74  0084               	movwf	4
  1509     0F75  0800               	movf	0,w
  1510     0F76  00A1               	movwf	vfpfcnvrt@convarg
  1511     0F77  0A84               	incf	4,f
  1512     0F78  0800               	movf	0,w
  1513     0F79  00A2               	movwf	vfpfcnvrt@convarg+1
  1514                           
  1515                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  1516     0F7A  0878               	movf	vfpfcnvrt@fmt,w
  1517     0F7B  0084               	movwf	4
  1518     0F7C  0825               	movf	vfpfcnvrt@cp,w
  1519     0F7D  3E01               	addlw	1
  1520     0F7E  0080               	movwf	0
  1521                           
  1522                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  1523     0F7F  2FCE               	goto	l1590
  1524     0F80                     l1572:
  1525                           
  1526                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1525:      c = sizeo
      +                          f(dbuf);
  1527     0F80  3020               	movlw	32
  1528     0F81  00A6               	movwf	vfpfcnvrt@c
  1529     0F82                     l1574:
  1530                           
  1531                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1527:       dbuf[--c
      +                          ] = (convarg.uint % 10) + '0';
  1532     0F82  3001               	movlw	1
  1533     0F83  02A6               	subwf	vfpfcnvrt@c,f
  1534     0F84  0826               	movf	vfpfcnvrt@c,w
  1535     0F85  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1536     0F86  0084               	movwf	4
  1537     0F87  300A               	movlw	10
  1538     0F88  00F0               	movwf	___lwmod@divisor
  1539     0F89  3000               	movlw	0
  1540     0F8A  00F1               	movwf	___lwmod@divisor+1
  1541     0F8B  0822               	movf	vfpfcnvrt@convarg+1,w
  1542     0F8C  00F3               	movwf	___lwmod@dividend+1
  1543     0F8D  0821               	movf	vfpfcnvrt@convarg,w
  1544     0F8E  00F2               	movwf	___lwmod@dividend
  1545     0F8F  120A  158A  2485  120A  158A  	fcall	___lwmod
  1546     0F94  0870               	movf	?___lwmod,w
  1547     0F95  3E30               	addlw	48
  1548     0F96  1383               	bcf	3,7	;select IRP bank1
  1549     0F97  0080               	movwf	0
  1550                           
  1551                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1528:       convarg.
      +                          uint /= 10;
  1552     0F98  300A               	movlw	10
  1553     0F99  00F0               	movwf	___lwdiv@divisor
  1554     0F9A  3000               	movlw	0
  1555     0F9B  00F1               	movwf	___lwdiv@divisor+1
  1556     0F9C  0822               	movf	vfpfcnvrt@convarg+1,w
  1557     0F9D  00F3               	movwf	___lwdiv@dividend+1
  1558     0F9E  0821               	movf	vfpfcnvrt@convarg,w
  1559     0F9F  00F2               	movwf	___lwdiv@dividend
  1560     0FA0  120A  158A  24B7  120A  158A  	fcall	___lwdiv
  1561     0FA5  0871               	movf	?___lwdiv+1,w
  1562     0FA6  00A2               	movwf	vfpfcnvrt@convarg+1
  1563     0FA7  0870               	movf	?___lwdiv,w
  1564     0FA8  00A1               	movwf	vfpfcnvrt@convarg
  1565                           
  1566                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1532:      } while (
      +                          convarg.uint != 0 && c != 0);
  1567     0FA9  0821               	movf	vfpfcnvrt@convarg,w
  1568     0FAA  0422               	iorwf	vfpfcnvrt@convarg+1,w
  1569     0FAB  1903               	btfsc	3,2
  1570     0FAC  2FC9               	goto	l1586
  1571     0FAD  0826               	movf	vfpfcnvrt@c,w
  1572     0FAE  1903               	btfsc	3,2
  1573     0FAF  2FC9               	goto	l1586
  1574     0FB0  2F82               	goto	l1574
  1575     0FB1                     l1582:
  1576                           
  1577                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1534:       fputc(db
      +                          uf[c++], fp);
  1578     0FB1  0826               	movf	vfpfcnvrt@c,w
  1579     0FB2  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1580     0FB3  0084               	movwf	4
  1581     0FB4  1383               	bcf	3,7	;select IRP bank1
  1582     0FB5  0800               	movf	0,w
  1583     0FB6  00FA               	movwf	??_vfpfcnvrt
  1584     0FB7  01FB               	clrf	??_vfpfcnvrt+1
  1585     0FB8  087A               	movf	??_vfpfcnvrt,w
  1586     0FB9  00F0               	movwf	fputc@c
  1587     0FBA  087B               	movf	??_vfpfcnvrt+1,w
  1588     0FBB  00F1               	movwf	fputc@c+1
  1589     0FBC  0820               	movf	vfpfcnvrt@fp,w
  1590     0FBD  00F2               	movwf	fputc@fp
  1591     0FBE  120A  158A  24F3  120A  158A  	fcall	_fputc
  1592     0FC3  3001               	movlw	1
  1593     0FC4  00FA               	movwf	??_vfpfcnvrt
  1594     0FC5  087A               	movf	??_vfpfcnvrt,w
  1595     0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0FC8  07A6               	addwf	vfpfcnvrt@c,f
  1598     0FC9                     l1586:
  1599                           
  1600                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1533:      while (c 
      +                          != sizeof(dbuf)) {
  1601     0FC9  3020               	movlw	32
  1602     0FCA  0626               	xorwf	vfpfcnvrt@c,w
  1603     0FCB  1903               	btfsc	3,2
  1604     0FCC  0008               	return
  1605     0FCD  2FB1               	goto	l1582
  1606     0FCE                     l1590:
  1607     0FCE  0825               	movf	vfpfcnvrt@cp,w
  1608     0FCF  0084               	movwf	4
  1609     0FD0  120A  158A  200A  120A  158A  	fcall	stringdir
  1610     0FD5  00FA               	movwf	??_vfpfcnvrt
  1611     0FD6  01FB               	clrf	??_vfpfcnvrt+1
  1612                           
  1613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1614                           ; Switch size 1, requested type "simple"
  1615                           ; Number of cases is 1, Range of values is 0 to 0
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte            4     3 (average)
  1619                           ; direct_byte           11     8 (fixed)
  1620                           ; jumptable            260     6 (fixed)
  1621                           ;	Chosen strategy is simple_byte
  1622     0FD7  087B               	movf	??_vfpfcnvrt+1,w
  1623     0FD8  3A00               	xorlw	0	; case 0
  1624     0FD9  1903               	skipnz
  1625     0FDA  2FDC               	goto	l2190
  1626     0FDB  2FE1               	goto	l1592
  1627     0FDC                     l2190:
  1628                           
  1629                           ; Switch size 1, requested type "simple"
  1630                           ; Number of cases is 1, Range of values is 117 to 117
  1631                           ; switch strategies available:
  1632                           ; Name         Instructions Cycles
  1633                           ; simple_byte            4     3 (average)
  1634                           ; direct_byte           14    11 (fixed)
  1635                           ; jumptable            263     9 (fixed)
  1636                           ;	Chosen strategy is simple_byte
  1637     0FDC  087A               	movf	??_vfpfcnvrt,w
  1638     0FDD  3A75               	xorlw	117	; case 117
  1639     0FDE  1903               	skipnz
  1640     0FDF  2F80               	goto	l1572
  1641     0FE0  2FE1               	goto	l1592
  1642     0FE1                     l1592:
  1643                           
  1644                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  1645     0FE1  3001               	movlw	1
  1646     0FE2  00FA               	movwf	??_vfpfcnvrt
  1647     0FE3  0878               	movf	vfpfcnvrt@fmt,w
  1648     0FE4  0084               	movwf	4
  1649     0FE5  087A               	movf	??_vfpfcnvrt,w
  1650     0FE6  1383               	bcf	3,7	;select IRP bank0
  1651     0FE7  0780               	addwf	0,f
  1652     0FE8  0008               	return
  1653     0FE9                     l1596:
  1654                           
  1655                           ;/Applications/microchip/xc8/v2.45/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  1656     0FE9  0878               	movf	vfpfcnvrt@fmt,w
  1657     0FEA  0084               	movwf	4
  1658     0FEB  0800               	movf	0,w
  1659     0FEC  0084               	movwf	4
  1660     0FED  120A  158A  200A  120A  158A  	fcall	stringdir
  1661     0FF2  00FA               	movwf	??_vfpfcnvrt
  1662     0FF3  01FB               	clrf	??_vfpfcnvrt+1
  1663     0FF4  087A               	movf	??_vfpfcnvrt,w
  1664     0FF5  00F0               	movwf	fputc@c
  1665     0FF6  087B               	movf	??_vfpfcnvrt+1,w
  1666     0FF7  00F1               	movwf	fputc@c+1
  1667     0FF8  0820               	movf	vfpfcnvrt@fp,w
  1668     0FF9  00F2               	movwf	fputc@fp
  1669     0FFA  120A  158A  24F3  120A  158A  	fcall	_fputc
  1670     0FFF  2FE1               	goto	l1592
  1671     1000                     __end_of_vfpfcnvrt:
  1672                           
  1673                           	psect	text4
  1674     0CF3                     __ptext4:	
  1675 ;; *************** function _fputc *****************
  1676 ;; Defined at:
  1677 ;;		line 8 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/nf_fputc.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  c               2    0[COMMON] int 
  1680 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  1681 ;;		 -> sprintf@f(11), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2    0[COMMON] int 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : B00/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         3       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          5       0       0       0       0
  1696 ;;      Totals:         8       0       0       0       0
  1697 ;;Total ram usage:        8 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 1
  1700 ;; This function calls:
  1701 ;;		_putch
  1702 ;; This function is called by:
  1703 ;;		_vfpfcnvrt
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707     0CF3                     _fputc:	
  1708                           ;psect for function _fputc
  1709                           
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1713     0CF3  0872               	movf	fputc@fp,w
  1714     0CF4  1D03               	btfss	3,2
  1715     0CF5  0872               	movf	fputc@fp,w
  1716     0CF6  1D03               	btfss	3,2
  1717     0CF7  2CFD               	goto	l1536
  1718     0CF8  0870               	movf	fputc@c,w
  1719     0CF9  120A  158A  2308   	fcall	_putch
  1720     0CFC  0008               	return
  1721     0CFD                     l1536:
  1722     0CFD  0872               	movf	fputc@fp,w
  1723     0CFE  3E09               	addlw	9
  1724     0CFF  0084               	movwf	4
  1725     0D00  0800               	movf	0,w
  1726     0D01  00F3               	movwf	??_fputc
  1727     0D02  0A84               	incf	4,f
  1728     0D03  0800               	movf	0,w
  1729     0D04  00F4               	movwf	??_fputc+1
  1730     0D05  0873               	movf	??_fputc,w
  1731     0D06  0474               	iorwf	??_fputc+1,w
  1732     0D07  1903               	btfsc	3,2
  1733     0D08  2D25               	goto	l1540
  1734     0D09  0872               	movf	fputc@fp,w
  1735     0D0A  3E09               	addlw	9
  1736     0D0B  0084               	movwf	4
  1737     0D0C  0800               	movf	0,w
  1738     0D0D  00F3               	movwf	??_fputc
  1739     0D0E  0A84               	incf	4,f
  1740     0D0F  0800               	movf	0,w
  1741     0D10  00F4               	movwf	??_fputc+1
  1742     0D11  0872               	movf	fputc@fp,w
  1743     0D12  3E02               	addlw	2
  1744     0D13  0084               	movwf	4
  1745     0D14  0800               	movf	0,w
  1746     0D15  00F5               	movwf	??_fputc+2
  1747     0D16  0A84               	incf	4,f
  1748     0D17  0800               	movf	0,w
  1749     0D18  00F6               	movwf	??_fputc+3
  1750     0D19  0876               	movf	??_fputc+3,w
  1751     0D1A  3A80               	xorlw	128
  1752     0D1B  00F7               	movwf	??_fputc+4
  1753     0D1C  0874               	movf	??_fputc+1,w
  1754     0D1D  3A80               	xorlw	128
  1755     0D1E  0277               	subwf	??_fputc+4,w
  1756     0D1F  1D03               	skipz
  1757     0D20  2D23               	goto	u1935
  1758     0D21  0873               	movf	??_fputc,w
  1759     0D22  0275               	subwf	??_fputc+2,w
  1760     0D23                     u1935:
  1761     0D23  1803               	skipnc
  1762     0D24  0008               	return
  1763     0D25                     l1540:
  1764     0D25  0872               	movf	fputc@fp,w
  1765     0D26  3E02               	addlw	2
  1766     0D27  0084               	movwf	4
  1767     0D28  1383               	bcf	3,7	;select IRP bank0
  1768     0D29  0800               	movf	0,w
  1769     0D2A  00F3               	movwf	??_fputc
  1770     0D2B  0872               	movf	fputc@fp,w
  1771     0D2C  0084               	movwf	4
  1772     0D2D  0800               	movf	0,w
  1773     0D2E  0773               	addwf	??_fputc,w
  1774     0D2F  00F4               	movwf	??_fputc+1
  1775     0D30  0874               	movf	??_fputc+1,w
  1776     0D31  0084               	movwf	4
  1777     0D32  0870               	movf	fputc@c,w
  1778     0D33  0080               	movwf	0
  1779     0D34  0872               	movf	fputc@fp,w
  1780     0D35  3E02               	addlw	2
  1781     0D36  0084               	movwf	4
  1782     0D37  3001               	movlw	1
  1783     0D38  0780               	addwf	0,f
  1784     0D39  0A84               	incf	4,f
  1785     0D3A  1803               	skipnc
  1786     0D3B  0A80               	incf	0,f
  1787     0D3C  0008               	return
  1788     0D3D                     __end_of_fputc:
  1789                           
  1790                           	psect	text5
  1791     0B08                     __ptext5:	
  1792 ;; *************** function _putch *****************
  1793 ;; Defined at:
  1794 ;;		line 7 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/putch.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  c               1    wreg     unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  c               1    0[COMMON] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg
  1803 ;; Tracked objects:
  1804 ;;		On entry : B00/0
  1805 ;;		On exit  : B00/0
  1806 ;;		Unchanged: B00/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_fputc
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821     0B08                     _putch:	
  1822                           ;psect for function _putch
  1823                           
  1824                           
  1825                           ;incstack = 0
  1826                           ; Regs used in _putch: [wreg]
  1827     0B08  0008               	return
  1828     0B09                     __end_of_putch:
  1829                           
  1830                           	psect	text6
  1831     0C85                     __ptext6:	
  1832 ;; *************** function ___lwmod *****************
  1833 ;; Defined at:
  1834 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/lwmod.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  divisor         2    0[COMMON] unsigned int 
  1837 ;;  dividend        2    2[COMMON] unsigned int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  counter         1    5[COMMON] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    0[COMMON] unsigned int 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 300/0
  1846 ;;		On exit  : 300/0
  1847 ;;		Unchanged: 300/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         4       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0
  1851 ;;      Temps:          1       0       0       0       0
  1852 ;;      Totals:         6       0       0       0       0
  1853 ;;Total ram usage:        6 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_vfpfcnvrt
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     0C85                     ___lwmod:	
  1863                           ;psect for function ___lwmod
  1864                           
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1868     0C85  0870               	movf	___lwmod@divisor,w
  1869     0C86  0471               	iorwf	___lwmod@divisor+1,w
  1870     0C87  1903               	btfsc	3,2
  1871     0C88  2CB2               	goto	l1526
  1872     0C89  01F5               	clrf	___lwmod@counter
  1873     0C8A  0AF5               	incf	___lwmod@counter,f
  1874     0C8B                     l1516:
  1875     0C8B  1BF1               	btfsc	___lwmod@divisor+1,7
  1876     0C8C  2C99               	goto	l1518
  1877     0C8D  3001               	movlw	1
  1878     0C8E                     u1855:
  1879     0C8E  1003               	clrc
  1880     0C8F  0DF0               	rlf	___lwmod@divisor,f
  1881     0C90  0DF1               	rlf	___lwmod@divisor+1,f
  1882     0C91  3EFF               	addlw	-1
  1883     0C92  1D03               	skipz
  1884     0C93  2C8E               	goto	u1855
  1885     0C94  3001               	movlw	1
  1886     0C95  00F4               	movwf	??___lwmod
  1887     0C96  0874               	movf	??___lwmod,w
  1888     0C97  07F5               	addwf	___lwmod@counter,f
  1889     0C98  2C8B               	goto	l1516
  1890     0C99                     l1518:
  1891     0C99  0871               	movf	___lwmod@divisor+1,w
  1892     0C9A  0273               	subwf	___lwmod@dividend+1,w
  1893     0C9B  1D03               	skipz
  1894     0C9C  2C9F               	goto	u1875
  1895     0C9D  0870               	movf	___lwmod@divisor,w
  1896     0C9E  0272               	subwf	___lwmod@dividend,w
  1897     0C9F                     u1875:
  1898     0C9F  1C03               	skipc
  1899     0CA0  2CA7               	goto	l1522
  1900     0CA1  0870               	movf	___lwmod@divisor,w
  1901     0CA2  02F2               	subwf	___lwmod@dividend,f
  1902     0CA3  0871               	movf	___lwmod@divisor+1,w
  1903     0CA4  1C03               	skipc
  1904     0CA5  03F3               	decf	___lwmod@dividend+1,f
  1905     0CA6  02F3               	subwf	___lwmod@dividend+1,f
  1906     0CA7                     l1522:
  1907     0CA7  3001               	movlw	1
  1908     0CA8                     u1885:
  1909     0CA8  1003               	clrc
  1910     0CA9  0CF1               	rrf	___lwmod@divisor+1,f
  1911     0CAA  0CF0               	rrf	___lwmod@divisor,f
  1912     0CAB  3EFF               	addlw	-1
  1913     0CAC  1D03               	skipz
  1914     0CAD  2CA8               	goto	u1885
  1915     0CAE  3001               	movlw	1
  1916     0CAF  02F5               	subwf	___lwmod@counter,f
  1917     0CB0  1D03               	btfss	3,2
  1918     0CB1  2C99               	goto	l1518
  1919     0CB2                     l1526:
  1920     0CB2  0873               	movf	___lwmod@dividend+1,w
  1921     0CB3  00F1               	movwf	?___lwmod+1
  1922     0CB4  0872               	movf	___lwmod@dividend,w
  1923     0CB5  00F0               	movwf	?___lwmod
  1924     0CB6  0008               	return
  1925     0CB7                     __end_of___lwmod:
  1926                           
  1927                           	psect	text7
  1928     0CB7                     __ptext7:	
  1929 ;; *************** function ___lwdiv *****************
  1930 ;; Defined at:
  1931 ;;		line 5 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/lwdiv.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  divisor         2    0[COMMON] unsigned int 
  1934 ;;  dividend        2    2[COMMON] unsigned int 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  quotient        2    5[COMMON] unsigned int 
  1937 ;;  counter         1    7[COMMON] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  2    0[COMMON] unsigned int 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : B00/0
  1944 ;;		On exit  : B00/0
  1945 ;;		Unchanged: B00/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         4       0       0       0       0
  1948 ;;      Locals:         3       0       0       0       0
  1949 ;;      Temps:          1       0       0       0       0
  1950 ;;      Totals:         8       0       0       0       0
  1951 ;;Total ram usage:        8 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_vfpfcnvrt
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960     0CB7                     ___lwdiv:	
  1961                           ;psect for function ___lwdiv
  1962                           
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1966     0CB7  01F5               	clrf	___lwdiv@quotient
  1967     0CB8  01F6               	clrf	___lwdiv@quotient+1
  1968     0CB9  0870               	movf	___lwdiv@divisor,w
  1969     0CBA  0471               	iorwf	___lwdiv@divisor+1,w
  1970     0CBB  1903               	btfsc	3,2
  1971     0CBC  2CEE               	goto	l1504
  1972     0CBD  01F7               	clrf	___lwdiv@counter
  1973     0CBE  0AF7               	incf	___lwdiv@counter,f
  1974     0CBF                     l1492:
  1975     0CBF  1BF1               	btfsc	___lwdiv@divisor+1,7
  1976     0CC0  2CCD               	goto	l1494
  1977     0CC1  3001               	movlw	1
  1978     0CC2                     u1785:
  1979     0CC2  1003               	clrc
  1980     0CC3  0DF0               	rlf	___lwdiv@divisor,f
  1981     0CC4  0DF1               	rlf	___lwdiv@divisor+1,f
  1982     0CC5  3EFF               	addlw	-1
  1983     0CC6  1D03               	skipz
  1984     0CC7  2CC2               	goto	u1785
  1985     0CC8  3001               	movlw	1
  1986     0CC9  00F4               	movwf	??___lwdiv
  1987     0CCA  0874               	movf	??___lwdiv,w
  1988     0CCB  07F7               	addwf	___lwdiv@counter,f
  1989     0CCC  2CBF               	goto	l1492
  1990     0CCD                     l1494:
  1991     0CCD  3001               	movlw	1
  1992     0CCE                     u1805:
  1993     0CCE  1003               	clrc
  1994     0CCF  0DF5               	rlf	___lwdiv@quotient,f
  1995     0CD0  0DF6               	rlf	___lwdiv@quotient+1,f
  1996     0CD1  3EFF               	addlw	-1
  1997     0CD2  1D03               	skipz
  1998     0CD3  2CCE               	goto	u1805
  1999     0CD4  0871               	movf	___lwdiv@divisor+1,w
  2000     0CD5  0273               	subwf	___lwdiv@dividend+1,w
  2001     0CD6  1D03               	skipz
  2002     0CD7  2CDA               	goto	u1815
  2003     0CD8  0870               	movf	___lwdiv@divisor,w
  2004     0CD9  0272               	subwf	___lwdiv@dividend,w
  2005     0CDA                     u1815:
  2006     0CDA  1C03               	skipc
  2007     0CDB  2CE3               	goto	l1500
  2008     0CDC  0870               	movf	___lwdiv@divisor,w
  2009     0CDD  02F2               	subwf	___lwdiv@dividend,f
  2010     0CDE  0871               	movf	___lwdiv@divisor+1,w
  2011     0CDF  1C03               	skipc
  2012     0CE0  03F3               	decf	___lwdiv@dividend+1,f
  2013     0CE1  02F3               	subwf	___lwdiv@dividend+1,f
  2014     0CE2  1475               	bsf	___lwdiv@quotient,0
  2015     0CE3                     l1500:
  2016     0CE3  3001               	movlw	1
  2017     0CE4                     u1825:
  2018     0CE4  1003               	clrc
  2019     0CE5  0CF1               	rrf	___lwdiv@divisor+1,f
  2020     0CE6  0CF0               	rrf	___lwdiv@divisor,f
  2021     0CE7  3EFF               	addlw	-1
  2022     0CE8  1D03               	skipz
  2023     0CE9  2CE4               	goto	u1825
  2024     0CEA  3001               	movlw	1
  2025     0CEB  02F7               	subwf	___lwdiv@counter,f
  2026     0CEC  1D03               	btfss	3,2
  2027     0CED  2CCD               	goto	l1494
  2028     0CEE                     l1504:
  2029     0CEE  0876               	movf	___lwdiv@quotient+1,w
  2030     0CEF  00F1               	movwf	?___lwdiv+1
  2031     0CF0  0875               	movf	___lwdiv@quotient,w
  2032     0CF1  00F0               	movwf	?___lwdiv
  2033     0CF2  0008               	return
  2034     0CF3                     __end_of___lwdiv:
  2035                           
  2036                           	psect	text8
  2037     0D3D                     __ptext8:	
  2038 ;; *************** function _readTemperature *****************
  2039 ;; Defined at:
  2040 ;;		line 77 in file "newmain.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  voltage         4   56[BANK0 ] unsigned int 
  2045 ;;  adcValue        2   60[BANK0 ] unsigned int 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  4   52[BANK0 ] unsigned int 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 300/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       4       0       0       0
  2056 ;;      Locals:         0       6       0       0       0
  2057 ;;      Temps:          0       0       0       0       0
  2058 ;;      Totals:         0      10       0       0       0
  2059 ;;Total ram usage:       10 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 2
  2062 ;; This function calls:
  2063 ;;		___fldiv
  2064 ;;		___flmul
  2065 ;;		___xxtofl
  2066 ;;		_readADC
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072     0D3D                     _readTemperature:	
  2073                           ;psect for function _readTemperature
  2074                           
  2075                           
  2076                           ;newmain.c: 78:     Lcd_PinConfig lcd = {
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in _readTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2080     0D3D  120A  158A  2324  120A  158A  	fcall	_readADC
  2081     0D42  0871               	movf	?_readADC+1,w
  2082     0D43  1283               	bcf	3,5	;RP0=0, select bank0
  2083     0D44  00DD               	movwf	readTemperature@adcValue+1
  2084     0D45  0870               	movf	?_readADC,w
  2085     0D46  00DC               	movwf	readTemperature@adcValue
  2086                           
  2087                           ;newmain.c: 79:         .port = &PORTD,
  2088     0D47  3040               	movlw	64
  2089     0D48  00BD               	movwf	___flmul@b+3
  2090     0D49  30A0               	movlw	160
  2091     0D4A  00BC               	movwf	___flmul@b+2
  2092     0D4B  3000               	movlw	0
  2093     0D4C  00BB               	movwf	___flmul@b+1
  2094     0D4D  3000               	movlw	0
  2095     0D4E  00BA               	movwf	___flmul@b
  2096     0D4F  3044               	movlw	68
  2097     0D50  00A3               	movwf	___fldiv@a+3
  2098     0D51  3080               	movlw	128
  2099     0D52  00A2               	movwf	___fldiv@a+2
  2100     0D53  3000               	movlw	0
  2101     0D54  00A1               	movwf	___fldiv@a+1
  2102     0D55  3000               	movlw	0
  2103     0D56  00A0               	movwf	___fldiv@a
  2104     0D57  085C               	movf	readTemperature@adcValue,w
  2105     0D58  00F0               	movwf	___xxtofl@val
  2106     0D59  085D               	movf	readTemperature@adcValue+1,w
  2107     0D5A  00F1               	movwf	___xxtofl@val+1
  2108     0D5B  01F2               	clrf	___xxtofl@val+2
  2109     0D5C  01F3               	clrf	___xxtofl@val+3
  2110     0D5D  3000               	movlw	0
  2111     0D5E  120A  158A  269F  120A  158A  	fcall	___xxtofl
  2112     0D63  0873               	movf	?___xxtofl+3,w
  2113     0D64  00A7               	movwf	___fldiv@b+3
  2114     0D65  0872               	movf	?___xxtofl+2,w
  2115     0D66  00A6               	movwf	___fldiv@b+2
  2116     0D67  0871               	movf	?___xxtofl+1,w
  2117     0D68  00A5               	movwf	___fldiv@b+1
  2118     0D69  0870               	movf	?___xxtofl,w
  2119     0D6A  00A4               	movwf	___fldiv@b
  2120     0D6B  120A  118A  2373  120A  158A  	fcall	___fldiv
  2121     0D70  0823               	movf	?___fldiv+3,w
  2122     0D71  00C1               	movwf	___flmul@a+3
  2123     0D72  0822               	movf	?___fldiv+2,w
  2124     0D73  00C0               	movwf	___flmul@a+2
  2125     0D74  0821               	movf	?___fldiv+1,w
  2126     0D75  00BF               	movwf	___flmul@a+1
  2127     0D76  0820               	movf	?___fldiv,w
  2128     0D77  00BE               	movwf	___flmul@a
  2129     0D78  120A  118A  250A  120A  158A  	fcall	___flmul
  2130     0D7D  083D               	movf	?___flmul+3,w
  2131     0D7E  00DB               	movwf	readTemperature@voltage+3
  2132     0D7F  083C               	movf	?___flmul+2,w
  2133     0D80  00DA               	movwf	readTemperature@voltage+2
  2134     0D81  083B               	movf	?___flmul+1,w
  2135     0D82  00D9               	movwf	readTemperature@voltage+1
  2136     0D83  083A               	movf	?___flmul,w
  2137     0D84  00D8               	movwf	readTemperature@voltage
  2138                           
  2139                           ;newmain.c: 80:         .rs_pin = 2,
  2140     0D85  303C               	movlw	60
  2141     0D86  00A3               	movwf	___fldiv@a+3
  2142     0D87  3023               	movlw	35
  2143     0D88  00A2               	movwf	___fldiv@a+2
  2144     0D89  30D7               	movlw	215
  2145     0D8A  00A1               	movwf	___fldiv@a+1
  2146     0D8B  300A               	movlw	10
  2147     0D8C  00A0               	movwf	___fldiv@a
  2148     0D8D  085B               	movf	readTemperature@voltage+3,w
  2149     0D8E  00A7               	movwf	___fldiv@b+3
  2150     0D8F  085A               	movf	readTemperature@voltage+2,w
  2151     0D90  00A6               	movwf	___fldiv@b+2
  2152     0D91  0859               	movf	readTemperature@voltage+1,w
  2153     0D92  00A5               	movwf	___fldiv@b+1
  2154     0D93  0858               	movf	readTemperature@voltage,w
  2155     0D94  00A4               	movwf	___fldiv@b
  2156     0D95  120A  118A  2373   	fcall	___fldiv
  2157     0D98  0823               	movf	?___fldiv+3,w
  2158     0D99  00D7               	movwf	?_readTemperature+3
  2159     0D9A  0822               	movf	?___fldiv+2,w
  2160     0D9B  00D6               	movwf	?_readTemperature+2
  2161     0D9C  0821               	movf	?___fldiv+1,w
  2162     0D9D  00D5               	movwf	?_readTemperature+1
  2163     0D9E  0820               	movf	?___fldiv,w
  2164     0D9F  00D4               	movwf	?_readTemperature
  2165     0DA0  0008               	return
  2166     0DA1                     __end_of_readTemperature:
  2167                           
  2168                           	psect	text9
  2169     0B24                     __ptext9:	
  2170 ;; *************** function _readADC *****************
  2171 ;; Defined at:
  2172 ;;		line 71 in file "newmain.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  2    0[COMMON] unsigned int 
  2179 ;; Registers used:
  2180 ;;		wreg
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 300/100
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         2       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0
  2189 ;;      Totals:         2       0       0       0       0
  2190 ;;Total ram usage:        2 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_readTemperature
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199     0B24                     _readADC:	
  2200                           ;psect for function _readADC
  2201                           
  2202                           
  2203                           ;newmain.c: 72:     initADC();
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _readADC: [wreg]
  2207     0B24  1283               	bcf	3,5	;RP0=0, select bank0
  2208     0B25  1303               	bcf	3,6	;RP1=0, select bank0
  2209     0B26  149F               	bsf	31,1	;volatile
  2210     0B27                     l114:	
  2211                           ;newmain.c: 73:     initRPM();
  2212                           
  2213     0B27  189F               	btfsc	31,1	;volatile
  2214     0B28  2B27               	goto	l114
  2215                           
  2216                           ;newmain.c: 74: 
  2217     0B29  081E               	movf	30,w	;volatile
  2218     0B2A  00F1               	movwf	?_readADC+1
  2219     0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  2220     0B2C  081E               	movf	30,w	;volatile
  2221     0B2D  00F0               	movwf	?_readADC
  2222     0B2E  0008               	return
  2223     0B2F                     __end_of_readADC:
  2224                           
  2225                           	psect	text10
  2226     0E9F                     __ptext10:	
  2227 ;; *************** function ___xxtofl *****************
  2228 ;; Defined at:
  2229 ;;		line 10 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/xxtofl.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  sign            1    wreg     unsigned char 
  2232 ;;  val             4    0[COMMON] long 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  sign            1    8[COMMON] unsigned char 
  2235 ;;  arg             4   10[COMMON] unsigned long 
  2236 ;;  exp             1    9[COMMON] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  4    0[COMMON] unsigned char 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0
  2241 ;; Tracked objects:
  2242 ;;		On entry : 300/0
  2243 ;;		On exit  : 300/0
  2244 ;;		Unchanged: 300/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         4       0       0       0       0
  2247 ;;      Locals:         6       0       0       0       0
  2248 ;;      Temps:          4       0       0       0       0
  2249 ;;      Totals:        14       0       0       0       0
  2250 ;;Total ram usage:       14 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_readTemperature
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259     0E9F                     ___xxtofl:	
  2260                           ;psect for function ___xxtofl
  2261                           
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2265                           ;___xxtofl@sign stored from wreg
  2266     0E9F  00F8               	movwf	___xxtofl@sign
  2267     0EA0  0878               	movf	___xxtofl@sign,w
  2268     0EA1  1D03               	btfss	3,2
  2269     0EA2  1FF3               	btfss	___xxtofl@val+3,7
  2270     0EA3  2EB4               	goto	l1908
  2271     0EA4  0970               	comf	___xxtofl@val,w
  2272     0EA5  00FA               	movwf	___xxtofl@arg
  2273     0EA6  0971               	comf	___xxtofl@val+1,w
  2274     0EA7  00FB               	movwf	___xxtofl@arg+1
  2275     0EA8  0972               	comf	___xxtofl@val+2,w
  2276     0EA9  00FC               	movwf	___xxtofl@arg+2
  2277     0EAA  0973               	comf	___xxtofl@val+3,w
  2278     0EAB  00FD               	movwf	___xxtofl@arg+3
  2279     0EAC  0AFA               	incf	___xxtofl@arg,f
  2280     0EAD  1903               	skipnz
  2281     0EAE  0AFB               	incf	___xxtofl@arg+1,f
  2282     0EAF  1903               	skipnz
  2283     0EB0  0AFC               	incf	___xxtofl@arg+2,f
  2284     0EB1  1903               	skipnz
  2285     0EB2  0AFD               	incf	___xxtofl@arg+3,f
  2286     0EB3  2EBC               	goto	l661
  2287     0EB4                     l1908:
  2288     0EB4  0873               	movf	___xxtofl@val+3,w
  2289     0EB5  00FD               	movwf	___xxtofl@arg+3
  2290     0EB6  0872               	movf	___xxtofl@val+2,w
  2291     0EB7  00FC               	movwf	___xxtofl@arg+2
  2292     0EB8  0871               	movf	___xxtofl@val+1,w
  2293     0EB9  00FB               	movwf	___xxtofl@arg+1
  2294     0EBA  0870               	movf	___xxtofl@val,w
  2295     0EBB  00FA               	movwf	___xxtofl@arg
  2296     0EBC                     l661:
  2297     0EBC  0873               	movf	___xxtofl@val+3,w
  2298     0EBD  0472               	iorwf	___xxtofl@val+2,w
  2299     0EBE  0471               	iorwf	___xxtofl@val+1,w
  2300     0EBF  0470               	iorwf	___xxtofl@val,w
  2301     0EC0  1D03               	skipz
  2302     0EC1  2ECB               	goto	l1914
  2303     0EC2  3000               	movlw	0
  2304     0EC3  00F3               	movwf	?___xxtofl+3
  2305     0EC4  3000               	movlw	0
  2306     0EC5  00F2               	movwf	?___xxtofl+2
  2307     0EC6  3000               	movlw	0
  2308     0EC7  00F1               	movwf	?___xxtofl+1
  2309     0EC8  3000               	movlw	0
  2310     0EC9  00F0               	movwf	?___xxtofl
  2311     0ECA  0008               	return
  2312     0ECB                     l1914:
  2313     0ECB  3096               	movlw	150
  2314     0ECC  00F9               	movwf	___xxtofl@exp
  2315     0ECD                     l1918:
  2316     0ECD  30FE               	movlw	254
  2317     0ECE  057D               	andwf	___xxtofl@arg+3,w
  2318     0ECF  1903               	btfsc	3,2
  2319     0ED0  2EFA               	goto	l667
  2320     0ED1  3001               	movlw	1
  2321     0ED2  00F4               	movwf	??___xxtofl
  2322     0ED3  0874               	movf	??___xxtofl,w
  2323     0ED4  07F9               	addwf	___xxtofl@exp,f
  2324     0ED5  3001               	movlw	1
  2325     0ED6                     u3175:
  2326     0ED6  1003               	clrc
  2327     0ED7  0CFD               	rrf	___xxtofl@arg+3,f
  2328     0ED8  0CFC               	rrf	___xxtofl@arg+2,f
  2329     0ED9  0CFB               	rrf	___xxtofl@arg+1,f
  2330     0EDA  0CFA               	rrf	___xxtofl@arg,f
  2331     0EDB  3EFF               	addlw	-1
  2332     0EDC  1D03               	skipz
  2333     0EDD  2ED6               	goto	u3175
  2334     0EDE  2ECD               	goto	l1918
  2335     0EDF                     l1920:
  2336     0EDF  3001               	movlw	1
  2337     0EE0  00F4               	movwf	??___xxtofl
  2338     0EE1  0874               	movf	??___xxtofl,w
  2339     0EE2  07F9               	addwf	___xxtofl@exp,f
  2340     0EE3  3001               	movlw	1
  2341     0EE4  07FA               	addwf	___xxtofl@arg,f
  2342     0EE5  3000               	movlw	0
  2343     0EE6  1803               	skipnc
  2344     0EE7  3001               	movlw	1
  2345     0EE8  07FB               	addwf	___xxtofl@arg+1,f
  2346     0EE9  3000               	movlw	0
  2347     0EEA  1803               	skipnc
  2348     0EEB  3001               	movlw	1
  2349     0EEC  07FC               	addwf	___xxtofl@arg+2,f
  2350     0EED  3000               	movlw	0
  2351     0EEE  1803               	skipnc
  2352     0EEF  3001               	movlw	1
  2353     0EF0  07FD               	addwf	___xxtofl@arg+3,f
  2354     0EF1  3001               	movlw	1
  2355     0EF2                     u3195:
  2356     0EF2  1003               	clrc
  2357     0EF3  0CFD               	rrf	___xxtofl@arg+3,f
  2358     0EF4  0CFC               	rrf	___xxtofl@arg+2,f
  2359     0EF5  0CFB               	rrf	___xxtofl@arg+1,f
  2360     0EF6  0CFA               	rrf	___xxtofl@arg,f
  2361     0EF7  3EFF               	addlw	-1
  2362     0EF8  1D03               	skipz
  2363     0EF9  2EF2               	goto	u3195
  2364     0EFA                     l667:
  2365     0EFA  30FF               	movlw	255
  2366     0EFB  057D               	andwf	___xxtofl@arg+3,w
  2367     0EFC  1903               	btfsc	3,2
  2368     0EFD  2F0E               	goto	l1928
  2369     0EFE  2EDF               	goto	l1920
  2370     0EFF                     l1930:
  2371     0EFF  3002               	movlw	2
  2372     0F00  0279               	subwf	___xxtofl@exp,w
  2373     0F01  1C03               	btfss	3,0
  2374     0F02  2F10               	goto	l674
  2375     0F03  3001               	movlw	1
  2376     0F04  02F9               	subwf	___xxtofl@exp,f
  2377     0F05  3001               	movlw	1
  2378     0F06  00F4               	movwf	??___xxtofl
  2379     0F07                     u3215:
  2380     0F07  1003               	clrc
  2381     0F08  0DFA               	rlf	___xxtofl@arg,f
  2382     0F09  0DFB               	rlf	___xxtofl@arg+1,f
  2383     0F0A  0DFC               	rlf	___xxtofl@arg+2,f
  2384     0F0B  0DFD               	rlf	___xxtofl@arg+3,f
  2385     0F0C  0BF4               	decfsz	??___xxtofl,f
  2386     0F0D  2F07               	goto	u3215
  2387     0F0E                     l1928:
  2388     0F0E  1FFC               	btfss	___xxtofl@arg+2,7
  2389     0F0F  2EFF               	goto	l1930
  2390     0F10                     l674:
  2391     0F10  1879               	btfsc	___xxtofl@exp,0
  2392     0F11  2F1A               	goto	l675
  2393     0F12  30FF               	movlw	255
  2394     0F13  05FA               	andwf	___xxtofl@arg,f
  2395     0F14  30FF               	movlw	255
  2396     0F15  05FB               	andwf	___xxtofl@arg+1,f
  2397     0F16  307F               	movlw	127
  2398     0F17  05FC               	andwf	___xxtofl@arg+2,f
  2399     0F18  30FF               	movlw	255
  2400     0F19  05FD               	andwf	___xxtofl@arg+3,f
  2401     0F1A                     l675:
  2402     0F1A  1003               	clrc
  2403     0F1B  0CF9               	rrf	___xxtofl@exp,f
  2404     0F1C  0879               	movf	___xxtofl@exp,w
  2405     0F1D  00F4               	movwf	??___xxtofl
  2406     0F1E  01F5               	clrf	??___xxtofl+1
  2407     0F1F  01F6               	clrf	??___xxtofl+2
  2408     0F20  01F7               	clrf	??___xxtofl+3
  2409     0F21  3018               	movlw	24
  2410     0F22                     u3255:
  2411     0F22  1003               	clrc
  2412     0F23  0DF4               	rlf	??___xxtofl,f
  2413     0F24  0DF5               	rlf	??___xxtofl+1,f
  2414     0F25  0DF6               	rlf	??___xxtofl+2,f
  2415     0F26  0DF7               	rlf	??___xxtofl+3,f
  2416     0F27  3EFF               	addlw	-1
  2417     0F28  1D03               	skipz
  2418     0F29  2F22               	goto	u3255
  2419     0F2A  0874               	movf	??___xxtofl,w
  2420     0F2B  04FA               	iorwf	___xxtofl@arg,f
  2421     0F2C  0875               	movf	??___xxtofl+1,w
  2422     0F2D  04FB               	iorwf	___xxtofl@arg+1,f
  2423     0F2E  0876               	movf	??___xxtofl+2,w
  2424     0F2F  04FC               	iorwf	___xxtofl@arg+2,f
  2425     0F30  0877               	movf	??___xxtofl+3,w
  2426     0F31  04FD               	iorwf	___xxtofl@arg+3,f
  2427     0F32  0878               	movf	___xxtofl@sign,w
  2428     0F33  1D03               	btfss	3,2
  2429     0F34  1FF3               	btfss	___xxtofl@val+3,7
  2430     0F35  2F37               	goto	l1942
  2431     0F36  17FD               	bsf	___xxtofl@arg+3,7
  2432     0F37                     l1942:
  2433     0F37  087D               	movf	___xxtofl@arg+3,w
  2434     0F38  00F3               	movwf	?___xxtofl+3
  2435     0F39  087C               	movf	___xxtofl@arg+2,w
  2436     0F3A  00F2               	movwf	?___xxtofl+2
  2437     0F3B  087B               	movf	___xxtofl@arg+1,w
  2438     0F3C  00F1               	movwf	?___xxtofl+1
  2439     0F3D  087A               	movf	___xxtofl@arg,w
  2440     0F3E  00F0               	movwf	?___xxtofl
  2441     0F3F  0008               	return
  2442     0F40                     __end_of___xxtofl:
  2443                           
  2444                           	psect	text11
  2445     050A                     __ptext11:	
  2446 ;; *************** function ___flmul *****************
  2447 ;; Defined at:
  2448 ;;		line 8 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/sprcmul.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  b               4   26[BANK0 ] unsigned char 
  2451 ;;  a               4   30[BANK0 ] unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  prod            4   46[BANK0 ] struct .
  2454 ;;  grs             4   41[BANK0 ] unsigned long 
  2455 ;;  temp            2   50[BANK0 ] struct .
  2456 ;;  bexp            1   45[BANK0 ] unsigned char 
  2457 ;;  aexp            1   40[BANK0 ] unsigned char 
  2458 ;;  sign            1   39[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  4   26[BANK0 ] unsigned char 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 300/0
  2465 ;;		On exit  : 300/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       8       0       0       0
  2469 ;;      Locals:         0      13       0       0       0
  2470 ;;      Temps:          0       5       0       0       0
  2471 ;;      Totals:         0      26       0       0       0
  2472 ;;Total ram usage:       26 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 1
  2475 ;; This function calls:
  2476 ;;		__Umul8_16
  2477 ;; This function is called by:
  2478 ;;		_readTemperature
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482     050A                     ___flmul:	
  2483                           ;psect for function ___flmul
  2484                           
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2488     050A  083D               	movf	___flmul@b+3,w
  2489     050B  3980               	andlw	128
  2490     050C  00C7               	movwf	___flmul@sign
  2491     050D  083D               	movf	___flmul@b+3,w
  2492     050E  00C2               	movwf	??___flmul
  2493     050F  0742               	addwf	??___flmul,w
  2494     0510  00CD               	movwf	___flmul@bexp
  2495     0511  1BBC               	btfsc	___flmul@b+2,7
  2496     0512  144D               	bsf	___flmul@bexp,0
  2497     0513  084D               	movf	___flmul@bexp,w
  2498     0514  1903               	btfsc	3,2
  2499     0515  2D23               	goto	l1778
  2500     0516  0A4D               	incf	___flmul@bexp,w
  2501     0517  1D03               	btfss	3,2
  2502     0518  2D21               	goto	l1776
  2503     0519  3000               	movlw	0
  2504     051A  00BD               	movwf	___flmul@b+3
  2505     051B  3000               	movlw	0
  2506     051C  00BC               	movwf	___flmul@b+2
  2507     051D  3000               	movlw	0
  2508     051E  00BB               	movwf	___flmul@b+1
  2509     051F  3000               	movlw	0
  2510     0520  00BA               	movwf	___flmul@b
  2511     0521                     l1776:
  2512     0521  17BC               	bsf	___flmul@b+2,7
  2513     0522  2D2B               	goto	l1780
  2514     0523                     l1778:
  2515     0523  3000               	movlw	0
  2516     0524  00BD               	movwf	___flmul@b+3
  2517     0525  3000               	movlw	0
  2518     0526  00BC               	movwf	___flmul@b+2
  2519     0527  3000               	movlw	0
  2520     0528  00BB               	movwf	___flmul@b+1
  2521     0529  3000               	movlw	0
  2522     052A  00BA               	movwf	___flmul@b
  2523     052B                     l1780:
  2524     052B  0841               	movf	___flmul@a+3,w
  2525     052C  3980               	andlw	128
  2526     052D  00C2               	movwf	??___flmul
  2527     052E  0842               	movf	??___flmul,w
  2528     052F  06C7               	xorwf	___flmul@sign,f
  2529     0530  0841               	movf	___flmul@a+3,w
  2530     0531  00C2               	movwf	??___flmul
  2531     0532  0742               	addwf	??___flmul,w
  2532     0533  00C8               	movwf	___flmul@aexp
  2533     0534  1BC0               	btfsc	___flmul@a+2,7
  2534     0535  1448               	bsf	___flmul@aexp,0
  2535     0536  0848               	movf	___flmul@aexp,w
  2536     0537  1903               	btfsc	3,2
  2537     0538  2D46               	goto	l1796
  2538     0539  0A48               	incf	___flmul@aexp,w
  2539     053A  1D03               	btfss	3,2
  2540     053B  2D44               	goto	l1794
  2541     053C  3000               	movlw	0
  2542     053D  00C1               	movwf	___flmul@a+3
  2543     053E  3000               	movlw	0
  2544     053F  00C0               	movwf	___flmul@a+2
  2545     0540  3000               	movlw	0
  2546     0541  00BF               	movwf	___flmul@a+1
  2547     0542  3000               	movlw	0
  2548     0543  00BE               	movwf	___flmul@a
  2549     0544                     l1794:
  2550     0544  17C0               	bsf	___flmul@a+2,7
  2551     0545  2D4E               	goto	l1798
  2552     0546                     l1796:
  2553     0546  3000               	movlw	0
  2554     0547  00C1               	movwf	___flmul@a+3
  2555     0548  3000               	movlw	0
  2556     0549  00C0               	movwf	___flmul@a+2
  2557     054A  3000               	movlw	0
  2558     054B  00BF               	movwf	___flmul@a+1
  2559     054C  3000               	movlw	0
  2560     054D  00BE               	movwf	___flmul@a
  2561     054E                     l1798:
  2562     054E  0848               	movf	___flmul@aexp,w
  2563     054F  1D03               	btfss	3,2
  2564     0550  084D               	movf	___flmul@bexp,w
  2565     0551  1D03               	btfss	3,2
  2566     0552  2D5C               	goto	l1806
  2567     0553  3000               	movlw	0
  2568     0554  00BD               	movwf	?___flmul+3
  2569     0555  3000               	movlw	0
  2570     0556  00BC               	movwf	?___flmul+2
  2571     0557  3000               	movlw	0
  2572     0558  00BB               	movwf	?___flmul+1
  2573     0559  3000               	movlw	0
  2574     055A  00BA               	movwf	?___flmul
  2575     055B  0008               	return
  2576     055C                     l1806:
  2577     055C  083A               	movf	___flmul@b,w
  2578     055D  00F0               	movwf	__Umul8_16@multiplicand
  2579     055E  0840               	movf	___flmul@a+2,w
  2580     055F  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2581     0564  0871               	movf	?__Umul8_16+1,w
  2582     0565  00D3               	movwf	___flmul@temp+1
  2583     0566  0870               	movf	?__Umul8_16,w
  2584     0567  00D2               	movwf	___flmul@temp
  2585     0568  0852               	movf	___flmul@temp,w
  2586     0569  00C2               	movwf	??___flmul
  2587     056A  01C3               	clrf	??___flmul+1
  2588     056B  01C4               	clrf	??___flmul+2
  2589     056C  01C5               	clrf	??___flmul+3
  2590     056D  0845               	movf	??___flmul+3,w
  2591     056E  00CC               	movwf	___flmul@grs+3
  2592     056F  0844               	movf	??___flmul+2,w
  2593     0570  00CB               	movwf	___flmul@grs+2
  2594     0571  0843               	movf	??___flmul+1,w
  2595     0572  00CA               	movwf	___flmul@grs+1
  2596     0573  0842               	movf	??___flmul,w
  2597     0574  00C9               	movwf	___flmul@grs
  2598     0575  0853               	movf	___flmul@temp+1,w
  2599     0576  00C2               	movwf	??___flmul
  2600     0577  01C3               	clrf	??___flmul+1
  2601     0578  01C4               	clrf	??___flmul+2
  2602     0579  01C5               	clrf	??___flmul+3
  2603     057A  0845               	movf	??___flmul+3,w
  2604     057B  00D1               	movwf	___flmul@prod+3
  2605     057C  0844               	movf	??___flmul+2,w
  2606     057D  00D0               	movwf	___flmul@prod+2
  2607     057E  0843               	movf	??___flmul+1,w
  2608     057F  00CF               	movwf	___flmul@prod+1
  2609     0580  0842               	movf	??___flmul,w
  2610     0581  00CE               	movwf	___flmul@prod
  2611     0582  083B               	movf	___flmul@b+1,w
  2612     0583  00F0               	movwf	__Umul8_16@multiplicand
  2613     0584  083F               	movf	___flmul@a+1,w
  2614     0585  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2615     058A  0871               	movf	?__Umul8_16+1,w
  2616     058B  00D3               	movwf	___flmul@temp+1
  2617     058C  0870               	movf	?__Umul8_16,w
  2618     058D  00D2               	movwf	___flmul@temp
  2619     058E  0852               	movf	___flmul@temp,w
  2620     058F  00C2               	movwf	??___flmul
  2621     0590  01C3               	clrf	??___flmul+1
  2622     0591  01C4               	clrf	??___flmul+2
  2623     0592  01C5               	clrf	??___flmul+3
  2624     0593  0842               	movf	??___flmul,w
  2625     0594  07C9               	addwf	___flmul@grs,f
  2626     0595  0843               	movf	??___flmul+1,w
  2627     0596  1103               	clrz
  2628     0597  1803               	skipnc
  2629     0598  3E01               	addlw	1
  2630     0599  1D03               	btfss	3,2
  2631     059A  07CA               	addwf	___flmul@grs+1,f
  2632     059B  0844               	movf	??___flmul+2,w
  2633     059C  1103               	clrz
  2634     059D  1803               	skipnc
  2635     059E  3E01               	addlw	1
  2636     059F  1D03               	btfss	3,2
  2637     05A0  07CB               	addwf	___flmul@grs+2,f
  2638     05A1  0845               	movf	??___flmul+3,w
  2639     05A2  1103               	clrz
  2640     05A3  1803               	skipnc
  2641     05A4  3E01               	addlw	1
  2642     05A5  1D03               	btfss	3,2
  2643     05A6  07CC               	addwf	___flmul@grs+3,f
  2644     05A7  0853               	movf	___flmul@temp+1,w
  2645     05A8  00C2               	movwf	??___flmul
  2646     05A9  01C3               	clrf	??___flmul+1
  2647     05AA  01C4               	clrf	??___flmul+2
  2648     05AB  01C5               	clrf	??___flmul+3
  2649     05AC  0842               	movf	??___flmul,w
  2650     05AD  07CE               	addwf	___flmul@prod,f
  2651     05AE  0843               	movf	??___flmul+1,w
  2652     05AF  1103               	clrz
  2653     05B0  1803               	skipnc
  2654     05B1  3E01               	addlw	1
  2655     05B2  1D03               	btfss	3,2
  2656     05B3  07CF               	addwf	___flmul@prod+1,f
  2657     05B4  0844               	movf	??___flmul+2,w
  2658     05B5  1103               	clrz
  2659     05B6  1803               	skipnc
  2660     05B7  3E01               	addlw	1
  2661     05B8  1D03               	btfss	3,2
  2662     05B9  07D0               	addwf	___flmul@prod+2,f
  2663     05BA  0845               	movf	??___flmul+3,w
  2664     05BB  1103               	clrz
  2665     05BC  1803               	skipnc
  2666     05BD  3E01               	addlw	1
  2667     05BE  1D03               	btfss	3,2
  2668     05BF  07D1               	addwf	___flmul@prod+3,f
  2669     05C0  083C               	movf	___flmul@b+2,w
  2670     05C1  00F0               	movwf	__Umul8_16@multiplicand
  2671     05C2  083E               	movf	___flmul@a,w
  2672     05C3  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2673     05C8  0871               	movf	?__Umul8_16+1,w
  2674     05C9  00D3               	movwf	___flmul@temp+1
  2675     05CA  0870               	movf	?__Umul8_16,w
  2676     05CB  00D2               	movwf	___flmul@temp
  2677     05CC  0852               	movf	___flmul@temp,w
  2678     05CD  00C2               	movwf	??___flmul
  2679     05CE  01C3               	clrf	??___flmul+1
  2680     05CF  01C4               	clrf	??___flmul+2
  2681     05D0  01C5               	clrf	??___flmul+3
  2682     05D1  0842               	movf	??___flmul,w
  2683     05D2  07C9               	addwf	___flmul@grs,f
  2684     05D3  0843               	movf	??___flmul+1,w
  2685     05D4  1103               	clrz
  2686     05D5  1803               	skipnc
  2687     05D6  3E01               	addlw	1
  2688     05D7  1D03               	btfss	3,2
  2689     05D8  07CA               	addwf	___flmul@grs+1,f
  2690     05D9  0844               	movf	??___flmul+2,w
  2691     05DA  1103               	clrz
  2692     05DB  1803               	skipnc
  2693     05DC  3E01               	addlw	1
  2694     05DD  1D03               	btfss	3,2
  2695     05DE  07CB               	addwf	___flmul@grs+2,f
  2696     05DF  0845               	movf	??___flmul+3,w
  2697     05E0  1103               	clrz
  2698     05E1  1803               	skipnc
  2699     05E2  3E01               	addlw	1
  2700     05E3  1D03               	btfss	3,2
  2701     05E4  07CC               	addwf	___flmul@grs+3,f
  2702     05E5  0853               	movf	___flmul@temp+1,w
  2703     05E6  00C2               	movwf	??___flmul
  2704     05E7  01C3               	clrf	??___flmul+1
  2705     05E8  01C4               	clrf	??___flmul+2
  2706     05E9  01C5               	clrf	??___flmul+3
  2707     05EA  0842               	movf	??___flmul,w
  2708     05EB  07CE               	addwf	___flmul@prod,f
  2709     05EC  0843               	movf	??___flmul+1,w
  2710     05ED  1103               	clrz
  2711     05EE  1803               	skipnc
  2712     05EF  3E01               	addlw	1
  2713     05F0  1D03               	btfss	3,2
  2714     05F1  07CF               	addwf	___flmul@prod+1,f
  2715     05F2  0844               	movf	??___flmul+2,w
  2716     05F3  1103               	clrz
  2717     05F4  1803               	skipnc
  2718     05F5  3E01               	addlw	1
  2719     05F6  1D03               	btfss	3,2
  2720     05F7  07D0               	addwf	___flmul@prod+2,f
  2721     05F8  0845               	movf	??___flmul+3,w
  2722     05F9  1103               	clrz
  2723     05FA  1803               	skipnc
  2724     05FB  3E01               	addlw	1
  2725     05FC  1D03               	btfss	3,2
  2726     05FD  07D1               	addwf	___flmul@prod+3,f
  2727     05FE  3008               	movlw	8
  2728     05FF  00C2               	movwf	??___flmul
  2729     0600                     u2905:
  2730     0600  1003               	clrc
  2731     0601  0DC9               	rlf	___flmul@grs,f
  2732     0602  0DCA               	rlf	___flmul@grs+1,f
  2733     0603  0DCB               	rlf	___flmul@grs+2,f
  2734     0604  0DCC               	rlf	___flmul@grs+3,f
  2735     0605  0BC2               	decfsz	??___flmul,f
  2736     0606  2E00               	goto	u2905
  2737     0607  083B               	movf	___flmul@b+1,w
  2738     0608  00F0               	movwf	__Umul8_16@multiplicand
  2739     0609  083E               	movf	___flmul@a,w
  2740     060A  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2741     060F  0871               	movf	?__Umul8_16+1,w
  2742     0610  00D3               	movwf	___flmul@temp+1
  2743     0611  0870               	movf	?__Umul8_16,w
  2744     0612  00D2               	movwf	___flmul@temp
  2745     0613  0852               	movf	___flmul@temp,w
  2746     0614  00C2               	movwf	??___flmul
  2747     0615  0853               	movf	___flmul@temp+1,w
  2748     0616  00C3               	movwf	??___flmul+1
  2749     0617  01C4               	clrf	??___flmul+2
  2750     0618  01C5               	clrf	??___flmul+3
  2751     0619  0842               	movf	??___flmul,w
  2752     061A  07C9               	addwf	___flmul@grs,f
  2753     061B  0843               	movf	??___flmul+1,w
  2754     061C  1103               	clrz
  2755     061D  1803               	skipnc
  2756     061E  3E01               	addlw	1
  2757     061F  1D03               	btfss	3,2
  2758     0620  07CA               	addwf	___flmul@grs+1,f
  2759     0621  0844               	movf	??___flmul+2,w
  2760     0622  1103               	clrz
  2761     0623  1803               	skipnc
  2762     0624  3E01               	addlw	1
  2763     0625  1D03               	btfss	3,2
  2764     0626  07CB               	addwf	___flmul@grs+2,f
  2765     0627  0845               	movf	??___flmul+3,w
  2766     0628  1103               	clrz
  2767     0629  1803               	skipnc
  2768     062A  3E01               	addlw	1
  2769     062B  1D03               	btfss	3,2
  2770     062C  07CC               	addwf	___flmul@grs+3,f
  2771     062D  083A               	movf	___flmul@b,w
  2772     062E  00F0               	movwf	__Umul8_16@multiplicand
  2773     062F  083F               	movf	___flmul@a+1,w
  2774     0630  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2775     0635  0871               	movf	?__Umul8_16+1,w
  2776     0636  00D3               	movwf	___flmul@temp+1
  2777     0637  0870               	movf	?__Umul8_16,w
  2778     0638  00D2               	movwf	___flmul@temp
  2779     0639  0852               	movf	___flmul@temp,w
  2780     063A  00C2               	movwf	??___flmul
  2781     063B  0853               	movf	___flmul@temp+1,w
  2782     063C  00C3               	movwf	??___flmul+1
  2783     063D  01C4               	clrf	??___flmul+2
  2784     063E  01C5               	clrf	??___flmul+3
  2785     063F  0842               	movf	??___flmul,w
  2786     0640  07C9               	addwf	___flmul@grs,f
  2787     0641  0843               	movf	??___flmul+1,w
  2788     0642  1103               	clrz
  2789     0643  1803               	skipnc
  2790     0644  3E01               	addlw	1
  2791     0645  1D03               	btfss	3,2
  2792     0646  07CA               	addwf	___flmul@grs+1,f
  2793     0647  0844               	movf	??___flmul+2,w
  2794     0648  1103               	clrz
  2795     0649  1803               	skipnc
  2796     064A  3E01               	addlw	1
  2797     064B  1D03               	btfss	3,2
  2798     064C  07CB               	addwf	___flmul@grs+2,f
  2799     064D  0845               	movf	??___flmul+3,w
  2800     064E  1103               	clrz
  2801     064F  1803               	skipnc
  2802     0650  3E01               	addlw	1
  2803     0651  1D03               	btfss	3,2
  2804     0652  07CC               	addwf	___flmul@grs+3,f
  2805     0653  3008               	movlw	8
  2806     0654  00C2               	movwf	??___flmul
  2807     0655                     u2935:
  2808     0655  1003               	clrc
  2809     0656  0DC9               	rlf	___flmul@grs,f
  2810     0657  0DCA               	rlf	___flmul@grs+1,f
  2811     0658  0DCB               	rlf	___flmul@grs+2,f
  2812     0659  0DCC               	rlf	___flmul@grs+3,f
  2813     065A  0BC2               	decfsz	??___flmul,f
  2814     065B  2E55               	goto	u2935
  2815     065C  083A               	movf	___flmul@b,w
  2816     065D  00F0               	movwf	__Umul8_16@multiplicand
  2817     065E  083E               	movf	___flmul@a,w
  2818     065F  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2819     0664  0871               	movf	?__Umul8_16+1,w
  2820     0665  00D3               	movwf	___flmul@temp+1
  2821     0666  0870               	movf	?__Umul8_16,w
  2822     0667  00D2               	movwf	___flmul@temp
  2823     0668  0852               	movf	___flmul@temp,w
  2824     0669  00C2               	movwf	??___flmul
  2825     066A  0853               	movf	___flmul@temp+1,w
  2826     066B  00C3               	movwf	??___flmul+1
  2827     066C  01C4               	clrf	??___flmul+2
  2828     066D  01C5               	clrf	??___flmul+3
  2829     066E  0842               	movf	??___flmul,w
  2830     066F  07C9               	addwf	___flmul@grs,f
  2831     0670  0843               	movf	??___flmul+1,w
  2832     0671  1103               	clrz
  2833     0672  1803               	skipnc
  2834     0673  3E01               	addlw	1
  2835     0674  1D03               	btfss	3,2
  2836     0675  07CA               	addwf	___flmul@grs+1,f
  2837     0676  0844               	movf	??___flmul+2,w
  2838     0677  1103               	clrz
  2839     0678  1803               	skipnc
  2840     0679  3E01               	addlw	1
  2841     067A  1D03               	btfss	3,2
  2842     067B  07CB               	addwf	___flmul@grs+2,f
  2843     067C  0845               	movf	??___flmul+3,w
  2844     067D  1103               	clrz
  2845     067E  1803               	skipnc
  2846     067F  3E01               	addlw	1
  2847     0680  1D03               	btfss	3,2
  2848     0681  07CC               	addwf	___flmul@grs+3,f
  2849     0682  083B               	movf	___flmul@b+1,w
  2850     0683  00F0               	movwf	__Umul8_16@multiplicand
  2851     0684  0840               	movf	___flmul@a+2,w
  2852     0685  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2853     068A  0871               	movf	?__Umul8_16+1,w
  2854     068B  00D3               	movwf	___flmul@temp+1
  2855     068C  0870               	movf	?__Umul8_16,w
  2856     068D  00D2               	movwf	___flmul@temp
  2857     068E  0852               	movf	___flmul@temp,w
  2858     068F  00C2               	movwf	??___flmul
  2859     0690  0853               	movf	___flmul@temp+1,w
  2860     0691  00C3               	movwf	??___flmul+1
  2861     0692  01C4               	clrf	??___flmul+2
  2862     0693  01C5               	clrf	??___flmul+3
  2863     0694  0842               	movf	??___flmul,w
  2864     0695  07CE               	addwf	___flmul@prod,f
  2865     0696  0843               	movf	??___flmul+1,w
  2866     0697  1103               	clrz
  2867     0698  1803               	skipnc
  2868     0699  3E01               	addlw	1
  2869     069A  1D03               	btfss	3,2
  2870     069B  07CF               	addwf	___flmul@prod+1,f
  2871     069C  0844               	movf	??___flmul+2,w
  2872     069D  1103               	clrz
  2873     069E  1803               	skipnc
  2874     069F  3E01               	addlw	1
  2875     06A0  1D03               	btfss	3,2
  2876     06A1  07D0               	addwf	___flmul@prod+2,f
  2877     06A2  0845               	movf	??___flmul+3,w
  2878     06A3  1103               	clrz
  2879     06A4  1803               	skipnc
  2880     06A5  3E01               	addlw	1
  2881     06A6  1D03               	btfss	3,2
  2882     06A7  07D1               	addwf	___flmul@prod+3,f
  2883     06A8  083C               	movf	___flmul@b+2,w
  2884     06A9  00F0               	movwf	__Umul8_16@multiplicand
  2885     06AA  083F               	movf	___flmul@a+1,w
  2886     06AB  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2887     06B0  0871               	movf	?__Umul8_16+1,w
  2888     06B1  00D3               	movwf	___flmul@temp+1
  2889     06B2  0870               	movf	?__Umul8_16,w
  2890     06B3  00D2               	movwf	___flmul@temp
  2891     06B4  0852               	movf	___flmul@temp,w
  2892     06B5  00C2               	movwf	??___flmul
  2893     06B6  0853               	movf	___flmul@temp+1,w
  2894     06B7  00C3               	movwf	??___flmul+1
  2895     06B8  01C4               	clrf	??___flmul+2
  2896     06B9  01C5               	clrf	??___flmul+3
  2897     06BA  0842               	movf	??___flmul,w
  2898     06BB  07CE               	addwf	___flmul@prod,f
  2899     06BC  0843               	movf	??___flmul+1,w
  2900     06BD  1103               	clrz
  2901     06BE  1803               	skipnc
  2902     06BF  3E01               	addlw	1
  2903     06C0  1D03               	btfss	3,2
  2904     06C1  07CF               	addwf	___flmul@prod+1,f
  2905     06C2  0844               	movf	??___flmul+2,w
  2906     06C3  1103               	clrz
  2907     06C4  1803               	skipnc
  2908     06C5  3E01               	addlw	1
  2909     06C6  1D03               	btfss	3,2
  2910     06C7  07D0               	addwf	___flmul@prod+2,f
  2911     06C8  0845               	movf	??___flmul+3,w
  2912     06C9  1103               	clrz
  2913     06CA  1803               	skipnc
  2914     06CB  3E01               	addlw	1
  2915     06CC  1D03               	btfss	3,2
  2916     06CD  07D1               	addwf	___flmul@prod+3,f
  2917     06CE  083C               	movf	___flmul@b+2,w
  2918     06CF  00F0               	movwf	__Umul8_16@multiplicand
  2919     06D0  0840               	movf	___flmul@a+2,w
  2920     06D1  120A  158A  23E6  120A  118A  	fcall	__Umul8_16
  2921     06D6  0871               	movf	?__Umul8_16+1,w
  2922     06D7  00D3               	movwf	___flmul@temp+1
  2923     06D8  0870               	movf	?__Umul8_16,w
  2924     06D9  00D2               	movwf	___flmul@temp
  2925     06DA  0852               	movf	___flmul@temp,w
  2926     06DB  00C2               	movwf	??___flmul
  2927     06DC  0853               	movf	___flmul@temp+1,w
  2928     06DD  00C3               	movwf	??___flmul+1
  2929     06DE  01C4               	clrf	??___flmul+2
  2930     06DF  01C5               	clrf	??___flmul+3
  2931     06E0  3008               	movlw	8
  2932     06E1                     u2975:
  2933     06E1  1003               	clrc
  2934     06E2  0DC2               	rlf	??___flmul,f
  2935     06E3  0DC3               	rlf	??___flmul+1,f
  2936     06E4  0DC4               	rlf	??___flmul+2,f
  2937     06E5  0DC5               	rlf	??___flmul+3,f
  2938     06E6  3EFF               	addlw	-1
  2939     06E7  1D03               	skipz
  2940     06E8  2EE1               	goto	u2975
  2941     06E9  0842               	movf	??___flmul,w
  2942     06EA  07CE               	addwf	___flmul@prod,f
  2943     06EB  0843               	movf	??___flmul+1,w
  2944     06EC  1103               	clrz
  2945     06ED  1803               	skipnc
  2946     06EE  3E01               	addlw	1
  2947     06EF  1D03               	btfss	3,2
  2948     06F0  07CF               	addwf	___flmul@prod+1,f
  2949     06F1  0844               	movf	??___flmul+2,w
  2950     06F2  1103               	clrz
  2951     06F3  1803               	skipnc
  2952     06F4  3E01               	addlw	1
  2953     06F5  1D03               	btfss	3,2
  2954     06F6  07D0               	addwf	___flmul@prod+2,f
  2955     06F7  0845               	movf	??___flmul+3,w
  2956     06F8  1103               	clrz
  2957     06F9  1803               	skipnc
  2958     06FA  3E01               	addlw	1
  2959     06FB  1D03               	btfss	3,2
  2960     06FC  07D1               	addwf	___flmul@prod+3,f
  2961     06FD  084C               	movf	___flmul@grs+3,w
  2962     06FE  00C2               	movwf	??___flmul
  2963     06FF  01C3               	clrf	??___flmul+1
  2964     0700  01C4               	clrf	??___flmul+2
  2965     0701  01C5               	clrf	??___flmul+3
  2966     0702  0842               	movf	??___flmul,w
  2967     0703  07CE               	addwf	___flmul@prod,f
  2968     0704  0843               	movf	??___flmul+1,w
  2969     0705  1103               	clrz
  2970     0706  1803               	skipnc
  2971     0707  3E01               	addlw	1
  2972     0708  1D03               	btfss	3,2
  2973     0709  07CF               	addwf	___flmul@prod+1,f
  2974     070A  0844               	movf	??___flmul+2,w
  2975     070B  1103               	clrz
  2976     070C  1803               	skipnc
  2977     070D  3E01               	addlw	1
  2978     070E  1D03               	btfss	3,2
  2979     070F  07D0               	addwf	___flmul@prod+2,f
  2980     0710  0845               	movf	??___flmul+3,w
  2981     0711  1103               	clrz
  2982     0712  1803               	skipnc
  2983     0713  3E01               	addlw	1
  2984     0714  1D03               	btfss	3,2
  2985     0715  07D1               	addwf	___flmul@prod+3,f
  2986     0716  3008               	movlw	8
  2987     0717  00C2               	movwf	??___flmul
  2988     0718                     u3005:
  2989     0718  1003               	clrc
  2990     0719  0DC9               	rlf	___flmul@grs,f
  2991     071A  0DCA               	rlf	___flmul@grs+1,f
  2992     071B  0DCB               	rlf	___flmul@grs+2,f
  2993     071C  0DCC               	rlf	___flmul@grs+3,f
  2994     071D  0BC2               	decfsz	??___flmul,f
  2995     071E  2F18               	goto	u3005
  2996     071F  084D               	movf	___flmul@bexp,w
  2997     0720  0748               	addwf	___flmul@aexp,w
  2998     0721  00C2               	movwf	??___flmul
  2999     0722  01C3               	clrf	??___flmul+1
  3000     0723  0DC3               	rlf	??___flmul+1,f
  3001     0724  0842               	movf	??___flmul,w
  3002     0725  3E82               	addlw	130
  3003     0726  00D2               	movwf	___flmul@temp
  3004     0727  0843               	movf	??___flmul+1,w
  3005     0728  1803               	skipnc
  3006     0729  3E01               	addlw	1
  3007     072A  3EFF               	addlw	255
  3008     072B  00D3               	movwf	___flmul@temp+1
  3009     072C                     l1858:
  3010     072C  1BD0               	btfsc	___flmul@prod+2,7
  3011     072D  2F49               	goto	l1860
  3012     072E  3001               	movlw	1
  3013     072F  00C2               	movwf	??___flmul
  3014     0730                     u3015:
  3015     0730  1003               	clrc
  3016     0731  0DCE               	rlf	___flmul@prod,f
  3017     0732  0DCF               	rlf	___flmul@prod+1,f
  3018     0733  0DD0               	rlf	___flmul@prod+2,f
  3019     0734  0DD1               	rlf	___flmul@prod+3,f
  3020     0735  0BC2               	decfsz	??___flmul,f
  3021     0736  2F30               	goto	u3015
  3022     0737  1BCC               	btfsc	___flmul@grs+3,7
  3023     0738  144E               	bsf	___flmul@prod,0
  3024     0739  3001               	movlw	1
  3025     073A  00C2               	movwf	??___flmul
  3026     073B                     u3035:
  3027     073B  1003               	clrc
  3028     073C  0DC9               	rlf	___flmul@grs,f
  3029     073D  0DCA               	rlf	___flmul@grs+1,f
  3030     073E  0DCB               	rlf	___flmul@grs+2,f
  3031     073F  0DCC               	rlf	___flmul@grs+3,f
  3032     0740  0BC2               	decfsz	??___flmul,f
  3033     0741  2F3B               	goto	u3035
  3034     0742  30FF               	movlw	255
  3035     0743  07D2               	addwf	___flmul@temp,f
  3036     0744  1803               	skipnc
  3037     0745  0AD3               	incf	___flmul@temp+1,f
  3038     0746  30FF               	movlw	255
  3039     0747  07D3               	addwf	___flmul@temp+1,f
  3040     0748  2F2C               	goto	l1858
  3041     0749                     l1860:
  3042     0749  01C8               	clrf	___flmul@aexp
  3043     074A  1FCC               	btfss	___flmul@grs+3,7
  3044     074B  2F62               	goto	l1870
  3045     074C  30FF               	movlw	255
  3046     074D  0549               	andwf	___flmul@grs,w
  3047     074E  00C2               	movwf	??___flmul
  3048     074F  30FF               	movlw	255
  3049     0750  054A               	andwf	___flmul@grs+1,w
  3050     0751  00C3               	movwf	??___flmul+1
  3051     0752  30FF               	movlw	255
  3052     0753  054B               	andwf	___flmul@grs+2,w
  3053     0754  00C4               	movwf	??___flmul+2
  3054     0755  307F               	movlw	127
  3055     0756  054C               	andwf	___flmul@grs+3,w
  3056     0757  00C5               	movwf	??___flmul+3
  3057     0758  0845               	movf	??___flmul+3,w
  3058     0759  0444               	iorwf	??___flmul+2,w
  3059     075A  0443               	iorwf	??___flmul+1,w
  3060     075B  0442               	iorwf	??___flmul,w
  3061     075C  1903               	skipnz
  3062     075D  184E               	btfsc	___flmul@prod,0
  3063     075E  2F60               	goto	l1866
  3064     075F  2F62               	goto	l1870
  3065     0760                     l1866:
  3066     0760  01C8               	clrf	___flmul@aexp
  3067     0761  0AC8               	incf	___flmul@aexp,f
  3068     0762                     l1870:
  3069     0762  0848               	movf	___flmul@aexp,w
  3070     0763  1903               	btfsc	3,2
  3071     0764  2F94               	goto	l1880
  3072     0765  3001               	movlw	1
  3073     0766  07CE               	addwf	___flmul@prod,f
  3074     0767  3000               	movlw	0
  3075     0768  1803               	skipnc
  3076     0769  3001               	movlw	1
  3077     076A  07CF               	addwf	___flmul@prod+1,f
  3078     076B  3000               	movlw	0
  3079     076C  1803               	skipnc
  3080     076D  3001               	movlw	1
  3081     076E  07D0               	addwf	___flmul@prod+2,f
  3082     076F  3000               	movlw	0
  3083     0770  1803               	skipnc
  3084     0771  3001               	movlw	1
  3085     0772  07D1               	addwf	___flmul@prod+3,f
  3086     0773  1C51               	btfss	___flmul@prod+3,0
  3087     0774  2F94               	goto	l1880
  3088     0775  084E               	movf	___flmul@prod,w
  3089     0776  00C2               	movwf	??___flmul
  3090     0777  084F               	movf	___flmul@prod+1,w
  3091     0778  00C3               	movwf	??___flmul+1
  3092     0779  0850               	movf	___flmul@prod+2,w
  3093     077A  00C4               	movwf	??___flmul+2
  3094     077B  0851               	movf	___flmul@prod+3,w
  3095     077C  00C5               	movwf	??___flmul+3
  3096     077D  3001               	movlw	1
  3097     077E  00C6               	movwf	??___flmul+4
  3098     077F                     u3105:
  3099     077F  0D45               	rlf	??___flmul+3,w
  3100     0780  0CC5               	rrf	??___flmul+3,f
  3101     0781  0CC4               	rrf	??___flmul+2,f
  3102     0782  0CC3               	rrf	??___flmul+1,f
  3103     0783  0CC2               	rrf	??___flmul,f
  3104     0784  0BC6               	decfsz	??___flmul+4,f
  3105     0785  2F7F               	goto	u3105
  3106     0786  0845               	movf	??___flmul+3,w
  3107     0787  00D1               	movwf	___flmul@prod+3
  3108     0788  0844               	movf	??___flmul+2,w
  3109     0789  00D0               	movwf	___flmul@prod+2
  3110     078A  0843               	movf	??___flmul+1,w
  3111     078B  00CF               	movwf	___flmul@prod+1
  3112     078C  0842               	movf	??___flmul,w
  3113     078D  00CE               	movwf	___flmul@prod
  3114     078E  3001               	movlw	1
  3115     078F  07D2               	addwf	___flmul@temp,f
  3116     0790  1803               	skipnc
  3117     0791  0AD3               	incf	___flmul@temp+1,f
  3118     0792  3000               	movlw	0
  3119     0793  07D3               	addwf	___flmul@temp+1,f
  3120     0794                     l1880:
  3121     0794  0853               	movf	___flmul@temp+1,w
  3122     0795  3A80               	xorlw	128
  3123     0796  00FF               	movwf	127
  3124     0797  3080               	movlw	128
  3125     0798  027F               	subwf	127,w
  3126     0799  1D03               	skipz
  3127     079A  2F9D               	goto	u3115
  3128     079B  30FF               	movlw	255
  3129     079C  0252               	subwf	___flmul@temp,w
  3130     079D                     u3115:
  3131     079D  1C03               	skipc
  3132     079E  2FAA               	goto	l1884
  3133     079F  307F               	movlw	127
  3134     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3135     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3136     07A2  00D1               	movwf	___flmul@prod+3
  3137     07A3  3080               	movlw	128
  3138     07A4  00D0               	movwf	___flmul@prod+2
  3139     07A5  3000               	movlw	0
  3140     07A6  00CF               	movwf	___flmul@prod+1
  3141     07A7  3000               	movlw	0
  3142     07A8  00CE               	movwf	___flmul@prod
  3143     07A9  2FD6               	goto	l629
  3144     07AA                     l1884:
  3145     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3146     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3147     07AC  0853               	movf	___flmul@temp+1,w
  3148     07AD  3A80               	xorlw	128
  3149     07AE  00FF               	movwf	127
  3150     07AF  3080               	movlw	128
  3151     07B0  027F               	subwf	127,w
  3152     07B1  1D03               	skipz
  3153     07B2  2FB5               	goto	u3125
  3154     07B3  3001               	movlw	1
  3155     07B4  0252               	subwf	___flmul@temp,w
  3156     07B5                     u3125:
  3157     07B5  1803               	skipnc
  3158     07B6  2FC3               	goto	l1890
  3159     07B7  3000               	movlw	0
  3160     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3161     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3162     07BA  00D1               	movwf	___flmul@prod+3
  3163     07BB  3000               	movlw	0
  3164     07BC  00D0               	movwf	___flmul@prod+2
  3165     07BD  3000               	movlw	0
  3166     07BE  00CF               	movwf	___flmul@prod+1
  3167     07BF  3000               	movlw	0
  3168     07C0  00CE               	movwf	___flmul@prod
  3169     07C1  01C7               	clrf	___flmul@sign
  3170     07C2  2FD6               	goto	l629
  3171     07C3                     l1890:
  3172     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3173     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3174     07C5  0852               	movf	___flmul@temp,w
  3175     07C6  00CD               	movwf	___flmul@bexp
  3176     07C7  30FF               	movlw	255
  3177     07C8  05CE               	andwf	___flmul@prod,f
  3178     07C9  30FF               	movlw	255
  3179     07CA  05CF               	andwf	___flmul@prod+1,f
  3180     07CB  307F               	movlw	127
  3181     07CC  05D0               	andwf	___flmul@prod+2,f
  3182     07CD  3000               	movlw	0
  3183     07CE  05D1               	andwf	___flmul@prod+3,f
  3184     07CF  184D               	btfsc	___flmul@bexp,0
  3185     07D0  17D0               	bsf	___flmul@prod+2,7
  3186     07D1  084D               	movf	___flmul@bexp,w
  3187     07D2  00C2               	movwf	??___flmul
  3188     07D3  1003               	clrc
  3189     07D4  0C42               	rrf	??___flmul,w
  3190     07D5  00D1               	movwf	___flmul@prod+3
  3191     07D6                     l629:
  3192     07D6  0847               	movf	___flmul@sign,w
  3193     07D7  00C2               	movwf	??___flmul
  3194     07D8  0842               	movf	??___flmul,w
  3195     07D9  04D1               	iorwf	___flmul@prod+3,f
  3196     07DA  0851               	movf	___flmul@prod+3,w
  3197     07DB  00BD               	movwf	?___flmul+3
  3198     07DC  0850               	movf	___flmul@prod+2,w
  3199     07DD  00BC               	movwf	?___flmul+2
  3200     07DE  084F               	movf	___flmul@prod+1,w
  3201     07DF  00BB               	movwf	?___flmul+1
  3202     07E0  084E               	movf	___flmul@prod,w
  3203     07E1  00BA               	movwf	?___flmul
  3204     07E2  0008               	return
  3205     07E3                     __end_of___flmul:
  3206                           
  3207                           	psect	text12
  3208     0BE6                     __ptext12:	
  3209 ;; *************** function __Umul8_16 *****************
  3210 ;; Defined at:
  3211 ;;		line 4 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul8_16.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  multiplier      1    wreg     unsigned char 
  3214 ;;  multiplicand    1    0[COMMON] unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  multiplier      1    8[COMMON] unsigned char 
  3217 ;;  word_mpld       2    6[COMMON] unsigned short 
  3218 ;;  product         2    4[COMMON] unsigned short 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2    0[COMMON] unsigned int 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 300/0
  3225 ;;		On exit  : 300/0
  3226 ;;		Unchanged: 300/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         2       0       0       0       0
  3229 ;;      Locals:         5       0       0       0       0
  3230 ;;      Temps:          2       0       0       0       0
  3231 ;;      Totals:         9       0       0       0       0
  3232 ;;Total ram usage:        9 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		___flmul
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241     0BE6                     __Umul8_16:	
  3242                           ;psect for function __Umul8_16
  3243                           
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3247                           ;__Umul8_16@multiplier stored from wreg
  3248     0BE6  00F8               	movwf	__Umul8_16@multiplier
  3249     0BE7  01F4               	clrf	__Umul8_16@product
  3250     0BE8  01F5               	clrf	__Umul8_16@product+1
  3251     0BE9  0870               	movf	__Umul8_16@multiplicand,w
  3252     0BEA  00F2               	movwf	??__Umul8_16
  3253     0BEB  01F3               	clrf	??__Umul8_16+1
  3254     0BEC  0872               	movf	??__Umul8_16,w
  3255     0BED  00F6               	movwf	__Umul8_16@word_mpld
  3256     0BEE  0873               	movf	??__Umul8_16+1,w
  3257     0BEF  00F7               	movwf	__Umul8_16@word_mpld+1
  3258     0BF0                     l1550:
  3259     0BF0  1C78               	btfss	__Umul8_16@multiplier,0
  3260     0BF1  2BF8               	goto	l636
  3261     0BF2  0876               	movf	__Umul8_16@word_mpld,w
  3262     0BF3  07F4               	addwf	__Umul8_16@product,f
  3263     0BF4  1803               	skipnc
  3264     0BF5  0AF5               	incf	__Umul8_16@product+1,f
  3265     0BF6  0877               	movf	__Umul8_16@word_mpld+1,w
  3266     0BF7  07F5               	addwf	__Umul8_16@product+1,f
  3267     0BF8                     l636:
  3268     0BF8  3001               	movlw	1
  3269     0BF9                     u2185:
  3270     0BF9  1003               	clrc
  3271     0BFA  0DF6               	rlf	__Umul8_16@word_mpld,f
  3272     0BFB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3273     0BFC  3EFF               	addlw	-1
  3274     0BFD  1D03               	skipz
  3275     0BFE  2BF9               	goto	u2185
  3276     0BFF  1003               	clrc
  3277     0C00  0CF8               	rrf	__Umul8_16@multiplier,f
  3278     0C01  0878               	movf	__Umul8_16@multiplier,w
  3279     0C02  1D03               	btfss	3,2
  3280     0C03  2BF0               	goto	l1550
  3281     0C04  0875               	movf	__Umul8_16@product+1,w
  3282     0C05  00F1               	movwf	?__Umul8_16+1
  3283     0C06  0874               	movf	__Umul8_16@product,w
  3284     0C07  00F0               	movwf	?__Umul8_16
  3285     0C08  0008               	return
  3286     0C09                     __end_of__Umul8_16:
  3287                           
  3288                           	psect	text13
  3289     0373                     __ptext13:	
  3290 ;; *************** function ___fldiv *****************
  3291 ;; Defined at:
  3292 ;;		line 8 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/sprcdiv.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  a               4    0[BANK0 ] unsigned int 
  3295 ;;  b               4    4[BANK0 ] unsigned int 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  grs             4   20[BANK0 ] unsigned long 
  3298 ;;  rem             4   13[BANK0 ] unsigned long 
  3299 ;;  new_exp         2   18[BANK0 ] short 
  3300 ;;  aexp            1   25[BANK0 ] unsigned char 
  3301 ;;  bexp            1   24[BANK0 ] unsigned char 
  3302 ;;  sign            1   17[BANK0 ] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  4    0[BANK0 ] unsigned char 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, btemp+1
  3307 ;; Tracked objects:
  3308 ;;		On entry : 300/0
  3309 ;;		On exit  : 300/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3312 ;;      Params:         0       8       0       0       0
  3313 ;;      Locals:         0      13       0       0       0
  3314 ;;      Temps:          0       5       0       0       0
  3315 ;;      Totals:         0      26       0       0       0
  3316 ;;Total ram usage:       26 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_readTemperature
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325     0373                     ___fldiv:	
  3326                           ;psect for function ___fldiv
  3327                           
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3331     0373  0827               	movf	___fldiv@b+3,w
  3332     0374  3980               	andlw	128
  3333     0375  00B1               	movwf	___fldiv@sign
  3334     0376  0827               	movf	___fldiv@b+3,w
  3335     0377  00A8               	movwf	??___fldiv
  3336     0378  0728               	addwf	??___fldiv,w
  3337     0379  00B8               	movwf	___fldiv@bexp
  3338     037A  1BA6               	btfsc	___fldiv@b+2,7
  3339     037B  1438               	bsf	___fldiv@bexp,0
  3340     037C  0838               	movf	___fldiv@bexp,w
  3341     037D  1903               	btfsc	3,2
  3342     037E  2B8D               	goto	l1638
  3343     037F  0A38               	incf	___fldiv@bexp,w
  3344     0380  1D03               	btfss	3,2
  3345     0381  2B8A               	goto	l1634
  3346     0382  3000               	movlw	0
  3347     0383  00A7               	movwf	___fldiv@b+3
  3348     0384  3000               	movlw	0
  3349     0385  00A6               	movwf	___fldiv@b+2
  3350     0386  3000               	movlw	0
  3351     0387  00A5               	movwf	___fldiv@b+1
  3352     0388  3000               	movlw	0
  3353     0389  00A4               	movwf	___fldiv@b
  3354     038A                     l1634:
  3355     038A  17A6               	bsf	___fldiv@b+2,7
  3356     038B  01A7               	clrf	___fldiv@b+3
  3357     038C  2B95               	goto	l1640
  3358     038D                     l1638:
  3359     038D  3000               	movlw	0
  3360     038E  00A7               	movwf	___fldiv@b+3
  3361     038F  3000               	movlw	0
  3362     0390  00A6               	movwf	___fldiv@b+2
  3363     0391  3000               	movlw	0
  3364     0392  00A5               	movwf	___fldiv@b+1
  3365     0393  3000               	movlw	0
  3366     0394  00A4               	movwf	___fldiv@b
  3367     0395                     l1640:
  3368     0395  0823               	movf	___fldiv@a+3,w
  3369     0396  3980               	andlw	128
  3370     0397  00A8               	movwf	??___fldiv
  3371     0398  0828               	movf	??___fldiv,w
  3372     0399  06B1               	xorwf	___fldiv@sign,f
  3373     039A  0823               	movf	___fldiv@a+3,w
  3374     039B  00A8               	movwf	??___fldiv
  3375     039C  0728               	addwf	??___fldiv,w
  3376     039D  00B9               	movwf	___fldiv@aexp
  3377     039E  1BA2               	btfsc	___fldiv@a+2,7
  3378     039F  1439               	bsf	___fldiv@aexp,0
  3379     03A0  0839               	movf	___fldiv@aexp,w
  3380     03A1  1903               	btfsc	3,2
  3381     03A2  2BB1               	goto	l1658
  3382     03A3  0A39               	incf	___fldiv@aexp,w
  3383     03A4  1D03               	btfss	3,2
  3384     03A5  2BAE               	goto	l1654
  3385     03A6  3000               	movlw	0
  3386     03A7  00A3               	movwf	___fldiv@a+3
  3387     03A8  3000               	movlw	0
  3388     03A9  00A2               	movwf	___fldiv@a+2
  3389     03AA  3000               	movlw	0
  3390     03AB  00A1               	movwf	___fldiv@a+1
  3391     03AC  3000               	movlw	0
  3392     03AD  00A0               	movwf	___fldiv@a
  3393     03AE                     l1654:
  3394     03AE  17A2               	bsf	___fldiv@a+2,7
  3395     03AF  01A3               	clrf	___fldiv@a+3
  3396     03B0  2BB9               	goto	l577
  3397     03B1                     l1658:
  3398     03B1  3000               	movlw	0
  3399     03B2  00A3               	movwf	___fldiv@a+3
  3400     03B3  3000               	movlw	0
  3401     03B4  00A2               	movwf	___fldiv@a+2
  3402     03B5  3000               	movlw	0
  3403     03B6  00A1               	movwf	___fldiv@a+1
  3404     03B7  3000               	movlw	0
  3405     03B8  00A0               	movwf	___fldiv@a
  3406     03B9                     l577:
  3407     03B9  0823               	movf	___fldiv@a+3,w
  3408     03BA  0422               	iorwf	___fldiv@a+2,w
  3409     03BB  0421               	iorwf	___fldiv@a+1,w
  3410     03BC  0420               	iorwf	___fldiv@a,w
  3411     03BD  1D03               	skipz
  3412     03BE  2BD8               	goto	l1668
  3413     03BF  3000               	movlw	0
  3414     03C0  00A7               	movwf	___fldiv@b+3
  3415     03C1  3000               	movlw	0
  3416     03C2  00A6               	movwf	___fldiv@b+2
  3417     03C3  3000               	movlw	0
  3418     03C4  00A5               	movwf	___fldiv@b+1
  3419     03C5  3000               	movlw	0
  3420     03C6  00A4               	movwf	___fldiv@b
  3421     03C7  3080               	movlw	128
  3422     03C8  04A6               	iorwf	___fldiv@b+2,f
  3423     03C9  307F               	movlw	127
  3424     03CA  04A7               	iorwf	___fldiv@b+3,f
  3425     03CB                     L2:
  3426     03CB  0831               	movf	___fldiv@sign,w
  3427     03CC  00A8               	movwf	??___fldiv
  3428     03CD  0828               	movf	??___fldiv,w
  3429     03CE  04A7               	iorwf	___fldiv@b+3,f
  3430     03CF  0827               	movf	___fldiv@b+3,w
  3431     03D0  00A3               	movwf	?___fldiv+3
  3432     03D1  0826               	movf	___fldiv@b+2,w
  3433     03D2  00A2               	movwf	?___fldiv+2
  3434     03D3  0825               	movf	___fldiv@b+1,w
  3435     03D4  00A1               	movwf	?___fldiv+1
  3436     03D5  0824               	movf	___fldiv@b,w
  3437     03D6  00A0               	movwf	?___fldiv
  3438     03D7  0008               	return
  3439     03D8                     l1668:
  3440     03D8  0838               	movf	___fldiv@bexp,w
  3441     03D9  1D03               	btfss	3,2
  3442     03DA  2BE4               	goto	l1674
  3443     03DB  3000               	movlw	0
  3444     03DC  00A3               	movwf	?___fldiv+3
  3445     03DD  3000               	movlw	0
  3446     03DE  00A2               	movwf	?___fldiv+2
  3447     03DF  3000               	movlw	0
  3448     03E0  00A1               	movwf	?___fldiv+1
  3449     03E1  3000               	movlw	0
  3450     03E2  00A0               	movwf	?___fldiv
  3451     03E3  0008               	return
  3452     03E4                     l1674:
  3453     03E4  0838               	movf	___fldiv@bexp,w
  3454     03E5  00A8               	movwf	??___fldiv
  3455     03E6  01A9               	clrf	??___fldiv+1
  3456     03E7  0829               	movf	??___fldiv+1,w
  3457     03E8  00AB               	movwf	??___fldiv+3
  3458     03E9  0839               	movf	___fldiv@aexp,w
  3459     03EA  0228               	subwf	??___fldiv,w
  3460     03EB  00AA               	movwf	??___fldiv+2
  3461     03EC  1C03               	skipc
  3462     03ED  03AB               	decf	??___fldiv+3,f
  3463     03EE  082A               	movf	??___fldiv+2,w
  3464     03EF  3E7F               	addlw	127
  3465     03F0  00B2               	movwf	___fldiv@new_exp
  3466     03F1  082B               	movf	??___fldiv+3,w
  3467     03F2  1803               	skipnc
  3468     03F3  3E01               	addlw	1
  3469     03F4  3E00               	addlw	0
  3470     03F5  00B3               	movwf	___fldiv@new_exp+1
  3471     03F6  0827               	movf	___fldiv@b+3,w
  3472     03F7  00B0               	movwf	___fldiv@rem+3
  3473     03F8  0826               	movf	___fldiv@b+2,w
  3474     03F9  00AF               	movwf	___fldiv@rem+2
  3475     03FA  0825               	movf	___fldiv@b+1,w
  3476     03FB  00AE               	movwf	___fldiv@rem+1
  3477     03FC  0824               	movf	___fldiv@b,w
  3478     03FD  00AD               	movwf	___fldiv@rem
  3479     03FE  3000               	movlw	0
  3480     03FF  00A7               	movwf	___fldiv@b+3
  3481     0400  3000               	movlw	0
  3482     0401  00A6               	movwf	___fldiv@b+2
  3483     0402  3000               	movlw	0
  3484     0403  00A5               	movwf	___fldiv@b+1
  3485     0404  3000               	movlw	0
  3486     0405  00A4               	movwf	___fldiv@b
  3487     0406  3000               	movlw	0
  3488     0407  00B7               	movwf	___fldiv@grs+3
  3489     0408  3000               	movlw	0
  3490     0409  00B6               	movwf	___fldiv@grs+2
  3491     040A  3000               	movlw	0
  3492     040B  00B5               	movwf	___fldiv@grs+1
  3493     040C  3000               	movlw	0
  3494     040D  00B4               	movwf	___fldiv@grs
  3495     040E  01B9               	clrf	___fldiv@aexp
  3496     040F                     l1702:
  3497     040F  301A               	movlw	26
  3498     0410  0239               	subwf	___fldiv@aexp,w
  3499     0411  1803               	btfsc	3,0
  3500     0412  2C57               	goto	l1704
  3501     0413  0839               	movf	___fldiv@aexp,w
  3502     0414  1903               	btfsc	3,2
  3503     0415  2C33               	goto	l1694
  3504     0416  3001               	movlw	1
  3505     0417  00A8               	movwf	??___fldiv
  3506     0418                     u2585:
  3507     0418  1003               	clrc
  3508     0419  0DAD               	rlf	___fldiv@rem,f
  3509     041A  0DAE               	rlf	___fldiv@rem+1,f
  3510     041B  0DAF               	rlf	___fldiv@rem+2,f
  3511     041C  0DB0               	rlf	___fldiv@rem+3,f
  3512     041D  0BA8               	decfsz	??___fldiv,f
  3513     041E  2C18               	goto	u2585
  3514     041F  3001               	movlw	1
  3515     0420  00A8               	movwf	??___fldiv
  3516     0421                     u2595:
  3517     0421  1003               	clrc
  3518     0422  0DA4               	rlf	___fldiv@b,f
  3519     0423  0DA5               	rlf	___fldiv@b+1,f
  3520     0424  0DA6               	rlf	___fldiv@b+2,f
  3521     0425  0DA7               	rlf	___fldiv@b+3,f
  3522     0426  0BA8               	decfsz	??___fldiv,f
  3523     0427  2C21               	goto	u2595
  3524     0428  1BB7               	btfsc	___fldiv@grs+3,7
  3525     0429  1424               	bsf	___fldiv@b,0
  3526     042A  3001               	movlw	1
  3527     042B  00A8               	movwf	??___fldiv
  3528     042C                     u2615:
  3529     042C  1003               	clrc
  3530     042D  0DB4               	rlf	___fldiv@grs,f
  3531     042E  0DB5               	rlf	___fldiv@grs+1,f
  3532     042F  0DB6               	rlf	___fldiv@grs+2,f
  3533     0430  0DB7               	rlf	___fldiv@grs+3,f
  3534     0431  0BA8               	decfsz	??___fldiv,f
  3535     0432  2C2C               	goto	u2615
  3536     0433                     l1694:
  3537     0433  0823               	movf	___fldiv@a+3,w
  3538     0434  0230               	subwf	___fldiv@rem+3,w
  3539     0435  1D03               	skipz
  3540     0436  2C41               	goto	u2625
  3541     0437  0822               	movf	___fldiv@a+2,w
  3542     0438  022F               	subwf	___fldiv@rem+2,w
  3543     0439  1D03               	skipz
  3544     043A  2C41               	goto	u2625
  3545     043B  0821               	movf	___fldiv@a+1,w
  3546     043C  022E               	subwf	___fldiv@rem+1,w
  3547     043D  1D03               	skipz
  3548     043E  2C41               	goto	u2625
  3549     043F  0820               	movf	___fldiv@a,w
  3550     0440  022D               	subwf	___fldiv@rem,w
  3551     0441                     u2625:
  3552     0441  1C03               	skipc
  3553     0442  2C52               	goto	l1700
  3554     0443  1737               	bsf	___fldiv@grs+3,6
  3555     0444  0820               	movf	___fldiv@a,w
  3556     0445  02AD               	subwf	___fldiv@rem,f
  3557     0446  0821               	movf	___fldiv@a+1,w
  3558     0447  1C03               	skipc
  3559     0448  0F21               	incfsz	___fldiv@a+1,w
  3560     0449  02AE               	subwf	___fldiv@rem+1,f
  3561     044A  0822               	movf	___fldiv@a+2,w
  3562     044B  1C03               	skipc
  3563     044C  0F22               	incfsz	___fldiv@a+2,w
  3564     044D  02AF               	subwf	___fldiv@rem+2,f
  3565     044E  0823               	movf	___fldiv@a+3,w
  3566     044F  1C03               	skipc
  3567     0450  0F23               	incfsz	___fldiv@a+3,w
  3568     0451  02B0               	subwf	___fldiv@rem+3,f
  3569     0452                     l1700:
  3570     0452  3001               	movlw	1
  3571     0453  00A8               	movwf	??___fldiv
  3572     0454  0828               	movf	??___fldiv,w
  3573     0455  07B9               	addwf	___fldiv@aexp,f
  3574     0456  2C0F               	goto	l1702
  3575     0457                     l1704:
  3576     0457  0830               	movf	___fldiv@rem+3,w
  3577     0458  042F               	iorwf	___fldiv@rem+2,w
  3578     0459  042E               	iorwf	___fldiv@rem+1,w
  3579     045A  042D               	iorwf	___fldiv@rem,w
  3580     045B  1D03               	btfss	3,2
  3581     045C  1434               	bsf	___fldiv@grs,0
  3582     045D                     l1718:
  3583     045D  1BA6               	btfsc	___fldiv@b+2,7
  3584     045E  2C7A               	goto	l1720
  3585     045F  3001               	movlw	1
  3586     0460  00A8               	movwf	??___fldiv
  3587     0461                     u2655:
  3588     0461  1003               	clrc
  3589     0462  0DA4               	rlf	___fldiv@b,f
  3590     0463  0DA5               	rlf	___fldiv@b+1,f
  3591     0464  0DA6               	rlf	___fldiv@b+2,f
  3592     0465  0DA7               	rlf	___fldiv@b+3,f
  3593     0466  0BA8               	decfsz	??___fldiv,f
  3594     0467  2C61               	goto	u2655
  3595     0468  1BB7               	btfsc	___fldiv@grs+3,7
  3596     0469  1424               	bsf	___fldiv@b,0
  3597     046A  3001               	movlw	1
  3598     046B  00A8               	movwf	??___fldiv
  3599     046C                     u2675:
  3600     046C  1003               	clrc
  3601     046D  0DB4               	rlf	___fldiv@grs,f
  3602     046E  0DB5               	rlf	___fldiv@grs+1,f
  3603     046F  0DB6               	rlf	___fldiv@grs+2,f
  3604     0470  0DB7               	rlf	___fldiv@grs+3,f
  3605     0471  0BA8               	decfsz	??___fldiv,f
  3606     0472  2C6C               	goto	u2675
  3607     0473  30FF               	movlw	255
  3608     0474  07B2               	addwf	___fldiv@new_exp,f
  3609     0475  1803               	skipnc
  3610     0476  0AB3               	incf	___fldiv@new_exp+1,f
  3611     0477  30FF               	movlw	255
  3612     0478  07B3               	addwf	___fldiv@new_exp+1,f
  3613     0479  2C5D               	goto	l1718
  3614     047A                     l1720:
  3615     047A  01B9               	clrf	___fldiv@aexp
  3616     047B  1FB7               	btfss	___fldiv@grs+3,7
  3617     047C  2C93               	goto	l1730
  3618     047D  30FF               	movlw	255
  3619     047E  0534               	andwf	___fldiv@grs,w
  3620     047F  00A8               	movwf	??___fldiv
  3621     0480  30FF               	movlw	255
  3622     0481  0535               	andwf	___fldiv@grs+1,w
  3623     0482  00A9               	movwf	??___fldiv+1
  3624     0483  30FF               	movlw	255
  3625     0484  0536               	andwf	___fldiv@grs+2,w
  3626     0485  00AA               	movwf	??___fldiv+2
  3627     0486  307F               	movlw	127
  3628     0487  0537               	andwf	___fldiv@grs+3,w
  3629     0488  00AB               	movwf	??___fldiv+3
  3630     0489  082B               	movf	??___fldiv+3,w
  3631     048A  042A               	iorwf	??___fldiv+2,w
  3632     048B  0429               	iorwf	??___fldiv+1,w
  3633     048C  0428               	iorwf	??___fldiv,w
  3634     048D  1903               	skipnz
  3635     048E  1824               	btfsc	___fldiv@b,0
  3636     048F  2C91               	goto	l1726
  3637     0490  2C93               	goto	l1730
  3638     0491                     l1726:
  3639     0491  01B9               	clrf	___fldiv@aexp
  3640     0492  0AB9               	incf	___fldiv@aexp,f
  3641     0493                     l1730:
  3642     0493  0839               	movf	___fldiv@aexp,w
  3643     0494  1903               	btfsc	3,2
  3644     0495  2CC5               	goto	l1740
  3645     0496  3001               	movlw	1
  3646     0497  07A4               	addwf	___fldiv@b,f
  3647     0498  3000               	movlw	0
  3648     0499  1803               	skipnc
  3649     049A  3001               	movlw	1
  3650     049B  07A5               	addwf	___fldiv@b+1,f
  3651     049C  3000               	movlw	0
  3652     049D  1803               	skipnc
  3653     049E  3001               	movlw	1
  3654     049F  07A6               	addwf	___fldiv@b+2,f
  3655     04A0  3000               	movlw	0
  3656     04A1  1803               	skipnc
  3657     04A2  3001               	movlw	1
  3658     04A3  07A7               	addwf	___fldiv@b+3,f
  3659     04A4  1C27               	btfss	___fldiv@b+3,0
  3660     04A5  2CC5               	goto	l1740
  3661     04A6  0824               	movf	___fldiv@b,w
  3662     04A7  00A8               	movwf	??___fldiv
  3663     04A8  0825               	movf	___fldiv@b+1,w
  3664     04A9  00A9               	movwf	??___fldiv+1
  3665     04AA  0826               	movf	___fldiv@b+2,w
  3666     04AB  00AA               	movwf	??___fldiv+2
  3667     04AC  0827               	movf	___fldiv@b+3,w
  3668     04AD  00AB               	movwf	??___fldiv+3
  3669     04AE  3001               	movlw	1
  3670     04AF  00AC               	movwf	??___fldiv+4
  3671     04B0                     u2745:
  3672     04B0  0D2B               	rlf	??___fldiv+3,w
  3673     04B1  0CAB               	rrf	??___fldiv+3,f
  3674     04B2  0CAA               	rrf	??___fldiv+2,f
  3675     04B3  0CA9               	rrf	??___fldiv+1,f
  3676     04B4  0CA8               	rrf	??___fldiv,f
  3677     04B5  0BAC               	decfsz	??___fldiv+4,f
  3678     04B6  2CB0               	goto	u2745
  3679     04B7  082B               	movf	??___fldiv+3,w
  3680     04B8  00A7               	movwf	___fldiv@b+3
  3681     04B9  082A               	movf	??___fldiv+2,w
  3682     04BA  00A6               	movwf	___fldiv@b+2
  3683     04BB  0829               	movf	??___fldiv+1,w
  3684     04BC  00A5               	movwf	___fldiv@b+1
  3685     04BD  0828               	movf	??___fldiv,w
  3686     04BE  00A4               	movwf	___fldiv@b
  3687     04BF  3001               	movlw	1
  3688     04C0  07B2               	addwf	___fldiv@new_exp,f
  3689     04C1  1803               	skipnc
  3690     04C2  0AB3               	incf	___fldiv@new_exp+1,f
  3691     04C3  3000               	movlw	0
  3692     04C4  07B3               	addwf	___fldiv@new_exp+1,f
  3693     04C5                     l1740:
  3694     04C5  0833               	movf	___fldiv@new_exp+1,w
  3695     04C6  3A80               	xorlw	128
  3696     04C7  00FF               	movwf	127
  3697     04C8  3080               	movlw	128
  3698     04C9  027F               	subwf	127,w
  3699     04CA  1D03               	skipz
  3700     04CB  2CCE               	goto	u2755
  3701     04CC  30FF               	movlw	255
  3702     04CD  0232               	subwf	___fldiv@new_exp,w
  3703     04CE                     u2755:
  3704     04CE  1C03               	skipc
  3705     04CF  2CDE               	goto	l1744
  3706     04D0  30FF               	movlw	255
  3707     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3708     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3709     04D3  00B2               	movwf	___fldiv@new_exp
  3710     04D4  3000               	movlw	0
  3711     04D5  00B3               	movwf	___fldiv@new_exp+1
  3712     04D6  3000               	movlw	0
  3713     04D7  00A7               	movwf	___fldiv@b+3
  3714     04D8  3000               	movlw	0
  3715     04D9  00A6               	movwf	___fldiv@b+2
  3716     04DA  3000               	movlw	0
  3717     04DB  00A5               	movwf	___fldiv@b+1
  3718     04DC  3000               	movlw	0
  3719     04DD  00A4               	movwf	___fldiv@b
  3720     04DE                     l1744:
  3721     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3722     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3723     04E0  0833               	movf	___fldiv@new_exp+1,w
  3724     04E1  3A80               	xorlw	128
  3725     04E2  00FF               	movwf	127
  3726     04E3  3080               	movlw	128
  3727     04E4  027F               	subwf	127,w
  3728     04E5  1D03               	skipz
  3729     04E6  2CE9               	goto	u2765
  3730     04E7  3001               	movlw	1
  3731     04E8  0232               	subwf	___fldiv@new_exp,w
  3732     04E9                     u2765:
  3733     04E9  1803               	skipnc
  3734     04EA  2CF8               	goto	l599
  3735     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3736     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3737     04ED  01B2               	clrf	___fldiv@new_exp
  3738     04EE  01B3               	clrf	___fldiv@new_exp+1
  3739     04EF  3000               	movlw	0
  3740     04F0  00A7               	movwf	___fldiv@b+3
  3741     04F1  3000               	movlw	0
  3742     04F2  00A6               	movwf	___fldiv@b+2
  3743     04F3  3000               	movlw	0
  3744     04F4  00A5               	movwf	___fldiv@b+1
  3745     04F5  3000               	movlw	0
  3746     04F6  00A4               	movwf	___fldiv@b
  3747     04F7  01B1               	clrf	___fldiv@sign
  3748     04F8                     l599:
  3749     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3750     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3751     04FA  0832               	movf	___fldiv@new_exp,w
  3752     04FB  00B8               	movwf	___fldiv@bexp
  3753     04FC  1C38               	btfss	___fldiv@bexp,0
  3754     04FD  2D00               	goto	l1756
  3755     04FE  17A6               	bsf	___fldiv@b+2,7
  3756     04FF  2D04               	goto	l601
  3757     0500                     l1756:
  3758     0500  307F               	movlw	127
  3759     0501  00A8               	movwf	??___fldiv
  3760     0502  0828               	movf	??___fldiv,w
  3761     0503  05A6               	andwf	___fldiv@b+2,f
  3762     0504                     l601:
  3763     0504  0838               	movf	___fldiv@bexp,w
  3764     0505  00A8               	movwf	??___fldiv
  3765     0506  1003               	clrc
  3766     0507  0C28               	rrf	??___fldiv,w
  3767     0508  00A7               	movwf	___fldiv@b+3
  3768     0509  2BCB               	goto	L2
  3769     050A                     __end_of___fldiv:
  3770                           
  3771                           	psect	text14
  3772     0B19                     __ptext14:	
  3773 ;; *************** function _initRPM *****************
  3774 ;; Defined at:
  3775 ;;		line 31 in file "newmain.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : B00/100
  3786 ;;		On exit  : B00/0
  3787 ;;		Unchanged: 800/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802     0B19                     _initRPM:	
  3803                           ;psect for function _initRPM
  3804                           
  3805                           
  3806                           ;newmain.c: 33:     TMR0 = 0;
  3807                           
  3808                           ;incstack = 0
  3809                           ; Regs used in _initRPM: [wreg+status,2+status,0]
  3810     0B19  1406               	bsf	6,0	;volatile
  3811                           
  3812                           ;newmain.c: 34:     INTCONbits.TMR0IF = 0;
  3813     0B1A  1703               	bsf	3,6	;RP1=1, select bank3
  3814     0B1B  0189               	clrf	9	;volatile
  3815                           
  3816                           ;newmain.c: 36:     while (!INTCONbits.TMR0IF) {
  3817     0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  3818     0B1D  1281               	bcf	1,5	;volatile
  3819                           
  3820                           ;newmain.c: 37:         currentState = PORTBbits.RB0;
  3821     0B1E  1181               	bcf	1,3	;volatile
  3822                           
  3823                           ;newmain.c: 38: 
  3824     0B1F  3007               	movlw	7
  3825     0B20  0481               	iorwf	1,f	;volatile
  3826                           
  3827                           ;newmain.c: 39:         if (currentState != lastState && currentState == 1) {
  3828     0B21  1283               	bcf	3,5	;RP0=0, select bank0
  3829     0B22  0181               	clrf	1	;volatile
  3830     0B23  0008               	return
  3831     0B24                     __end_of_initRPM:
  3832                           
  3833                           	psect	text15
  3834     0B3B                     __ptext15:	
  3835 ;; *************** function _initPWM *****************
  3836 ;; Defined at:
  3837 ;;		line 20 in file "newmain.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2
  3846 ;; Tracked objects:
  3847 ;;		On entry : B00/0
  3848 ;;		On exit  : B00/0
  3849 ;;		Unchanged: 800/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         0       0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0B3B                     _initPWM:	
  3865                           ;psect for function _initPWM
  3866                           
  3867                           
  3868                           ;newmain.c: 21:     OPTION_REGbits.T0CS = 0;
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _initPWM: [wreg+status,2]
  3872     0B3B  3007               	movlw	7
  3873     0B3C  0092               	movwf	18	;volatile
  3874                           
  3875                           ;newmain.c: 22:     OPTION_REGbits.PSA = 0;
  3876     0B3D  30FF               	movlw	255
  3877     0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  3878     0B3F  0092               	movwf	18	;volatile
  3879                           
  3880                           ;newmain.c: 23:     OPTION_REGbits.PS = 0b111;
  3881     0B40  300C               	movlw	12
  3882     0B41  1283               	bcf	3,5	;RP0=0, select bank0
  3883     0B42  0097               	movwf	23	;volatile
  3884                           
  3885                           ;newmain.c: 24:     TMR0 = 0;
  3886     0B43  0195               	clrf	21	;volatile
  3887                           
  3888                           ;newmain.c: 25: }
  3889     0B44  3004               	movlw	4
  3890     0B45  0092               	movwf	18	;volatile
  3891     0B46  0008               	return
  3892     0B47                     __end_of_initPWM:
  3893                           
  3894                           	psect	text16
  3895     0B2F                     __ptext16:	
  3896 ;; *************** function _initADC *****************
  3897 ;; Defined at:
  3898 ;;		line 65 in file "newmain.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg
  3907 ;; Tracked objects:
  3908 ;;		On entry : B00/0
  3909 ;;		On exit  : B00/100
  3910 ;;		Unchanged: 800/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925     0B2F                     _initADC:	
  3926                           ;psect for function _initADC
  3927                           
  3928                           
  3929                           ;newmain.c: 66: }
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in _initADC: [wreg]
  3933     0B2F  3001               	movlw	1
  3934     0B30  1683               	bsf	3,5	;RP0=1, select bank3
  3935     0B31  1703               	bsf	3,6	;RP1=1, select bank3
  3936     0B32  0088               	movwf	8	;volatile
  3937                           
  3938                           ;newmain.c: 67: 
  3939     0B33  3001               	movlw	1
  3940     0B34  1283               	bcf	3,5	;RP0=0, select bank0
  3941     0B35  1303               	bcf	3,6	;RP1=0, select bank0
  3942     0B36  009F               	movwf	31	;volatile
  3943                           
  3944                           ;newmain.c: 68: void main() {
  3945     0B37  3080               	movlw	128
  3946     0B38  1683               	bsf	3,5	;RP0=1, select bank1
  3947     0B39  009F               	movwf	31	;volatile
  3948     0B3A  0008               	return
  3949     0B3B                     __end_of_initADC:
  3950                           
  3951                           	psect	text17
  3952     0C09                     __ptext17:	
  3953 ;; *************** function _countPulses *****************
  3954 ;; Defined at:
  3955 ;;		line 43 in file "newmain.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  pulseCount      2    2[COMMON] unsigned int 
  3960 ;;  currentState    1    5[COMMON] unsigned char 
  3961 ;;  lastState       1    4[COMMON] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  2    0[COMMON] unsigned int 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 300/100
  3968 ;;		On exit  : 300/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         2       0       0       0       0
  3972 ;;      Locals:         4       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         6       0       0       0       0
  3975 ;;Total ram usage:        6 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_main
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984     0C09                     _countPulses:	
  3985                           ;psect for function _countPulses
  3986                           
  3987                           
  3988                           ;newmain.c: 44: 
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _countPulses: [wreg+status,2+status,0]
  3992     0C09  01F2               	clrf	countPulses@pulseCount
  3993     0C0A  01F3               	clrf	countPulses@pulseCount+1
  3994                           
  3995                           ;newmain.c: 45: 
  3996     0C0B  3000               	movlw	0
  3997     0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  3998     0C0D  1806               	btfsc	6,0	;volatile
  3999     0C0E  3001               	movlw	1
  4000     0C0F  00F4               	movwf	countPulses@lastState
  4001                           
  4002                           ;newmain.c: 46:     return 1200;;newmain.c: 48: 
  4003     0C10  0181               	clrf	1	;volatile
  4004                           
  4005                           ;newmain.c: 49: 
  4006     0C11  110B               	bcf	11,2	;volatile
  4007     0C12                     l2038:	
  4008                           ;newmain.c: 51:     ANSEL = 0x01;
  4009                           
  4010                           
  4011                           ;newmain.c: 51:     ANSEL = 0x01;
  4012     0C12  190B               	btfsc	11,2	;volatile
  4013     0C13  2C28               	goto	l2040
  4014                           
  4015                           ;newmain.c: 52:     ADCON0 = 0x01;
  4016     0C14  3000               	movlw	0
  4017     0C15  1806               	btfsc	6,0	;volatile
  4018     0C16  3001               	movlw	1
  4019     0C17  00F5               	movwf	countPulses@currentState
  4020                           
  4021                           ;newmain.c: 54: }
  4022     0C18  0875               	movf	countPulses@currentState,w
  4023     0C19  0674               	xorwf	countPulses@lastState,w
  4024     0C1A  1903               	skipnz
  4025     0C1B  2C25               	goto	l106
  4026     0C1C  0375               	decf	countPulses@currentState,w
  4027     0C1D  1D03               	btfss	3,2
  4028     0C1E  2C25               	goto	l106
  4029                           
  4030                           ;newmain.c: 55: 
  4031     0C1F  3001               	movlw	1
  4032     0C20  07F2               	addwf	countPulses@pulseCount,f
  4033     0C21  1803               	skipnc
  4034     0C22  0AF3               	incf	countPulses@pulseCount+1,f
  4035     0C23  3000               	movlw	0
  4036     0C24  07F3               	addwf	countPulses@pulseCount+1,f
  4037     0C25                     l106:	
  4038                           ;newmain.c: 56: unsigned int readADC() {
  4039                           
  4040                           
  4041                           ;newmain.c: 57:     ADCON0bits.GO = 1;
  4042     0C25  0875               	movf	countPulses@currentState,w
  4043     0C26  00F4               	movwf	countPulses@lastState
  4044     0C27  2C12               	goto	l2038
  4045     0C28                     l2040:
  4046                           
  4047                           ;newmain.c: 61: 
  4048     0C28  30B0               	movlw	176
  4049     0C29  00F0               	movwf	?_countPulses
  4050     0C2A  3004               	movlw	4
  4051     0C2B  00F1               	movwf	?_countPulses+1
  4052     0C2C  0008               	return
  4053     0C2D                     __end_of_countPulses:
  4054                           
  4055                           	psect	text18
  4056     0BA2                     __ptext18:	
  4057 ;; *************** function ___wmul *****************
  4058 ;; Defined at:
  4059 ;;		line 15 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  multiplier      2    0[COMMON] unsigned int 
  4062 ;;  multiplicand    2    2[COMMON] unsigned int 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  product         2    4[COMMON] unsigned int 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  2    0[COMMON] unsigned int 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 300/0
  4071 ;;		On exit  : 300/0
  4072 ;;		Unchanged: 300/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4074 ;;      Params:         4       0       0       0       0
  4075 ;;      Locals:         2       0       0       0       0
  4076 ;;      Temps:          0       0       0       0       0
  4077 ;;      Totals:         6       0       0       0       0
  4078 ;;Total ram usage:        6 bytes
  4079 ;; Hardware stack levels used: 1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087     0BA2                     ___wmul:	
  4088                           ;psect for function ___wmul
  4089                           
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4093     0BA2  01F4               	clrf	___wmul@product
  4094     0BA3  01F5               	clrf	___wmul@product+1
  4095     0BA4                     l2068:
  4096     0BA4  1C70               	btfss	___wmul@multiplier,0
  4097     0BA5  2BAC               	goto	l220
  4098     0BA6  0872               	movf	___wmul@multiplicand,w
  4099     0BA7  07F4               	addwf	___wmul@product,f
  4100     0BA8  1803               	skipnc
  4101     0BA9  0AF5               	incf	___wmul@product+1,f
  4102     0BAA  0873               	movf	___wmul@multiplicand+1,w
  4103     0BAB  07F5               	addwf	___wmul@product+1,f
  4104     0BAC                     l220:
  4105     0BAC  3001               	movlw	1
  4106     0BAD                     u3345:
  4107     0BAD  1003               	clrc
  4108     0BAE  0DF2               	rlf	___wmul@multiplicand,f
  4109     0BAF  0DF3               	rlf	___wmul@multiplicand+1,f
  4110     0BB0  3EFF               	addlw	-1
  4111     0BB1  1D03               	skipz
  4112     0BB2  2BAD               	goto	u3345
  4113     0BB3  3001               	movlw	1
  4114     0BB4                     u3355:
  4115     0BB4  1003               	clrc
  4116     0BB5  0CF1               	rrf	___wmul@multiplier+1,f
  4117     0BB6  0CF0               	rrf	___wmul@multiplier,f
  4118     0BB7  3EFF               	addlw	-1
  4119     0BB8  1D03               	skipz
  4120     0BB9  2BB4               	goto	u3355
  4121     0BBA  0870               	movf	___wmul@multiplier,w
  4122     0BBB  0471               	iorwf	___wmul@multiplier+1,w
  4123     0BBC  1D03               	btfss	3,2
  4124     0BBD  2BA4               	goto	l2068
  4125     0BBE  0875               	movf	___wmul@product+1,w
  4126     0BBF  00F1               	movwf	?___wmul+1
  4127     0BC0  0874               	movf	___wmul@product,w
  4128     0BC1  00F0               	movwf	?___wmul
  4129     0BC2  0008               	return
  4130     0BC3                     __end_of___wmul:
  4131                           
  4132                           	psect	text19
  4133     0E0C                     __ptext19:	
  4134 ;; *************** function ___flge *****************
  4135 ;; Defined at:
  4136 ;;		line 4 in file "/Applications/microchip/xc8/v2.45/pic/sources/c99/common/flge.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  ff1             4    0[COMMON] unsigned int 
  4139 ;;  ff2             4    4[COMMON] unsigned int 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;		None               void
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 300/100
  4148 ;;		On exit  : 300/100
  4149 ;;		Unchanged: 300/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4151 ;;      Params:         8       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0
  4153 ;;      Temps:          4       0       0       0       0
  4154 ;;      Totals:        12       0       0       0       0
  4155 ;;Total ram usage:       12 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164     0E0C                     ___flge:	
  4165                           ;psect for function ___flge
  4166                           
  4167                           
  4168                           ;incstack = 0
  4169                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4170     0E0C  3000               	movlw	0
  4171     0E0D  0570               	andwf	___flge@ff1,w
  4172     0E0E  00F8               	movwf	??___flge
  4173     0E0F  3000               	movlw	0
  4174     0E10  0571               	andwf	___flge@ff1+1,w
  4175     0E11  00F9               	movwf	??___flge+1
  4176     0E12  3080               	movlw	128
  4177     0E13  0572               	andwf	___flge@ff1+2,w
  4178     0E14  00FA               	movwf	??___flge+2
  4179     0E15  307F               	movlw	127
  4180     0E16  0573               	andwf	___flge@ff1+3,w
  4181     0E17  00FB               	movwf	??___flge+3
  4182     0E18  087B               	movf	??___flge+3,w
  4183     0E19  047A               	iorwf	??___flge+2,w
  4184     0E1A  0479               	iorwf	??___flge+1,w
  4185     0E1B  0478               	iorwf	??___flge,w
  4186     0E1C  1D03               	skipz
  4187     0E1D  2E26               	goto	l398
  4188     0E1E  3000               	movlw	0
  4189     0E1F  00F3               	movwf	___flge@ff1+3
  4190     0E20  3000               	movlw	0
  4191     0E21  00F2               	movwf	___flge@ff1+2
  4192     0E22  3000               	movlw	0
  4193     0E23  00F1               	movwf	___flge@ff1+1
  4194     0E24  3000               	movlw	0
  4195     0E25  00F0               	movwf	___flge@ff1
  4196     0E26                     l398:
  4197     0E26  3000               	movlw	0
  4198     0E27  0574               	andwf	___flge@ff2,w
  4199     0E28  00F8               	movwf	??___flge
  4200     0E29  3000               	movlw	0
  4201     0E2A  0575               	andwf	___flge@ff2+1,w
  4202     0E2B  00F9               	movwf	??___flge+1
  4203     0E2C  3080               	movlw	128
  4204     0E2D  0576               	andwf	___flge@ff2+2,w
  4205     0E2E  00FA               	movwf	??___flge+2
  4206     0E2F  307F               	movlw	127
  4207     0E30  0577               	andwf	___flge@ff2+3,w
  4208     0E31  00FB               	movwf	??___flge+3
  4209     0E32  087B               	movf	??___flge+3,w
  4210     0E33  047A               	iorwf	??___flge+2,w
  4211     0E34  0479               	iorwf	??___flge+1,w
  4212     0E35  0478               	iorwf	??___flge,w
  4213     0E36  1D03               	skipz
  4214     0E37  2E40               	goto	l2086
  4215     0E38  3000               	movlw	0
  4216     0E39  00F7               	movwf	___flge@ff2+3
  4217     0E3A  3000               	movlw	0
  4218     0E3B  00F6               	movwf	___flge@ff2+2
  4219     0E3C  3000               	movlw	0
  4220     0E3D  00F5               	movwf	___flge@ff2+1
  4221     0E3E  3000               	movlw	0
  4222     0E3F  00F4               	movwf	___flge@ff2
  4223     0E40                     l2086:
  4224     0E40  1FF3               	btfss	___flge@ff1+3,7
  4225     0E41  2E66               	goto	l2090
  4226     0E42  3000               	movlw	0
  4227     0E43  00F8               	movwf	??___flge
  4228     0E44  3000               	movlw	0
  4229     0E45  00F9               	movwf	??___flge+1
  4230     0E46  3000               	movlw	0
  4231     0E47  00FA               	movwf	??___flge+2
  4232     0E48  3080               	movlw	128
  4233     0E49  00FB               	movwf	??___flge+3
  4234     0E4A  0870               	movf	___flge@ff1,w
  4235     0E4B  02F8               	subwf	??___flge,f
  4236     0E4C  0871               	movf	___flge@ff1+1,w
  4237     0E4D  1C03               	skipc
  4238     0E4E  0F71               	incfsz	___flge@ff1+1,w
  4239     0E4F  2E51               	goto	u3401
  4240     0E50  2E52               	goto	u3402
  4241     0E51                     u3401:
  4242     0E51  02F9               	subwf	??___flge+1,f
  4243     0E52                     u3402:
  4244     0E52  0872               	movf	___flge@ff1+2,w
  4245     0E53  1C03               	skipc
  4246     0E54  0F72               	incfsz	___flge@ff1+2,w
  4247     0E55  2E57               	goto	u3403
  4248     0E56  2E58               	goto	u3404
  4249     0E57                     u3403:
  4250     0E57  02FA               	subwf	??___flge+2,f
  4251     0E58                     u3404:
  4252     0E58  0873               	movf	___flge@ff1+3,w
  4253     0E59  1C03               	skipc
  4254     0E5A  0F73               	incfsz	___flge@ff1+3,w
  4255     0E5B  2E5D               	goto	u3405
  4256     0E5C  2E5E               	goto	u3406
  4257     0E5D                     u3405:
  4258     0E5D  02FB               	subwf	??___flge+3,f
  4259     0E5E                     u3406:
  4260     0E5E  087B               	movf	??___flge+3,w
  4261     0E5F  00F3               	movwf	___flge@ff1+3
  4262     0E60  087A               	movf	??___flge+2,w
  4263     0E61  00F2               	movwf	___flge@ff1+2
  4264     0E62  0879               	movf	??___flge+1,w
  4265     0E63  00F1               	movwf	___flge@ff1+1
  4266     0E64  0878               	movf	??___flge,w
  4267     0E65  00F0               	movwf	___flge@ff1
  4268     0E66                     l2090:
  4269     0E66  1FF7               	btfss	___flge@ff2+3,7
  4270     0E67  2E8C               	goto	l401
  4271     0E68  3000               	movlw	0
  4272     0E69  00F8               	movwf	??___flge
  4273     0E6A  3000               	movlw	0
  4274     0E6B  00F9               	movwf	??___flge+1
  4275     0E6C  3000               	movlw	0
  4276     0E6D  00FA               	movwf	??___flge+2
  4277     0E6E  3080               	movlw	128
  4278     0E6F  00FB               	movwf	??___flge+3
  4279     0E70  0874               	movf	___flge@ff2,w
  4280     0E71  02F8               	subwf	??___flge,f
  4281     0E72  0875               	movf	___flge@ff2+1,w
  4282     0E73  1C03               	skipc
  4283     0E74  0F75               	incfsz	___flge@ff2+1,w
  4284     0E75  2E77               	goto	u3421
  4285     0E76  2E78               	goto	u3422
  4286     0E77                     u3421:
  4287     0E77  02F9               	subwf	??___flge+1,f
  4288     0E78                     u3422:
  4289     0E78  0876               	movf	___flge@ff2+2,w
  4290     0E79  1C03               	skipc
  4291     0E7A  0F76               	incfsz	___flge@ff2+2,w
  4292     0E7B  2E7D               	goto	u3423
  4293     0E7C  2E7E               	goto	u3424
  4294     0E7D                     u3423:
  4295     0E7D  02FA               	subwf	??___flge+2,f
  4296     0E7E                     u3424:
  4297     0E7E  0877               	movf	___flge@ff2+3,w
  4298     0E7F  1C03               	skipc
  4299     0E80  0F77               	incfsz	___flge@ff2+3,w
  4300     0E81  2E83               	goto	u3425
  4301     0E82  2E84               	goto	u3426
  4302     0E83                     u3425:
  4303     0E83  02FB               	subwf	??___flge+3,f
  4304     0E84                     u3426:
  4305     0E84  087B               	movf	??___flge+3,w
  4306     0E85  00F7               	movwf	___flge@ff2+3
  4307     0E86  087A               	movf	??___flge+2,w
  4308     0E87  00F6               	movwf	___flge@ff2+2
  4309     0E88  0879               	movf	??___flge+1,w
  4310     0E89  00F5               	movwf	___flge@ff2+1
  4311     0E8A  0878               	movf	??___flge,w
  4312     0E8B  00F4               	movwf	___flge@ff2
  4313     0E8C                     l401:
  4314     0E8C  3080               	movlw	128
  4315     0E8D  06F3               	xorwf	___flge@ff1+3,f
  4316     0E8E  3080               	movlw	128
  4317     0E8F  06F7               	xorwf	___flge@ff2+3,f
  4318     0E90  0877               	movf	___flge@ff2+3,w
  4319     0E91  0273               	subwf	___flge@ff1+3,w
  4320     0E92  1D03               	skipz
  4321     0E93  0008               	return
  4322     0E94  0876               	movf	___flge@ff2+2,w
  4323     0E95  0272               	subwf	___flge@ff1+2,w
  4324     0E96  1D03               	skipz
  4325     0E97  0008               	return
  4326     0E98  0875               	movf	___flge@ff2+1,w
  4327     0E99  0271               	subwf	___flge@ff1+1,w
  4328     0E9A  1D03               	skipz
  4329     0E9B  0008               	return
  4330     0E9C  0874               	movf	___flge@ff2,w
  4331     0E9D  0270               	subwf	___flge@ff1,w
  4332     0E9E  0008               	return
  4333     0E9F                     __end_of___flge:
  4334                           
  4335                           	psect	text20
  4336     0C2D                     __ptext20:	
  4337 ;; *************** function _Lcd_WriteString *****************
  4338 ;; Defined at:
  4339 ;;		line 102 in file "../../pic16flcd.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  config          1    wreg     PTR struct .
  4342 ;;		 -> main@lcd(8), 
  4343 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4344 ;;		 -> main@rpm(10), STR_2(6), STR_1(19), 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  config          1   13[COMMON] PTR struct .
  4347 ;;		 -> main@lcd(8), 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 300/0
  4354 ;;		On exit  : 300/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       2       0       0       0
  4358 ;;      Locals:         1       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0
  4360 ;;      Totals:         1       2       0       0       0
  4361 ;;Total ram usage:        3 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 3
  4364 ;; This function calls:
  4365 ;;		_Lcd_WriteChar
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371     0C2D                     _Lcd_WriteString:	
  4372                           ;psect for function _Lcd_WriteString
  4373                           
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4377                           ;Lcd_WriteString@config stored from wreg
  4378     0C2D  00FD               	movwf	Lcd_WriteString@config
  4379     0C2E                     l1962:	
  4380                           ;../../pic16flcd.c: 103:     while(*str != '\0') {
  4381                           
  4382                           
  4383                           ;../../pic16flcd.c: 103:     while(*str != '\0') {
  4384     0C2E  0821               	movf	Lcd_WriteString@str+1,w
  4385     0C2F  00FF               	movwf	127
  4386     0C30  0820               	movf	Lcd_WriteString@str,w
  4387     0C31  0084               	movwf	4
  4388     0C32  120A  158A  2000  120A  158A  	fcall	stringtab
  4389     0C37  3A00               	xorlw	0
  4390     0C38  1903               	btfsc	3,2
  4391     0C39  0008               	return
  4392                           
  4393                           ;../../pic16flcd.c: 104:         Lcd_WriteChar(config, (unsigned char)(*str));
  4394     0C3A  0821               	movf	Lcd_WriteString@str+1,w
  4395     0C3B  00FF               	movwf	127
  4396     0C3C  0820               	movf	Lcd_WriteString@str,w
  4397     0C3D  0084               	movwf	4
  4398     0C3E  120A  158A  2000  120A  158A  	fcall	stringtab
  4399     0C43  00F9               	movwf	Lcd_WriteChar@data
  4400     0C44  087D               	movf	Lcd_WriteString@config,w
  4401     0C45  120A  118A  2252  120A  158A  	fcall	_Lcd_WriteChar
  4402                           
  4403                           ;../../pic16flcd.c: 105:         str++;
  4404     0C4A  3001               	movlw	1
  4405     0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  4406     0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  4407     0C4D  07A0               	addwf	Lcd_WriteString@str,f
  4408     0C4E  1803               	skipnc
  4409     0C4F  0AA1               	incf	Lcd_WriteString@str+1,f
  4410     0C50  3000               	movlw	0
  4411     0C51  07A1               	addwf	Lcd_WriteString@str+1,f
  4412     0C52  2C2E               	goto	l1962
  4413     0C53                     __end_of_Lcd_WriteString:
  4414                           
  4415                           	psect	text21
  4416     0252                     __ptext21:	
  4417 ;; *************** function _Lcd_WriteChar *****************
  4418 ;; Defined at:
  4419 ;;		line 77 in file "../../pic16flcd.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  config          1    wreg     PTR struct .
  4422 ;;		 -> main@lcd(8), 
  4423 ;;  data            1    9[COMMON] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  config          1   12[COMMON] PTR struct .
  4426 ;;		 -> main@lcd(8), 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 300/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         1       0       0       0       0
  4437 ;;      Locals:         1       0       0       0       0
  4438 ;;      Temps:          2       0       0       0       0
  4439 ;;      Totals:         4       0       0       0       0
  4440 ;;Total ram usage:        4 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 2
  4443 ;; This function calls:
  4444 ;;		_PulseEnable
  4445 ;;		_SetBit
  4446 ;; This function is called by:
  4447 ;;		_Lcd_WriteString
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451     0252                     _Lcd_WriteChar:	
  4452                           ;psect for function _Lcd_WriteChar
  4453                           
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4457                           ;Lcd_WriteChar@config stored from wreg
  4458     0252  00FC               	movwf	Lcd_WriteChar@config
  4459                           
  4460                           ;../../pic16flcd.c: 79:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
  4461     0253  087C               	movf	Lcd_WriteChar@config,w
  4462     0254  0084               	movwf	4
  4463     0255  1383               	bcf	3,7	;select IRP bank0
  4464     0256  0800               	movf	0,w
  4465     0257  00F0               	movwf	SetBit@port
  4466     0258  0A84               	incf	4,f
  4467     0259  0800               	movf	0,w
  4468     025A  0384               	decf	4,f
  4469     025B  00F1               	movwf	SetBit@port+1
  4470     025C  087C               	movf	Lcd_WriteChar@config,w
  4471     025D  3E04               	addlw	4
  4472     025E  0084               	movwf	4
  4473     025F  0800               	movf	0,w
  4474     0260  00F2               	movwf	SetBit@pin
  4475     0261  0879               	movf	Lcd_WriteChar@data,w
  4476     0262  00FB               	movwf	??_Lcd_WriteChar+1
  4477     0263  3004               	movlw	4
  4478     0264                     u2255:
  4479     0264  1003               	clrc
  4480     0265  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4481     0266  3EFF               	addlw	-1
  4482     0267  1D03               	skipz
  4483     0268  2A64               	goto	u2255
  4484     0269  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4485     026A  2A6D               	goto	u2260
  4486     026B  3001               	movlw	1
  4487     026C  2A6E               	goto	u2270
  4488     026D                     u2260:
  4489     026D  3000               	movlw	0
  4490     026E                     u2270:
  4491     026E  00F3               	movwf	SetBit@value
  4492     026F  120A  118A  2003  120A  118A  	fcall	_SetBit
  4493                           
  4494                           ;../../pic16flcd.c: 80:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
  4495     0274  087C               	movf	Lcd_WriteChar@config,w
  4496     0275  0084               	movwf	4
  4497     0276  1383               	bcf	3,7	;select IRP bank0
  4498     0277  0800               	movf	0,w
  4499     0278  00F0               	movwf	SetBit@port
  4500     0279  0A84               	incf	4,f
  4501     027A  0800               	movf	0,w
  4502     027B  0384               	decf	4,f
  4503     027C  00F1               	movwf	SetBit@port+1
  4504     027D  087C               	movf	Lcd_WriteChar@config,w
  4505     027E  3E05               	addlw	5
  4506     027F  0084               	movwf	4
  4507     0280  0800               	movf	0,w
  4508     0281  00F2               	movwf	SetBit@pin
  4509     0282  0879               	movf	Lcd_WriteChar@data,w
  4510     0283  00FB               	movwf	??_Lcd_WriteChar+1
  4511     0284  3005               	movlw	5
  4512     0285                     u2285:
  4513     0285  1003               	clrc
  4514     0286  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4515     0287  3EFF               	addlw	-1
  4516     0288  1D03               	skipz
  4517     0289  2A85               	goto	u2285
  4518     028A  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4519     028B  2A8E               	goto	u2290
  4520     028C  3001               	movlw	1
  4521     028D  2A8F               	goto	u2300
  4522     028E                     u2290:
  4523     028E  3000               	movlw	0
  4524     028F                     u2300:
  4525     028F  00F3               	movwf	SetBit@value
  4526     0290  120A  118A  2003  120A  118A  	fcall	_SetBit
  4527                           
  4528                           ;../../pic16flcd.c: 81:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
  4529     0295  087C               	movf	Lcd_WriteChar@config,w
  4530     0296  0084               	movwf	4
  4531     0297  1383               	bcf	3,7	;select IRP bank0
  4532     0298  0800               	movf	0,w
  4533     0299  00F0               	movwf	SetBit@port
  4534     029A  0A84               	incf	4,f
  4535     029B  0800               	movf	0,w
  4536     029C  0384               	decf	4,f
  4537     029D  00F1               	movwf	SetBit@port+1
  4538     029E  087C               	movf	Lcd_WriteChar@config,w
  4539     029F  3E06               	addlw	6
  4540     02A0  0084               	movwf	4
  4541     02A1  0800               	movf	0,w
  4542     02A2  00F2               	movwf	SetBit@pin
  4543     02A3  0879               	movf	Lcd_WriteChar@data,w
  4544     02A4  00FB               	movwf	??_Lcd_WriteChar+1
  4545     02A5  3006               	movlw	6
  4546     02A6                     u2315:
  4547     02A6  1003               	clrc
  4548     02A7  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4549     02A8  3EFF               	addlw	-1
  4550     02A9  1D03               	skipz
  4551     02AA  2AA6               	goto	u2315
  4552     02AB  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4553     02AC  2AAF               	goto	u2320
  4554     02AD  3001               	movlw	1
  4555     02AE  2AB0               	goto	u2330
  4556     02AF                     u2320:
  4557     02AF  3000               	movlw	0
  4558     02B0                     u2330:
  4559     02B0  00F3               	movwf	SetBit@value
  4560     02B1  120A  118A  2003  120A  118A  	fcall	_SetBit
  4561                           
  4562                           ;../../pic16flcd.c: 82:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
  4563     02B6  087C               	movf	Lcd_WriteChar@config,w
  4564     02B7  0084               	movwf	4
  4565     02B8  1383               	bcf	3,7	;select IRP bank0
  4566     02B9  0800               	movf	0,w
  4567     02BA  00F0               	movwf	SetBit@port
  4568     02BB  0A84               	incf	4,f
  4569     02BC  0800               	movf	0,w
  4570     02BD  0384               	decf	4,f
  4571     02BE  00F1               	movwf	SetBit@port+1
  4572     02BF  087C               	movf	Lcd_WriteChar@config,w
  4573     02C0  3E07               	addlw	7
  4574     02C1  0084               	movwf	4
  4575     02C2  0800               	movf	0,w
  4576     02C3  00F2               	movwf	SetBit@pin
  4577     02C4  0879               	movf	Lcd_WriteChar@data,w
  4578     02C5  00FB               	movwf	??_Lcd_WriteChar+1
  4579     02C6  3007               	movlw	7
  4580     02C7                     u2345:
  4581     02C7  1003               	clrc
  4582     02C8  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4583     02C9  3EFF               	addlw	-1
  4584     02CA  1D03               	skipz
  4585     02CB  2AC7               	goto	u2345
  4586     02CC  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4587     02CD  2AD0               	goto	u2350
  4588     02CE  3001               	movlw	1
  4589     02CF  2AD1               	goto	u2360
  4590     02D0                     u2350:
  4591     02D0  3000               	movlw	0
  4592     02D1                     u2360:
  4593     02D1  00F3               	movwf	SetBit@value
  4594     02D2  120A  118A  2003  120A  118A  	fcall	_SetBit
  4595                           
  4596                           ;../../pic16flcd.c: 84:     SetBit(config->port, config->rs_pin, 1);
  4597     02D7  087C               	movf	Lcd_WriteChar@config,w
  4598     02D8  0084               	movwf	4
  4599     02D9  1383               	bcf	3,7	;select IRP bank0
  4600     02DA  0800               	movf	0,w
  4601     02DB  00F0               	movwf	SetBit@port
  4602     02DC  0A84               	incf	4,f
  4603     02DD  0800               	movf	0,w
  4604     02DE  0384               	decf	4,f
  4605     02DF  00F1               	movwf	SetBit@port+1
  4606     02E0  087C               	movf	Lcd_WriteChar@config,w
  4607     02E1  3E02               	addlw	2
  4608     02E2  0084               	movwf	4
  4609     02E3  0800               	movf	0,w
  4610     02E4  00F2               	movwf	SetBit@pin
  4611     02E5  01F3               	clrf	SetBit@value
  4612     02E6  0AF3               	incf	SetBit@value,f
  4613     02E7  120A  118A  2003  120A  118A  	fcall	_SetBit
  4614                           
  4615                           ;../../pic16flcd.c: 85:     PulseEnable(config);
  4616     02EC  087C               	movf	Lcd_WriteChar@config,w
  4617     02ED  120A  158A  2453  120A  118A  	fcall	_PulseEnable
  4618                           
  4619                           ;../../pic16flcd.c: 88:     SetBit(config->port, config->d4_pin, data & 0x01);
  4620     02F2  087C               	movf	Lcd_WriteChar@config,w
  4621     02F3  0084               	movwf	4
  4622     02F4  1383               	bcf	3,7	;select IRP bank0
  4623     02F5  0800               	movf	0,w
  4624     02F6  00F0               	movwf	SetBit@port
  4625     02F7  0A84               	incf	4,f
  4626     02F8  0800               	movf	0,w
  4627     02F9  0384               	decf	4,f
  4628     02FA  00F1               	movwf	SetBit@port+1
  4629     02FB  087C               	movf	Lcd_WriteChar@config,w
  4630     02FC  3E04               	addlw	4
  4631     02FD  0084               	movwf	4
  4632     02FE  0800               	movf	0,w
  4633     02FF  00F2               	movwf	SetBit@pin
  4634     0300  1C79               	btfss	Lcd_WriteChar@data,0
  4635     0301  2B04               	goto	u2370
  4636     0302  3001               	movlw	1
  4637     0303  2B05               	goto	u2380
  4638     0304                     u2370:
  4639     0304  3000               	movlw	0
  4640     0305                     u2380:
  4641     0305  00F3               	movwf	SetBit@value
  4642     0306  120A  118A  2003  120A  118A  	fcall	_SetBit
  4643                           
  4644                           ;../../pic16flcd.c: 89:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
  4645     030B  087C               	movf	Lcd_WriteChar@config,w
  4646     030C  0084               	movwf	4
  4647     030D  1383               	bcf	3,7	;select IRP bank0
  4648     030E  0800               	movf	0,w
  4649     030F  00F0               	movwf	SetBit@port
  4650     0310  0A84               	incf	4,f
  4651     0311  0800               	movf	0,w
  4652     0312  0384               	decf	4,f
  4653     0313  00F1               	movwf	SetBit@port+1
  4654     0314  087C               	movf	Lcd_WriteChar@config,w
  4655     0315  3E05               	addlw	5
  4656     0316  0084               	movwf	4
  4657     0317  0800               	movf	0,w
  4658     0318  00F2               	movwf	SetBit@pin
  4659     0319  0879               	movf	Lcd_WriteChar@data,w
  4660     031A  00FB               	movwf	??_Lcd_WriteChar+1
  4661     031B  3001               	movlw	1
  4662     031C                     u2395:
  4663     031C  1003               	clrc
  4664     031D  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4665     031E  3EFF               	addlw	-1
  4666     031F  1D03               	skipz
  4667     0320  2B1C               	goto	u2395
  4668     0321  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4669     0322  2B25               	goto	u2400
  4670     0323  3001               	movlw	1
  4671     0324  2B26               	goto	u2410
  4672     0325                     u2400:
  4673     0325  3000               	movlw	0
  4674     0326                     u2410:
  4675     0326  00F3               	movwf	SetBit@value
  4676     0327  120A  118A  2003  120A  118A  	fcall	_SetBit
  4677                           
  4678                           ;../../pic16flcd.c: 90:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
  4679     032C  087C               	movf	Lcd_WriteChar@config,w
  4680     032D  0084               	movwf	4
  4681     032E  1383               	bcf	3,7	;select IRP bank0
  4682     032F  0800               	movf	0,w
  4683     0330  00F0               	movwf	SetBit@port
  4684     0331  0A84               	incf	4,f
  4685     0332  0800               	movf	0,w
  4686     0333  0384               	decf	4,f
  4687     0334  00F1               	movwf	SetBit@port+1
  4688     0335  087C               	movf	Lcd_WriteChar@config,w
  4689     0336  3E06               	addlw	6
  4690     0337  0084               	movwf	4
  4691     0338  0800               	movf	0,w
  4692     0339  00F2               	movwf	SetBit@pin
  4693     033A  0879               	movf	Lcd_WriteChar@data,w
  4694     033B  00FB               	movwf	??_Lcd_WriteChar+1
  4695     033C  3002               	movlw	2
  4696     033D                     u2425:
  4697     033D  1003               	clrc
  4698     033E  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4699     033F  3EFF               	addlw	-1
  4700     0340  1D03               	skipz
  4701     0341  2B3D               	goto	u2425
  4702     0342  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4703     0343  2B46               	goto	u2430
  4704     0344  3001               	movlw	1
  4705     0345  2B47               	goto	u2440
  4706     0346                     u2430:
  4707     0346  3000               	movlw	0
  4708     0347                     u2440:
  4709     0347  00F3               	movwf	SetBit@value
  4710     0348  120A  118A  2003  120A  118A  	fcall	_SetBit
  4711                           
  4712                           ;../../pic16flcd.c: 91:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
  4713     034D  087C               	movf	Lcd_WriteChar@config,w
  4714     034E  0084               	movwf	4
  4715     034F  1383               	bcf	3,7	;select IRP bank0
  4716     0350  0800               	movf	0,w
  4717     0351  00F0               	movwf	SetBit@port
  4718     0352  0A84               	incf	4,f
  4719     0353  0800               	movf	0,w
  4720     0354  0384               	decf	4,f
  4721     0355  00F1               	movwf	SetBit@port+1
  4722     0356  087C               	movf	Lcd_WriteChar@config,w
  4723     0357  3E07               	addlw	7
  4724     0358  0084               	movwf	4
  4725     0359  0800               	movf	0,w
  4726     035A  00F2               	movwf	SetBit@pin
  4727     035B  0879               	movf	Lcd_WriteChar@data,w
  4728     035C  00FB               	movwf	??_Lcd_WriteChar+1
  4729     035D  3003               	movlw	3
  4730     035E                     u2455:
  4731     035E  1003               	clrc
  4732     035F  0CFB               	rrf	??_Lcd_WriteChar+1,f
  4733     0360  3EFF               	addlw	-1
  4734     0361  1D03               	skipz
  4735     0362  2B5E               	goto	u2455
  4736     0363  1C7B               	btfss	??_Lcd_WriteChar+1,0
  4737     0364  2B67               	goto	u2460
  4738     0365  3001               	movlw	1
  4739     0366  2B68               	goto	u2470
  4740     0367                     u2460:
  4741     0367  3000               	movlw	0
  4742     0368                     u2470:
  4743     0368  00F3               	movwf	SetBit@value
  4744     0369  120A  118A  2003  120A  118A  	fcall	_SetBit
  4745                           
  4746                           ;../../pic16flcd.c: 93:     PulseEnable(config);
  4747     036E  087C               	movf	Lcd_WriteChar@config,w
  4748     036F  120A  158A  2453   	fcall	_PulseEnable
  4749     0372  0008               	return
  4750     0373                     __end_of_Lcd_WriteChar:
  4751                           
  4752                           	psect	text22
  4753     0BC3                     __ptext22:	
  4754 ;; *************** function _Lcd_SetCursor *****************
  4755 ;; Defined at:
  4756 ;;		line 148 in file "../../pic16flcd.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  config          1    wreg     PTR struct .
  4759 ;;		 -> main@lcd(8), 
  4760 ;;  row             1    0[BANK0 ] unsigned char 
  4761 ;;  column          1    1[BANK0 ] unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  config          1    5[BANK0 ] PTR struct .
  4764 ;;		 -> main@lcd(8), 
  4765 ;;  address         1    4[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 300/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4775 ;;      Params:         0       2       0       0       0
  4776 ;;      Locals:         0       2       0       0       0
  4777 ;;      Temps:          0       2       0       0       0
  4778 ;;      Totals:         0       6       0       0       0
  4779 ;;Total ram usage:        6 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 3
  4782 ;; This function calls:
  4783 ;;		_Lcd_Command
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789     0BC3                     _Lcd_SetCursor:	
  4790                           ;psect for function _Lcd_SetCursor
  4791                           
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4795                           ;Lcd_SetCursor@config stored from wreg
  4796     0BC3  00A5               	movwf	Lcd_SetCursor@config
  4797                           
  4798                           ;../../pic16flcd.c: 149:     unsigned char address;;../../pic16flcd.c: 152:     switch(r
      +                          ow) {
  4799     0BC4  2BCA               	goto	l1992
  4800     0BC5                     l1986:
  4801                           
  4802                           ;../../pic16flcd.c: 154:             address = 0x80;
  4803     0BC5  3080               	movlw	128
  4804     0BC6  2BC8               	goto	L4
  4805     0BC7                     l1988:	
  4806                           ;../../pic16flcd.c: 155:             break;
  4807                           
  4808                           
  4809                           ;../../pic16flcd.c: 157:             address = 0xC0;
  4810     0BC7  30C0               	movlw	192
  4811     0BC8                     L4:
  4812     0BC8  00A4               	movwf	Lcd_SetCursor@address
  4813                           
  4814                           ;../../pic16flcd.c: 158:             break;
  4815     0BC9  2BDA               	goto	l1994
  4816     0BCA                     l1992:
  4817     0BCA  0820               	movf	Lcd_SetCursor@row,w
  4818     0BCB  00A2               	movwf	??_Lcd_SetCursor
  4819     0BCC  01A3               	clrf	??_Lcd_SetCursor+1
  4820                           
  4821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4822                           ; Switch size 1, requested type "simple"
  4823                           ; Number of cases is 1, Range of values is 0 to 0
  4824                           ; switch strategies available:
  4825                           ; Name         Instructions Cycles
  4826                           ; simple_byte            4     3 (average)
  4827                           ; direct_byte           11     8 (fixed)
  4828                           ; jumptable            260     6 (fixed)
  4829                           ;	Chosen strategy is simple_byte
  4830     0BCD  0823               	movf	??_Lcd_SetCursor+1,w
  4831     0BCE  3A00               	xorlw	0	; case 0
  4832     0BCF  1903               	skipnz
  4833     0BD0  2BD2               	goto	l2192
  4834     0BD1  2BC5               	goto	l1986
  4835     0BD2                     l2192:
  4836                           
  4837                           ; Switch size 1, requested type "simple"
  4838                           ; Number of cases is 2, Range of values is 1 to 2
  4839                           ; switch strategies available:
  4840                           ; Name         Instructions Cycles
  4841                           ; simple_byte            7     4 (average)
  4842                           ; direct_byte           17    11 (fixed)
  4843                           ; jumptable            263     9 (fixed)
  4844                           ;	Chosen strategy is simple_byte
  4845     0BD2  0822               	movf	??_Lcd_SetCursor,w
  4846     0BD3  3A01               	xorlw	1	; case 1
  4847     0BD4  1903               	skipnz
  4848     0BD5  2BC5               	goto	l1986
  4849     0BD6  3A03               	xorlw	3	; case 2
  4850     0BD7  1903               	skipnz
  4851     0BD8  2BC7               	goto	l1988
  4852     0BD9  2BC5               	goto	l1986
  4853     0BDA                     l1994:
  4854                           
  4855                           ;../../pic16flcd.c: 164:     address += (column - 1);
  4856     0BDA  0821               	movf	Lcd_SetCursor@column,w
  4857     0BDB  3EFF               	addlw	255
  4858     0BDC  00A2               	movwf	??_Lcd_SetCursor
  4859     0BDD  0822               	movf	??_Lcd_SetCursor,w
  4860     0BDE  07A4               	addwf	Lcd_SetCursor@address,f
  4861                           
  4862                           ;../../pic16flcd.c: 167:     Lcd_Command(config, address);
  4863     0BDF  0824               	movf	Lcd_SetCursor@address,w
  4864     0BE0  00F9               	movwf	Lcd_Command@cmd
  4865     0BE1  0825               	movf	Lcd_SetCursor@config,w
  4866     0BE2  120A  118A  2132   	fcall	_Lcd_Command
  4867     0BE5  0008               	return
  4868     0BE6                     __end_of_Lcd_SetCursor:
  4869                           
  4870                           	psect	text23
  4871     0DA1                     __ptext23:	
  4872 ;; *************** function _Lcd_Init *****************
  4873 ;; Defined at:
  4874 ;;		line 110 in file "../../pic16flcd.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  config          1    wreg     PTR struct .
  4877 ;;		 -> main@lcd(8), 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  config          1    4[BANK0 ] PTR struct .
  4880 ;;		 -> main@lcd(8), 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : B00/100
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4890 ;;      Params:         0       0       0       0       0
  4891 ;;      Locals:         0       1       0       0       0
  4892 ;;      Temps:          0       2       0       0       0
  4893 ;;      Totals:         0       3       0       0       0
  4894 ;;Total ram usage:        3 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 4
  4897 ;; This function calls:
  4898 ;;		_Lcd_Clear
  4899 ;;		_Lcd_Command
  4900 ;; This function is called by:
  4901 ;;		_main
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905     0DA1                     _Lcd_Init:	
  4906                           ;psect for function _Lcd_Init
  4907                           
  4908                           
  4909                           ;incstack = 0
  4910                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4911                           ;Lcd_Init@config stored from wreg
  4912     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4913     0DA2  00A4               	movwf	Lcd_Init@config
  4914                           
  4915                           ;../../pic16flcd.c: 116:     _delay((unsigned long)((15)*(4000000/4000.0)));
  4916     0DA3  3014               	movlw	20
  4917     0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4918     0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  4919     0DA6  00A3               	movwf	??_Lcd_Init+1
  4920     0DA7  3079               	movlw	121
  4921     0DA8  00A2               	movwf	??_Lcd_Init
  4922     0DA9                     u3487:
  4923     0DA9  0BA2               	decfsz	??_Lcd_Init,f
  4924     0DAA  2DA9               	goto	u3487
  4925     0DAB  0BA3               	decfsz	??_Lcd_Init+1,f
  4926     0DAC  2DA9               	goto	u3487
  4927                           
  4928                           ;../../pic16flcd.c: 117:     Lcd_Command(config, 0x03);
  4929     0DAD  3003               	movlw	3
  4930     0DAE  00F9               	movwf	Lcd_Command@cmd
  4931     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4932     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4933     0DB1  0824               	movf	Lcd_Init@config,w
  4934     0DB2  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  4935                           
  4936                           ;../../pic16flcd.c: 118:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4937     0DB7  3007               	movlw	7
  4938     0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  4939     0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  4940     0DBA  00A3               	movwf	??_Lcd_Init+1
  4941     0DBB  307C               	movlw	124
  4942     0DBC  00A2               	movwf	??_Lcd_Init
  4943     0DBD                     u3497:
  4944     0DBD  0BA2               	decfsz	??_Lcd_Init,f
  4945     0DBE  2DBD               	goto	u3497
  4946     0DBF  0BA3               	decfsz	??_Lcd_Init+1,f
  4947     0DC0  2DBD               	goto	u3497
  4948     0DC1  0000               	nop
  4949                           
  4950                           ;../../pic16flcd.c: 119:     Lcd_Command(config, 0x03);
  4951     0DC2  3003               	movlw	3
  4952     0DC3  00F9               	movwf	Lcd_Command@cmd
  4953     0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4954     0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4955     0DC6  0824               	movf	Lcd_Init@config,w
  4956     0DC7  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  4957                           
  4958                           ;../../pic16flcd.c: 120:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  4959     0DCC  3020               	movlw	32
  4960     0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  4961     0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  4962     0DCF  00A2               	movwf	??_Lcd_Init
  4963     0DD0                     u3507:
  4964     0DD0  0BA2               	decfsz	??_Lcd_Init,f
  4965     0DD1  2DD0               	goto	u3507
  4966     0DD2  0000               	nop
  4967                           
  4968                           ;../../pic16flcd.c: 121:     Lcd_Command(config, 0x03);
  4969     0DD3  3003               	movlw	3
  4970     0DD4  00F9               	movwf	Lcd_Command@cmd
  4971     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  4972     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  4973     0DD7  0824               	movf	Lcd_Init@config,w
  4974     0DD8  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  4975                           
  4976                           ;../../pic16flcd.c: 122:     Lcd_Command(config, 0x02);
  4977     0DDD  3002               	movlw	2
  4978     0DDE  00F9               	movwf	Lcd_Command@cmd
  4979     0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  4980     0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  4981     0DE1  0824               	movf	Lcd_Init@config,w
  4982     0DE2  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  4983                           
  4984                           ;../../pic16flcd.c: 124:     Lcd_Command(config, 0x28);
  4985     0DE7  3028               	movlw	40
  4986     0DE8  00F9               	movwf	Lcd_Command@cmd
  4987     0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  4988     0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  4989     0DEB  0824               	movf	Lcd_Init@config,w
  4990     0DEC  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  4991                           
  4992                           ;../../pic16flcd.c: 125:     Lcd_Command(config, 0x0C);
  4993     0DF1  300C               	movlw	12
  4994     0DF2  00F9               	movwf	Lcd_Command@cmd
  4995     0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  4996     0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  4997     0DF5  0824               	movf	Lcd_Init@config,w
  4998     0DF6  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  4999                           
  5000                           ;../../pic16flcd.c: 126:     Lcd_Command(config, 0x06);
  5001     0DFB  3006               	movlw	6
  5002     0DFC  00F9               	movwf	Lcd_Command@cmd
  5003     0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  5004     0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  5005     0DFF  0824               	movf	Lcd_Init@config,w
  5006     0E00  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  5007                           
  5008                           ;../../pic16flcd.c: 127:     Lcd_Clear(config);
  5009     0E05  1283               	bcf	3,5	;RP0=0, select bank0
  5010     0E06  1303               	bcf	3,6	;RP1=0, select bank0
  5011     0E07  0824               	movf	Lcd_Init@config,w
  5012     0E08  120A  158A  2358   	fcall	_Lcd_Clear
  5013     0E0B  0008               	return
  5014     0E0C                     __end_of_Lcd_Init:
  5015                           
  5016                           	psect	text24
  5017     0B58                     __ptext24:	
  5018 ;; *************** function _Lcd_Clear *****************
  5019 ;; Defined at:
  5020 ;;		line 135 in file "../../pic16flcd.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  config          1    wreg     PTR struct .
  5023 ;;		 -> main@lcd(8), 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  config          1   13[COMMON] PTR struct .
  5026 ;;		 -> main@lcd(8), 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/100
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5036 ;;      Params:         0       0       0       0       0
  5037 ;;      Locals:         1       0       0       0       0
  5038 ;;      Temps:          0       2       0       0       0
  5039 ;;      Totals:         1       2       0       0       0
  5040 ;;Total ram usage:        3 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 3
  5043 ;; This function calls:
  5044 ;;		_Lcd_Command
  5045 ;; This function is called by:
  5046 ;;		_Lcd_Init
  5047 ;;		_main
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051     0B58                     _Lcd_Clear:	
  5052                           ;psect for function _Lcd_Clear
  5053                           
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5057                           ;Lcd_Clear@config stored from wreg
  5058     0B58  00FD               	movwf	Lcd_Clear@config
  5059                           
  5060                           ;../../pic16flcd.c: 136:     Lcd_Command(config, 0x01);
  5061     0B59  01F9               	clrf	Lcd_Command@cmd
  5062     0B5A  0AF9               	incf	Lcd_Command@cmd,f
  5063     0B5B  087D               	movf	Lcd_Clear@config,w
  5064     0B5C  120A  118A  2132  120A  158A  	fcall	_Lcd_Command
  5065                           
  5066                           ;../../pic16flcd.c: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5067     0B61  3003               	movlw	3
  5068     0B62  1283               	bcf	3,5	;RP0=0, select bank0
  5069     0B63  1303               	bcf	3,6	;RP1=0, select bank0
  5070     0B64  00A1               	movwf	??_Lcd_Clear+1
  5071     0B65  3097               	movlw	151
  5072     0B66  00A0               	movwf	??_Lcd_Clear
  5073     0B67                     u3517:
  5074     0B67  0BA0               	decfsz	??_Lcd_Clear,f
  5075     0B68  2B67               	goto	u3517
  5076     0B69  0BA1               	decfsz	??_Lcd_Clear+1,f
  5077     0B6A  2B67               	goto	u3517
  5078     0B6B  0008               	return
  5079     0B6C                     __end_of_Lcd_Clear:
  5080                           
  5081                           	psect	text25
  5082     0132                     __ptext25:	
  5083 ;; *************** function _Lcd_Command *****************
  5084 ;; Defined at:
  5085 ;;		line 51 in file "../../pic16flcd.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  config          1    wreg     PTR struct .
  5088 ;;		 -> main@lcd(8), 
  5089 ;;  cmd             1    9[COMMON] unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  config          1   12[COMMON] PTR struct .
  5092 ;;		 -> main@lcd(8), 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5102 ;;      Params:         1       0       0       0       0
  5103 ;;      Locals:         1       0       0       0       0
  5104 ;;      Temps:          2       0       0       0       0
  5105 ;;      Totals:         4       0       0       0       0
  5106 ;;Total ram usage:        4 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 2
  5109 ;; This function calls:
  5110 ;;		_PulseEnable
  5111 ;;		_SetBit
  5112 ;; This function is called by:
  5113 ;;		_Lcd_Init
  5114 ;;		_Lcd_Clear
  5115 ;;		_Lcd_SetCursor
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119     0132                     _Lcd_Command:	
  5120                           ;psect for function _Lcd_Command
  5121                           
  5122                           
  5123                           ;incstack = 0
  5124                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5125                           ;Lcd_Command@config stored from wreg
  5126     0132  00FC               	movwf	Lcd_Command@config
  5127                           
  5128                           ;../../pic16flcd.c: 53:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  5129     0133  087C               	movf	Lcd_Command@config,w
  5130     0134  0084               	movwf	4
  5131     0135  1383               	bcf	3,7	;select IRP bank0
  5132     0136  0800               	movf	0,w
  5133     0137  00F0               	movwf	SetBit@port
  5134     0138  0A84               	incf	4,f
  5135     0139  0800               	movf	0,w
  5136     013A  0384               	decf	4,f
  5137     013B  00F1               	movwf	SetBit@port+1
  5138     013C  087C               	movf	Lcd_Command@config,w
  5139     013D  3E04               	addlw	4
  5140     013E  0084               	movwf	4
  5141     013F  0800               	movf	0,w
  5142     0140  00F2               	movwf	SetBit@pin
  5143     0141  0879               	movf	Lcd_Command@cmd,w
  5144     0142  00FB               	movwf	??_Lcd_Command+1
  5145     0143  3004               	movlw	4
  5146     0144                     u1945:
  5147     0144  1003               	clrc
  5148     0145  0CFB               	rrf	??_Lcd_Command+1,f
  5149     0146  3EFF               	addlw	-1
  5150     0147  1D03               	skipz
  5151     0148  2944               	goto	u1945
  5152     0149  1C7B               	btfss	??_Lcd_Command+1,0
  5153     014A  294D               	goto	u1950
  5154     014B  3001               	movlw	1
  5155     014C  294E               	goto	u1960
  5156     014D                     u1950:
  5157     014D  3000               	movlw	0
  5158     014E                     u1960:
  5159     014E  00F3               	movwf	SetBit@value
  5160     014F  120A  118A  2003  120A  118A  	fcall	_SetBit
  5161                           
  5162                           ;../../pic16flcd.c: 54:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  5163     0154  087C               	movf	Lcd_Command@config,w
  5164     0155  0084               	movwf	4
  5165     0156  1383               	bcf	3,7	;select IRP bank0
  5166     0157  0800               	movf	0,w
  5167     0158  00F0               	movwf	SetBit@port
  5168     0159  0A84               	incf	4,f
  5169     015A  0800               	movf	0,w
  5170     015B  0384               	decf	4,f
  5171     015C  00F1               	movwf	SetBit@port+1
  5172     015D  087C               	movf	Lcd_Command@config,w
  5173     015E  3E05               	addlw	5
  5174     015F  0084               	movwf	4
  5175     0160  0800               	movf	0,w
  5176     0161  00F2               	movwf	SetBit@pin
  5177     0162  0879               	movf	Lcd_Command@cmd,w
  5178     0163  00FB               	movwf	??_Lcd_Command+1
  5179     0164  3005               	movlw	5
  5180     0165                     u1975:
  5181     0165  1003               	clrc
  5182     0166  0CFB               	rrf	??_Lcd_Command+1,f
  5183     0167  3EFF               	addlw	-1
  5184     0168  1D03               	skipz
  5185     0169  2965               	goto	u1975
  5186     016A  1C7B               	btfss	??_Lcd_Command+1,0
  5187     016B  296E               	goto	u1980
  5188     016C  3001               	movlw	1
  5189     016D  296F               	goto	u1990
  5190     016E                     u1980:
  5191     016E  3000               	movlw	0
  5192     016F                     u1990:
  5193     016F  00F3               	movwf	SetBit@value
  5194     0170  120A  118A  2003  120A  118A  	fcall	_SetBit
  5195                           
  5196                           ;../../pic16flcd.c: 55:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  5197     0175  087C               	movf	Lcd_Command@config,w
  5198     0176  0084               	movwf	4
  5199     0177  1383               	bcf	3,7	;select IRP bank0
  5200     0178  0800               	movf	0,w
  5201     0179  00F0               	movwf	SetBit@port
  5202     017A  0A84               	incf	4,f
  5203     017B  0800               	movf	0,w
  5204     017C  0384               	decf	4,f
  5205     017D  00F1               	movwf	SetBit@port+1
  5206     017E  087C               	movf	Lcd_Command@config,w
  5207     017F  3E06               	addlw	6
  5208     0180  0084               	movwf	4
  5209     0181  0800               	movf	0,w
  5210     0182  00F2               	movwf	SetBit@pin
  5211     0183  0879               	movf	Lcd_Command@cmd,w
  5212     0184  00FB               	movwf	??_Lcd_Command+1
  5213     0185  3006               	movlw	6
  5214     0186                     u2005:
  5215     0186  1003               	clrc
  5216     0187  0CFB               	rrf	??_Lcd_Command+1,f
  5217     0188  3EFF               	addlw	-1
  5218     0189  1D03               	skipz
  5219     018A  2986               	goto	u2005
  5220     018B  1C7B               	btfss	??_Lcd_Command+1,0
  5221     018C  298F               	goto	u2010
  5222     018D  3001               	movlw	1
  5223     018E  2990               	goto	u2020
  5224     018F                     u2010:
  5225     018F  3000               	movlw	0
  5226     0190                     u2020:
  5227     0190  00F3               	movwf	SetBit@value
  5228     0191  120A  118A  2003  120A  118A  	fcall	_SetBit
  5229                           
  5230                           ;../../pic16flcd.c: 56:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  5231     0196  087C               	movf	Lcd_Command@config,w
  5232     0197  0084               	movwf	4
  5233     0198  1383               	bcf	3,7	;select IRP bank0
  5234     0199  0800               	movf	0,w
  5235     019A  00F0               	movwf	SetBit@port
  5236     019B  0A84               	incf	4,f
  5237     019C  0800               	movf	0,w
  5238     019D  0384               	decf	4,f
  5239     019E  00F1               	movwf	SetBit@port+1
  5240     019F  087C               	movf	Lcd_Command@config,w
  5241     01A0  3E07               	addlw	7
  5242     01A1  0084               	movwf	4
  5243     01A2  0800               	movf	0,w
  5244     01A3  00F2               	movwf	SetBit@pin
  5245     01A4  0879               	movf	Lcd_Command@cmd,w
  5246     01A5  00FB               	movwf	??_Lcd_Command+1
  5247     01A6  3007               	movlw	7
  5248     01A7                     u2035:
  5249     01A7  1003               	clrc
  5250     01A8  0CFB               	rrf	??_Lcd_Command+1,f
  5251     01A9  3EFF               	addlw	-1
  5252     01AA  1D03               	skipz
  5253     01AB  29A7               	goto	u2035
  5254     01AC  1C7B               	btfss	??_Lcd_Command+1,0
  5255     01AD  29B0               	goto	u2040
  5256     01AE  3001               	movlw	1
  5257     01AF  29B1               	goto	u2050
  5258     01B0                     u2040:
  5259     01B0  3000               	movlw	0
  5260     01B1                     u2050:
  5261     01B1  00F3               	movwf	SetBit@value
  5262     01B2  120A  118A  2003  120A  118A  	fcall	_SetBit
  5263                           
  5264                           ;../../pic16flcd.c: 58:     SetBit(config->port, config->rs_pin, 0);
  5265     01B7  087C               	movf	Lcd_Command@config,w
  5266     01B8  0084               	movwf	4
  5267     01B9  1383               	bcf	3,7	;select IRP bank0
  5268     01BA  0800               	movf	0,w
  5269     01BB  00F0               	movwf	SetBit@port
  5270     01BC  0A84               	incf	4,f
  5271     01BD  0800               	movf	0,w
  5272     01BE  0384               	decf	4,f
  5273     01BF  00F1               	movwf	SetBit@port+1
  5274     01C0  087C               	movf	Lcd_Command@config,w
  5275     01C1  3E02               	addlw	2
  5276     01C2  0084               	movwf	4
  5277     01C3  0800               	movf	0,w
  5278     01C4  00F2               	movwf	SetBit@pin
  5279     01C5  01F3               	clrf	SetBit@value
  5280     01C6  120A  118A  2003  120A  118A  	fcall	_SetBit
  5281                           
  5282                           ;../../pic16flcd.c: 59:     PulseEnable(config);
  5283     01CB  087C               	movf	Lcd_Command@config,w
  5284     01CC  120A  158A  2453  120A  118A  	fcall	_PulseEnable
  5285                           
  5286                           ;../../pic16flcd.c: 62:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  5287     01D1  087C               	movf	Lcd_Command@config,w
  5288     01D2  0084               	movwf	4
  5289     01D3  1383               	bcf	3,7	;select IRP bank0
  5290     01D4  0800               	movf	0,w
  5291     01D5  00F0               	movwf	SetBit@port
  5292     01D6  0A84               	incf	4,f
  5293     01D7  0800               	movf	0,w
  5294     01D8  0384               	decf	4,f
  5295     01D9  00F1               	movwf	SetBit@port+1
  5296     01DA  087C               	movf	Lcd_Command@config,w
  5297     01DB  3E04               	addlw	4
  5298     01DC  0084               	movwf	4
  5299     01DD  0800               	movf	0,w
  5300     01DE  00F2               	movwf	SetBit@pin
  5301     01DF  1C79               	btfss	Lcd_Command@cmd,0
  5302     01E0  29E3               	goto	u2060
  5303     01E1  3001               	movlw	1
  5304     01E2  29E4               	goto	u2070
  5305     01E3                     u2060:
  5306     01E3  3000               	movlw	0
  5307     01E4                     u2070:
  5308     01E4  00F3               	movwf	SetBit@value
  5309     01E5  120A  118A  2003  120A  118A  	fcall	_SetBit
  5310                           
  5311                           ;../../pic16flcd.c: 63:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  5312     01EA  087C               	movf	Lcd_Command@config,w
  5313     01EB  0084               	movwf	4
  5314     01EC  1383               	bcf	3,7	;select IRP bank0
  5315     01ED  0800               	movf	0,w
  5316     01EE  00F0               	movwf	SetBit@port
  5317     01EF  0A84               	incf	4,f
  5318     01F0  0800               	movf	0,w
  5319     01F1  0384               	decf	4,f
  5320     01F2  00F1               	movwf	SetBit@port+1
  5321     01F3  087C               	movf	Lcd_Command@config,w
  5322     01F4  3E05               	addlw	5
  5323     01F5  0084               	movwf	4
  5324     01F6  0800               	movf	0,w
  5325     01F7  00F2               	movwf	SetBit@pin
  5326     01F8  0879               	movf	Lcd_Command@cmd,w
  5327     01F9  00FB               	movwf	??_Lcd_Command+1
  5328     01FA  3001               	movlw	1
  5329     01FB                     u2085:
  5330     01FB  1003               	clrc
  5331     01FC  0CFB               	rrf	??_Lcd_Command+1,f
  5332     01FD  3EFF               	addlw	-1
  5333     01FE  1D03               	skipz
  5334     01FF  29FB               	goto	u2085
  5335     0200  1C7B               	btfss	??_Lcd_Command+1,0
  5336     0201  2A04               	goto	u2090
  5337     0202  3001               	movlw	1
  5338     0203  2A05               	goto	u2100
  5339     0204                     u2090:
  5340     0204  3000               	movlw	0
  5341     0205                     u2100:
  5342     0205  00F3               	movwf	SetBit@value
  5343     0206  120A  118A  2003  120A  118A  	fcall	_SetBit
  5344                           
  5345                           ;../../pic16flcd.c: 64:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  5346     020B  087C               	movf	Lcd_Command@config,w
  5347     020C  0084               	movwf	4
  5348     020D  1383               	bcf	3,7	;select IRP bank0
  5349     020E  0800               	movf	0,w
  5350     020F  00F0               	movwf	SetBit@port
  5351     0210  0A84               	incf	4,f
  5352     0211  0800               	movf	0,w
  5353     0212  0384               	decf	4,f
  5354     0213  00F1               	movwf	SetBit@port+1
  5355     0214  087C               	movf	Lcd_Command@config,w
  5356     0215  3E06               	addlw	6
  5357     0216  0084               	movwf	4
  5358     0217  0800               	movf	0,w
  5359     0218  00F2               	movwf	SetBit@pin
  5360     0219  0879               	movf	Lcd_Command@cmd,w
  5361     021A  00FB               	movwf	??_Lcd_Command+1
  5362     021B  3002               	movlw	2
  5363     021C                     u2115:
  5364     021C  1003               	clrc
  5365     021D  0CFB               	rrf	??_Lcd_Command+1,f
  5366     021E  3EFF               	addlw	-1
  5367     021F  1D03               	skipz
  5368     0220  2A1C               	goto	u2115
  5369     0221  1C7B               	btfss	??_Lcd_Command+1,0
  5370     0222  2A25               	goto	u2120
  5371     0223  3001               	movlw	1
  5372     0224  2A26               	goto	u2130
  5373     0225                     u2120:
  5374     0225  3000               	movlw	0
  5375     0226                     u2130:
  5376     0226  00F3               	movwf	SetBit@value
  5377     0227  120A  118A  2003  120A  118A  	fcall	_SetBit
  5378                           
  5379                           ;../../pic16flcd.c: 65:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  5380     022C  087C               	movf	Lcd_Command@config,w
  5381     022D  0084               	movwf	4
  5382     022E  1383               	bcf	3,7	;select IRP bank0
  5383     022F  0800               	movf	0,w
  5384     0230  00F0               	movwf	SetBit@port
  5385     0231  0A84               	incf	4,f
  5386     0232  0800               	movf	0,w
  5387     0233  0384               	decf	4,f
  5388     0234  00F1               	movwf	SetBit@port+1
  5389     0235  087C               	movf	Lcd_Command@config,w
  5390     0236  3E07               	addlw	7
  5391     0237  0084               	movwf	4
  5392     0238  0800               	movf	0,w
  5393     0239  00F2               	movwf	SetBit@pin
  5394     023A  0879               	movf	Lcd_Command@cmd,w
  5395     023B  00FB               	movwf	??_Lcd_Command+1
  5396     023C  3003               	movlw	3
  5397     023D                     u2145:
  5398     023D  1003               	clrc
  5399     023E  0CFB               	rrf	??_Lcd_Command+1,f
  5400     023F  3EFF               	addlw	-1
  5401     0240  1D03               	skipz
  5402     0241  2A3D               	goto	u2145
  5403     0242  1C7B               	btfss	??_Lcd_Command+1,0
  5404     0243  2A46               	goto	u2150
  5405     0244  3001               	movlw	1
  5406     0245  2A47               	goto	u2160
  5407     0246                     u2150:
  5408     0246  3000               	movlw	0
  5409     0247                     u2160:
  5410     0247  00F3               	movwf	SetBit@value
  5411     0248  120A  118A  2003  120A  118A  	fcall	_SetBit
  5412                           
  5413                           ;../../pic16flcd.c: 67:     PulseEnable(config);
  5414     024D  087C               	movf	Lcd_Command@config,w
  5415     024E  120A  158A  2453   	fcall	_PulseEnable
  5416     0251  0008               	return
  5417     0252                     __end_of_Lcd_Command:
  5418                           
  5419                           	psect	text26
  5420     0C53                     __ptext26:	
  5421 ;; *************** function _PulseEnable *****************
  5422 ;; Defined at:
  5423 ;;		line 37 in file "../../pic16flcd.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  config          1    wreg     PTR struct .
  5426 ;;		 -> main@lcd(8), 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  config          1    8[COMMON] PTR struct .
  5429 ;;		 -> main@lcd(8), 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5439 ;;      Params:         0       0       0       0       0
  5440 ;;      Locals:         1       0       0       0       0
  5441 ;;      Temps:          2       0       0       0       0
  5442 ;;      Totals:         3       0       0       0       0
  5443 ;;Total ram usage:        3 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; Hardware stack levels required when called: 1
  5446 ;; This function calls:
  5447 ;;		_SetBit
  5448 ;; This function is called by:
  5449 ;;		_Lcd_Command
  5450 ;;		_Lcd_WriteChar
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454     0C53                     _PulseEnable:	
  5455                           ;psect for function _PulseEnable
  5456                           
  5457                           
  5458                           ;incstack = 0
  5459                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5460                           ;PulseEnable@config stored from wreg
  5461     0C53  00F8               	movwf	PulseEnable@config
  5462                           
  5463                           ;../../pic16flcd.c: 38:     SetBit(config->port, config->en_pin, 1);
  5464     0C54  0878               	movf	PulseEnable@config,w
  5465     0C55  0084               	movwf	4
  5466     0C56  1383               	bcf	3,7	;select IRP bank0
  5467     0C57  0800               	movf	0,w
  5468     0C58  00F0               	movwf	SetBit@port
  5469     0C59  0A84               	incf	4,f
  5470     0C5A  0800               	movf	0,w
  5471     0C5B  0384               	decf	4,f
  5472     0C5C  00F1               	movwf	SetBit@port+1
  5473     0C5D  0878               	movf	PulseEnable@config,w
  5474     0C5E  3E03               	addlw	3
  5475     0C5F  0084               	movwf	4
  5476     0C60  0800               	movf	0,w
  5477     0C61  00F2               	movwf	SetBit@pin
  5478     0C62  01F3               	clrf	SetBit@value
  5479     0C63  0AF3               	incf	SetBit@value,f
  5480     0C64  120A  118A  2003  120A  158A  	fcall	_SetBit
  5481                           
  5482                           ;../../pic16flcd.c: 39:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5483     0C69  3003               	movlw	3
  5484     0C6A  00F7               	movwf	??_PulseEnable+1
  5485     0C6B  3097               	movlw	151
  5486     0C6C  00F6               	movwf	??_PulseEnable
  5487     0C6D                     u3527:
  5488     0C6D  0BF6               	decfsz	??_PulseEnable,f
  5489     0C6E  2C6D               	goto	u3527
  5490     0C6F  0BF7               	decfsz	??_PulseEnable+1,f
  5491     0C70  2C6D               	goto	u3527
  5492     0C71  2C72               	nop2
  5493                           
  5494                           ;../../pic16flcd.c: 40:     SetBit(config->port, config->en_pin, 0);
  5495     0C72  0878               	movf	PulseEnable@config,w
  5496     0C73  0084               	movwf	4
  5497     0C74  1383               	bcf	3,7	;select IRP bank0
  5498     0C75  0800               	movf	0,w
  5499     0C76  00F0               	movwf	SetBit@port
  5500     0C77  0A84               	incf	4,f
  5501     0C78  0800               	movf	0,w
  5502     0C79  0384               	decf	4,f
  5503     0C7A  00F1               	movwf	SetBit@port+1
  5504     0C7B  0878               	movf	PulseEnable@config,w
  5505     0C7C  3E03               	addlw	3
  5506     0C7D  0084               	movwf	4
  5507     0C7E  0800               	movf	0,w
  5508     0C7F  00F2               	movwf	SetBit@pin
  5509     0C80  01F3               	clrf	SetBit@value
  5510     0C81  120A  118A  2003   	fcall	_SetBit
  5511     0C84  0008               	return
  5512     0C85                     __end_of_PulseEnable:
  5513                           
  5514                           	psect	text27
  5515     0003                     __ptext27:	
  5516 ;; *************** function _SetBit *****************
  5517 ;; Defined at:
  5518 ;;		line 23 in file "../../pic16flcd.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  5521 ;;		 -> PORTD(1), 
  5522 ;;  pin             1    2[COMMON] unsigned char 
  5523 ;;  value           1    3[COMMON] _Bool 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 800/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5535 ;;      Params:         4       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0
  5537 ;;      Temps:          2       0       0       0       0
  5538 ;;      Totals:         6       0       0       0       0
  5539 ;;Total ram usage:        6 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_PulseEnable
  5545 ;;		_Lcd_Command
  5546 ;;		_Lcd_WriteChar
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550     0003                     _SetBit:	
  5551                           ;psect for function _SetBit
  5552                           
  5553                           
  5554                           ;../../pic16flcd.c: 24:     if (value) {
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  5558     0003  0873               	movf	SetBit@value,w
  5559     0004  1903               	btfsc	3,2
  5560     0005  2819               	goto	l1474
  5561                           
  5562                           ;../../pic16flcd.c: 25:         *port |= (1 << pin);
  5563     0006  3001               	movlw	1
  5564     0007  00F4               	movwf	??_SetBit
  5565     0008  0A72               	incf	SetBit@pin,w
  5566     0009  280C               	goto	u1754
  5567     000A                     u1755:
  5568     000A  1003               	clrc
  5569     000B  0DF4               	rlf	??_SetBit,f
  5570     000C                     u1754:
  5571     000C  3EFF               	addlw	-1
  5572     000D  1D03               	skipz
  5573     000E  280A               	goto	u1755
  5574     000F  0874               	movf	??_SetBit,w
  5575     0010  00F5               	movwf	??_SetBit+1
  5576     0011  0870               	movf	SetBit@port,w
  5577     0012  0084               	movwf	4
  5578     0013  1783               	bsf	3,7
  5579     0014  1C71               	btfss	SetBit@port+1,0
  5580     0015  1383               	bcf	3,7
  5581     0016  0875               	movf	??_SetBit+1,w
  5582     0017  0480               	iorwf	0,f
  5583                           
  5584                           ;../../pic16flcd.c: 26:     } else {
  5585     0018  0008               	return
  5586     0019                     l1474:
  5587                           
  5588                           ;../../pic16flcd.c: 27:         *port &= ~(1 << pin);
  5589     0019  3001               	movlw	1
  5590     001A  00F4               	movwf	??_SetBit
  5591     001B  0A72               	incf	SetBit@pin,w
  5592     001C  281F               	goto	u1764
  5593     001D                     u1765:
  5594     001D  1003               	clrc
  5595     001E  0DF4               	rlf	??_SetBit,f
  5596     001F                     u1764:
  5597     001F  3EFF               	addlw	-1
  5598     0020  1D03               	skipz
  5599     0021  281D               	goto	u1765
  5600     0022  0874               	movf	??_SetBit,w
  5601     0023  3AFF               	xorlw	255
  5602     0024  00F5               	movwf	??_SetBit+1
  5603     0025  0870               	movf	SetBit@port,w
  5604     0026  0084               	movwf	4
  5605     0027  1783               	bsf	3,7
  5606     0028  1C71               	btfss	SetBit@port+1,0
  5607     0029  1383               	bcf	3,7
  5608     002A  0875               	movf	??_SetBit+1,w
  5609     002B  0580               	andwf	0,f
  5610     002C  0008               	return
  5611     002D                     __end_of_SetBit:
  5612     007E                     btemp	set	126	;btemp
  5613     007E                     wtemp0	set	126
  5614                           
  5615                           	psect	config
  5616                           
  5617                           ;Config register CONFIG1 @ 0x2007
  5618                           ;	Oscillator Selection bits
  5619                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5620                           ;	Watchdog Timer Enable bit
  5621                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5622                           ;	Power-up Timer Enable bit
  5623                           ;	PWRTE = OFF, PWRT disabled
  5624                           ;	RE3/MCLR pin function select bit
  5625                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5626                           ;	Code Protection bit
  5627                           ;	CP = OFF, Program memory code protection is disabled
  5628                           ;	Data Code Protection bit
  5629                           ;	CPD = OFF, Data memory code protection is disabled
  5630                           ;	Brown Out Reset Selection bits
  5631                           ;	BOREN = ON, BOR enabled
  5632                           ;	Internal External Switchover bit
  5633                           ;	IESO = 0x1, unprogrammed default
  5634                           ;	Fail-Safe Clock Monitor Enabled bit
  5635                           ;	FCMEN = 0x1, unprogrammed default
  5636                           ;	Low Voltage Programming Enable bit
  5637                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5638                           ;	In-Circuit Debugger Mode bit
  5639                           ;	DEBUG = 0x1, unprogrammed default
  5640     2007                     	org	8199
  5641     2007  2FF4               	dw	12276

Data Sizes:
    Strings     28
    Constant    0
    Data        8
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      71
    BANK1            80     26      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    F1787$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(2) Largest target is 19
		 -> main@rpm(BANK1[10]), STR_1(CODE[19]), STR_2(CODE[6]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK1[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    S22$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    S791$buffer	PTR unsigned char  size(1) Largest target is 0

    S791$source	PTR const unsigned char  size(1) Largest target is 0

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@rpm(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_WriteString
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _vfpfcnvrt->_fputc
    _readTemperature->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_readTemperature
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _readTemperature->___flmul
    ___flmul->___fldiv
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   65035
                                             62 BANK0      4     4      0
                                              0 BANK1     26    26      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
                             ___flge
                             ___wmul
                        _countPulses
                            _initADC
                            _initPWM
                            _initRPM
                    _readTemperature
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    16      3    2652
                                              9 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     2      2    2344
                                             12 COMMON     2     0      2
                                              7 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12    10      2    2037
                                              8 COMMON     4     2      2
                                              0 BANK0      7     7      0
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                     10     6      4    4287
                                             52 BANK0     10     6      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2418
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initRPM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _countPulses                                          6     4      2      93
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     1      2   10871
                                             13 COMMON     1     1      0
                                              0 BANK0      2     0      2
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10477
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11900
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22803
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11341
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11253
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteString
     _Lcd_WriteChar
       _PulseEnable
       _SetBit
   ___flge
   ___wmul
   _countPulses
   _initADC
   _initPWM
   _initRPM
   _readTemperature
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _readADC
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      42       7       82.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     42      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan  3 13:05:45 2024

           ___fldiv@aexp 0039             ___fldiv@bexp 0038                        pc 0002  
           ___fldiv@sign 0031           Lcd_Init@config 0024                       fsr 0004  
    ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076                      l106 0C25  
                    l114 0B27                      l220 0BAC                      l401 0E8C  
                    l601 0504                      l636 0BF8                      l629 07D6  
                    l661 0EBC                      l398 0E26                      l577 03B9  
                    l674 0F10                      l675 0F1A                      l667 0EFA  
                    l599 04F8                      _PR2 0092                      fsr0 0004  
       ?_Lcd_WriteString 0020                      indf 0000             ___flmul@aexp 0048  
           ___flmul@bexp 004D      __end_of_Lcd_Command 0252             ___flmul@sign 0047  
           ___flmul@temp 0052             ___flmul@prod 004E                     l2040 0C28  
                   l1500 0CE3                     l2038 0C12                     l2134 0107  
                   l2118 008D                     l1504 0CEE                     l2090 0E66  
                   l1522 0CA7                     l2138 0120                     l2068 0BA4  
                   l1700 0452                     l1516 0C8B                     l1540 0D25  
                   l2086 0E40                     l1702 040F                     l1550 0BF0  
                   l1518 0C99                     l1526 0CB2                     l2190 0FDC  
                   l2192 0BD2                     l1720 047A                     l1704 0457  
                   l1640 0395                     l1536 0CFD                     l1474 0019  
                   l1730 0493                     l1634 038A                     l1740 04C5  
                   l1492 0CBF                     l1572 0F80                     l1726 0491  
                   l1718 045D                     l1654 03AE                     l1638 038D  
                   l1806 055C                     l1494 0CCD                     l1582 0FB1  
                   l1574 0F82                     l1590 0FCE                     l1744 04DE  
                   l1920 0EDF                     l1592 0FE1                     l1674 03E4  
                   l1658 03B1                     l1930 0EFF                     l1914 0ECB  
                   l1586 0FC9                     l1756 0500                     l1668 03D8  
                   l1860 0749                     l1780 052B                     l1908 0EB4  
                   l1596 0FE9                     l1694 0433                     l1870 0762  
                   l1942 0F37                     l1918 0ECD                     l1950 0B88  
                   l1880 0794                     l1776 0521                     l1928 0F0E  
                   l1952 0B9F                     l1962 0C2E                     l1890 07C3  
                   l1866 0760                     l1858 072C                     l1794 0544  
                   l1778 0523                     l1884 07AA                     l1796 0546  
                   l1798 054E                     l1992 0BCA                     l1994 0BDA  
                   l1986 0BC5                     l1988 0BC7                     STR_1 0810  
                   STR_2 0823                     STR_3 0829                     u2010 018F  
                   u2100 0205                     u2020 0190                     u2005 0186  
                   u2120 0225                     u2040 01B0                     u2130 0226  
                   u2050 01B1                     u2115 021C                     u2035 01A7  
                   u2060 01E3                     u2300 028F                     u3005 0718  
                   u2150 0246                     u2070 01E4                     u3015 0730  
                   u2160 0247                     u2400 0325                     u2320 02AF  
                   u2145 023D                     u3105 077F                     u2090 0204  
                   u2410 0326                     u2330 02B0                     u2315 02A6  
                   u3115 079D                     u3035 073B                     u2260 026D  
                   u2085 01FB                     u3125 07B5                     u2430 0346  
                   u2350 02D0                     u2270 026E                     u2255 0264  
                   u3215 0F07                     u2440 0347                     u2360 02D1  
                   u2425 033D                     u2345 02C7                     u3401 0E51  
                   u2185 0BF9                     u2370 0304                     u2290 028E  
                   u3402 0E52                     u3403 0E57                     u2460 0367  
                   u2380 0305                     u3404 0E58                     u2285 0285  
                   u3421 0E77                     u3405 0E5D                     u1805 0CCE  
                   u2470 0368                     u3422 0E78                     u3406 0E5E  
                   u2455 035E                     u3423 0E7D                     u2615 042C  
                   u3255 0F22                     u3175 0ED6                     u1815 0CDA  
                   u3424 0E7E                     u3440 0044                     u3425 0E83  
                   u3345 0BAD                     u2625 0441                     u1825 0CE4  
                   u1754 000C                     u3426 0E84                     u1755 000A  
                   u3507 0DD0                     u2395 031C                     u3355 0BB4  
                   u3195 0EF2                     u1764 001F                     u1765 001D  
                   u3517 0B67                     u1950 014D                     u3527 0C6D  
                   u2655 0461                     u1855 0C8E                     u1935 0D23  
                   u1960 014E                     u1945 0144                     u2745 04B0  
                   u2585 0418                     u2905 0600                     u1785 0CC2  
                   u2755 04CE                     u2675 046C                     u2595 0421  
                   u1875 0C9F                     u1980 016E                     u2765 04E9  
                   u1885 0CA8                     u3477 012B                     u1990 016F  
                   u1975 0165                     u3487 0DA9                     u2935 0655  
                   u3497 0DBD                     u2975 06E1                     _TMR0 0001  
     Lcd_WriteString@str 0020             ?_countPulses 0070                     _dbuf 00A0  
                   _main 002D                     _prec 0064                     btemp 007E  
                   start 0000          ___fldiv@new_exp 0032                    ?_main 0070  
        __end_of___fldiv 050A          __end_of___flmul 07E3                    _ANSEL 0188  
                  _T2CON 0012          __end_of___lwdiv 0CF3          __end_of___lwmod 0CB7  
           vfpfcnvrt@fmt 0078                    _PORTD 0008                    _TRISD 0088  
        __end_of_initADC 0B3B          __end_of_readADC 0B2F          __end_of_initRPM 0B24  
        __end_of_initPWM 0B47                    _flags 0066                    _fputc 0CF3  
             SetBit@port 0070                    _width 0062                    _putch 0B08  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0B85         __end_of_Lcd_Init 0E0C        PulseEnable@config 0078  
        __initialization 07E3             __end_of_main 0132              _Lcd_Command 0132  
                 ??_main 005E          _readTemperature 0D3D                   _ADCON0 001F  
                 _ADCON1 009F    __end_of_Lcd_SetCursor 0BE6                   ?_fputc 0070  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 ?_putch 0070                   _ANSELH 0189         __end_of___xxtofl 0F40  
                 _SetBit 0003     Lcd_SetCursor@address 0024             vfprintf@cfmt 0028  
                 ___flge 0E0C                   ___wmul 0BA2                ??___fldiv 0028  
              ??___flmul 0042                ??___lwdiv 0074                ??___lwmod 0074  
            SetBit@value 0073    __end_of_Lcd_WriteChar 0373                ??_initADC 0070  
              ??_readADC 0072                ??_initRPM 0070                ??_initPWM 0070  
                 fputc@c 0070                   putch@c 0070         __end_of_vfprintf 0BA2  
              ??_sprintf 002C               ___flge@ff1 0070               ___flge@ff2 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 07FC            ??_PulseEnable 0076        __end_of_Lcd_Clear 0B6C  
         __pcstackCOMMON 0070             __pidataBANK1 0B11            __end_of_fputc 0D3D  
          __end_of_putch 0B09  __end_of_readTemperature 0DA1           _OPTION_REGbits 0081  
              ?_Lcd_Init 0070                  ??_fputc 0073                  ??_putch 0070  
             __pbssBANK0 0062               __pbssBANK1 00A0        __end_of__Umul8_16 0C09  
                ?_SetBit 0070               __pmaintext 002D                  ?___flge 0070  
                ?___wmul 0070      __end_of_PulseEnable 0C85     countPulses@lastState 0074  
                _CCP1CON 0017                ?___xxtofl 0070               ??_Lcd_Init 0022  
  Lcd_WriteString@config 007D               __stringtab 0800   readTemperature@voltage 0058  
                ___fldiv 0373        Lcd_WriteChar@data 0079                  ___flmul 050A  
                ___lwdiv 0CB7                  ___lwmod 0C85                ?_vfprintf 007C  
       ?_readTemperature 0054             ?_Lcd_Command 0079                  __ptext1 0B6C  
                __ptext2 0B85                  __ptext3 0F40                  __ptext4 0CF3  
                __ptext5 0B08                  __ptext6 0C85                  __ptext7 0CB7  
                __ptext8 0D3D                  __ptext9 0B24                  _initADC 0B2F  
                _readADC 0B24                  _initRPM 0B19                  _initPWM 0B3B  
             ??___xxtofl 0074                  main@lcd 00D2                  _sprintf 0B6C  
                clrloop0 0B0A                  main@rpm 00C0     end_of_initialization 07FC  
                fputc@fp 0072         Lcd_SetCursor@row 0020              _PulseEnable 0C53  
      __end_of_vfpfcnvrt 1000         vfpfcnvrt@convarg 0021               ??_vfprintf 007E  
              _PORTBbits 0006            ___xxtofl@sign 0078                _TRISBbits 0086  
            ___fldiv@grs 0034              ___fldiv@rem 002D               main@fanRPM 00CC  
            ___flmul@grs 0049               main@pulses 00CA        ??_Lcd_WriteString 007D  
              _Lcd_Clear 0B58           __end_of_SetBit 002D           __end_of___flge 0E9F  
            vfpfcnvrt@ap 0079              vfpfcnvrt@cp 0025              vfpfcnvrt@fp 0020  
         __end_of___wmul 0BC3                SetBit@pin 0072      start_initialization 07E3  
          ??_countPulses 0072                 ??_SetBit 0074              vfprintf@fmt 007C  
             ?_Lcd_Clear 0070                 ??___flge 0078      Lcd_SetCursor@config 0025  
    Lcd_SetCursor@column 0021                 ??___wmul 0074               init_fetch0 0B47  
              __Umul8_16 0BE6              __pdataBANK1 00DA        Lcd_Command@config 007C  
              ___fldiv@a 0020                ___fldiv@b 0024                ___flmul@a 003E  
              ___flmul@b 003A      Lcd_WriteChar@config 007C                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00C0            _Lcd_SetCursor 0BC3  
       ___lwdiv@dividend 0072      __end_of_countPulses 0C2D                 ?___fldiv 0020  
               ?___flmul 003A               ?__Umul8_16 0070                 ?___lwdiv 0070  
               ?___lwmod 0070                __pstrings 0800                 ?_initADC 0070  
               ?_readADC 0070            _Lcd_WriteChar 0252                 ?_initRPM 0070  
               ?_initPWM 0070  readTemperature@adcValue 005C         ___lwdiv@quotient 0075  
         ?_Lcd_SetCursor 0020                 ?_sprintf 0029           ___wmul@product 0074  
              clear_ram0 0B09             ?_PulseEnable 0070              ??_Lcd_Clear 0020  
        Lcd_Clear@config 007D                main@F1787 00DA                _vfpfcnvrt 0F40  
             _ADCON0bits 001F              __stringbase 080F           ?_Lcd_WriteChar 0079  
      ___wmul@multiplier 0070                 _Lcd_Init 0DA1               vfpfcnvrt@c 0026  
        _Lcd_WriteString 0C2D              _countPulses 0C09    countPulses@pulseCount 0072  
countPulses@currentState 0075               vfprintf@ap 007D               vfprintf@fp 0027  
            ??__Umul8_16 0072               ?_vfpfcnvrt 0078       __end_of__stringtab 0810  
             sprintf@fmt 0029                 ___xxtofl 0E9F          ??_Lcd_SetCursor 0022  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0E9F  
               __ptext11 050A                 __ptext20 0C2D                 __ptext12 0BE6  
               __ptext21 0252                 __ptext13 0373                 __ptext22 0BC3  
               __ptext14 0B19                 __ptext23 0DA1                 __ptext15 0B3B  
               __ptext24 0B58                 __ptext16 0B2F                 __ptext25 0132  
               __ptext17 0C09                 __ptext26 0C53                 __ptext18 0BA2  
               __ptext27 0003                 __ptext19 0E0C                 _vfprintf 0B85  
        ??_Lcd_WriteChar 007A          main@temperature 00CE  __end_of_Lcd_WriteString 0C53  
             _INTCONbits 000B                 init_ram0 0B4B                sprintf@ap 002D  
       ___lwmod@dividend 0072        ??_readTemperature 007E                stringcode 080A  
            ??_vfpfcnvrt 007A            ??_Lcd_Command 007A           Lcd_Command@cmd 0079  
 __Umul8_16@multiplicand 0070                 sprintf@f 002F                 sprintf@s 002E  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 080A  
               stringtab 0800     __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
