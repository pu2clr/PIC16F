

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan  3 11:40:19 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291                           
   292                           	psect	idataBANK0
   293     043E                     __pidataBANK0:
   294                           
   295                           ;initializer for main@F1466
   296     043E  3407               	retlw	7
   297     043F  3400               	retlw	0
   298     0440  3401               	retlw	1
   299     0441  3402               	retlw	2
   300     0442  3404               	retlw	4
   301     0443  3405               	retlw	5
   302     0444  3406               	retlw	6
   303     0445  3407               	retlw	7
   304     0007                     _PORTC	set	7
   305     0087                     _TRISC	set	135
   306                           
   307                           	psect	strings
   308     0003                     __pstrings:
   309     0003                     stringtab:
   310     0003                     __stringtab:
   311     0003                     stringcode:	
   312                           ;	String table - string pointers are 1 byte each
   313                           
   314     0003                     stringdir:
   315     0003  3000               	movlw	high stringdir
   316     0004  008A               	movwf	10
   317     0005  0804               	movf	4,w
   318     0006  0A84               	incf	4,f
   319     0007  0782               	addwf	2,f
   320     0008                     __stringbase:
   321     0008  3400               	retlw	0
   322     0009                     __end_of__stringtab:
   323     0009                     STR_1:
   324     0009  3443               	retlw	67	;'C'
   325     000A  344F               	retlw	79	;'O'
   326     000B  344F               	retlw	79	;'O'
   327     000C  344C               	retlw	76	;'L'
   328     000D  3445               	retlw	69	;'E'
   329     000E  3452               	retlw	82	;'R'
   330     000F  3420               	retlw	32	;' '
   331     0010  3452               	retlw	82	;'R'
   332     0011  3450               	retlw	80	;'P'
   333     0012  344D               	retlw	77	;'M'
   334     0013  3420               	retlw	32	;' '
   335     0014  3443               	retlw	67	;'C'
   336     0015  346F               	retlw	111	;'o'
   337     0016  3475               	retlw	117	;'u'
   338     0017  346E               	retlw	110	;'n'
   339     0018  3474               	retlw	116	;'t'
   340     0019  3465               	retlw	101	;'e'
   341     001A  3472               	retlw	114	;'r'
   342     001B  3400               	retlw	0
   343                           
   344                           	psect	cinit
   345     07F0                     start_initialization:	
   346                           ; #config settings
   347                           
   348     07F0                     __initialization:
   349                           
   350                           ; Initialize objects allocated to BANK0
   351     07F0  1383               	bcf	3,7	;select IRP bank0
   352     07F1  303A               	movlw	low (__pdataBANK0+8)
   353     07F2  00FD               	movwf	btemp+-1
   354     07F3  3004               	movlw	high __pidataBANK0
   355     07F4  00FE               	movwf	btemp
   356     07F5  303E               	movlw	low __pidataBANK0
   357     07F6  00FF               	movwf	btemp+1
   358     07F7  3032               	movlw	low __pdataBANK0
   359     07F8  0084               	movwf	4
   360     07F9  120A  118A  244A   	fcall	init_ram0
   361     07FC                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364     07FC                     __end_of__initialization:
   365     07FC  0183               	clrf	3
   366     07FD  120A  118A  2D0C   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	dataBANK0
   369     0032                     __pdataBANK0:
   370     0032                     main@F1466:
   371     0032                     	ds	8
   372                           
   373                           	psect	inittext
   374     0446                     init_fetch0:	
   375                           ;	Called with low address in FSR and high address in W
   376                           
   377     0446  087E               	movf	126,w
   378     0447  008A               	movwf	10
   379     0448  087F               	movf	127,w
   380     0449  0082               	movwf	2
   381     044A                     init_ram0:	
   382                           ;Called with:
   383                           ;	high address of idata address in btemp 
   384                           ;	low address of idata address in btemp+1 
   385                           ;	low address of data in FSR
   386                           ;	high address + 1 of data in btemp-1
   387                           
   388     044A  2446  120A  118A   	fcall	init_fetch0
   389     044D  0080               	movwf	0
   390     044E  0A84               	incf	4,f
   391     044F  0804               	movf	4,w
   392     0450  067D               	xorwf	125,w
   393     0451  1903               	btfsc	3,2
   394     0452  3400               	retlw	0
   395     0453  0AFF               	incf	127,f
   396     0454  1903               	btfsc	3,2
   397     0455  0AFE               	incf	126,f
   398     0456  2C4A               	goto	init_ram0
   399                           
   400                           	psect	cstackCOMMON
   401     0070                     __pcstackCOMMON:
   402     0070                     ?_Lcd_Clear:
   403     0070                     ?_SetBit:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?_PulseEnable:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?_Lcd_Init:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     SetBit@port:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 2 bytes @ 0x0
   420     0070                     	ds	2
   421     0072                     SetBit@pin:
   422                           
   423                           ; 1 bytes @ 0x2
   424     0072                     	ds	1
   425     0073                     SetBit@value:
   426                           
   427                           ; 1 bytes @ 0x3
   428     0073                     	ds	1
   429     0074                     ??_SetBit:
   430                           
   431                           ; 1 bytes @ 0x4
   432     0074                     	ds	2
   433     0076                     ??_PulseEnable:
   434                           
   435                           ; 1 bytes @ 0x6
   436     0076                     	ds	2
   437     0078                     PulseEnable@config:
   438                           
   439                           ; 1 bytes @ 0x8
   440     0078                     	ds	1
   441     0079                     ?_Lcd_Command:
   442     0079                     ?_Lcd_WriteChar:	
   443                           ; 1 bytes @ 0x9
   444                           
   445     0079                     Lcd_Command@cmd:	
   446                           ; 1 bytes @ 0x9
   447                           
   448     0079                     Lcd_WriteChar@data:	
   449                           ; 1 bytes @ 0x9
   450                           
   451                           
   452                           ; 1 bytes @ 0x9
   453     0079                     	ds	1
   454     007A                     ??_Lcd_Command:
   455     007A                     ??_Lcd_WriteChar:	
   456                           ; 1 bytes @ 0xA
   457                           
   458                           
   459                           ; 1 bytes @ 0xA
   460     007A                     	ds	2
   461     007C                     Lcd_Command@config:
   462     007C                     Lcd_WriteChar@config:	
   463                           ; 1 bytes @ 0xC
   464                           
   465                           
   466                           ; 1 bytes @ 0xC
   467     007C                     	ds	1
   468     007D                     ?_Lcd_WriteString:
   469     007D                     Lcd_WriteString@str:	
   470                           ; 1 bytes @ 0xD
   471                           
   472     007D                     Lcd_Clear@config:	
   473                           ; 1 bytes @ 0xD
   474                           
   475                           
   476                           ; 1 bytes @ 0xD
   477     007D                     	ds	1
   478                           
   479                           	psect	cstackBANK0
   480     0020                     __pcstackBANK0:
   481     0020                     ??_Lcd_Clear:
   482     0020                     ??_Lcd_WriteString:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0020                     ?_Lcd_SetCursor:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0020                     Lcd_SetCursor@row:	
   489                           ; 1 bytes @ 0x0
   490                           
   491                           
   492                           ; 1 bytes @ 0x0
   493     0020                     	ds	1
   494     0021                     Lcd_WriteString@config:
   495     0021                     Lcd_SetCursor@column:	
   496                           ; 1 bytes @ 0x1
   497                           
   498                           
   499                           ; 1 bytes @ 0x1
   500     0021                     	ds	1
   501     0022                     ??_Lcd_Init:
   502     0022                     ??_Lcd_SetCursor:	
   503                           ; 1 bytes @ 0x2
   504                           
   505                           
   506                           ; 1 bytes @ 0x2
   507     0022                     	ds	2
   508     0024                     Lcd_Init@config:
   509     0024                     Lcd_SetCursor@config:	
   510                           ; 1 bytes @ 0x4
   511                           
   512                           
   513                           ; 1 bytes @ 0x4
   514     0024                     	ds	1
   515     0025                     Lcd_SetCursor@address:
   516                           
   517                           ; 1 bytes @ 0x5
   518     0025                     	ds	1
   519     0026                     ??_main:
   520                           
   521                           ; 1 bytes @ 0x6
   522     0026                     	ds	4
   523     002A                     main@lcd:
   524                           
   525                           ; 8 bytes @ 0xA
   526     002A                     	ds	8
   527                           
   528                           	psect	maintext
   529     050C                     __pmaintext:	
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 83 in file "newmain.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  lcd             8   10[BANK0 ] struct .
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : B00/0
   546 ;;		On exit  : 300/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         0       0       0       0       0
   550 ;;      Locals:         0       8       0       0       0
   551 ;;      Temps:          0       4       0       0       0
   552 ;;      Totals:         0      12       0       0       0
   553 ;;Total ram usage:       12 bytes
   554 ;; Hardware stack levels required when called: 5
   555 ;; This function calls:
   556 ;;		_Lcd_Clear
   557 ;;		_Lcd_Init
   558 ;;		_Lcd_SetCursor
   559 ;;		_Lcd_WriteString
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     050C                     _main:	
   566                           ;psect for function _main
   567                           
   568                           
   569                           ;newmain.c: 91: 
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   573     050C  302A               	movlw	main@lcd& (0+255)
   574     050D  0084               	movwf	4
   575     050E  3032               	movlw	low main@F1466
   576     050F  00A6               	movwf	??_main
   577     0510  0804               	movf	4,w
   578     0511  00A7               	movwf	??_main+1
   579     0512  3008               	movlw	8
   580     0513  00A8               	movwf	??_main+2
   581     0514                     u1020:
   582     0514  0826               	movf	??_main,w
   583     0515  0084               	movwf	4
   584     0516  1383               	bcf	3,7	;select IRP bank0
   585     0517  0800               	movf	0,w
   586     0518  00A9               	movwf	??_main+3
   587     0519  0AA6               	incf	??_main,f
   588     051A  0827               	movf	??_main+1,w
   589     051B  0084               	movwf	4
   590     051C  0829               	movf	??_main+3,w
   591     051D  0080               	movwf	0
   592     051E  0AA7               	incf	??_main+1,f
   593     051F  0BA8               	decfsz	??_main+2,f
   594     0520  2D14               	goto	u1020
   595     0521  1683               	bsf	3,5	;RP0=1, select bank1
   596     0522  0187               	clrf	7	;volatile
   597     0523  302A               	movlw	(low (main@lcd| 0))& (0+255)
   598     0524  120A  118A  2544  120A  118A  	fcall	_Lcd_Init
   599     0529  302A               	movlw	(low (main@lcd| 0))& (0+255)
   600     052A  120A  118A  2457  120A  118A  	fcall	_Lcd_Clear
   601     052F  1283               	bcf	3,5	;RP0=0, select bank0
   602     0530  1303               	bcf	3,6	;RP1=0, select bank0
   603     0531  01A0               	clrf	Lcd_SetCursor@row
   604     0532  0AA0               	incf	Lcd_SetCursor@row,f
   605     0533  01A1               	clrf	Lcd_SetCursor@column
   606     0534  0AA1               	incf	Lcd_SetCursor@column,f
   607     0535  302A               	movlw	(low (main@lcd| 0))& (0+255)
   608     0536  120A  118A  248D  120A  118A  	fcall	_Lcd_SetCursor
   609     053B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   610     053C  00FD               	movwf	Lcd_WriteString@str
   611     053D  302A               	movlw	(low (main@lcd| 0))& (0+255)
   612     053E  120A  118A  246B  120A  118A  	fcall	_Lcd_WriteString
   613     0543                     l125:
   614                           
   615                           ;newmain.c: 126:     }
   616     0543  2D43               	goto	l125
   617     0544                     __end_of_main:
   618                           
   619                           	psect	text1
   620     046B                     __ptext1:	
   621 ;; *************** function _Lcd_WriteString *****************
   622 ;; Defined at:
   623 ;;		line 102 in file "../../pic16flcd.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  config          1    wreg     PTR struct .
   626 ;;		 -> main@lcd(8), 
   627 ;;  str             1   13[COMMON] PTR unsigned char 
   628 ;;		 -> STR_1(19), 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  config          1    1[BANK0 ] PTR struct .
   631 ;;		 -> main@lcd(8), 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/100
   638 ;;		On exit  : 300/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         1       0       0       0       0
   642 ;;      Locals:         0       1       0       0       0
   643 ;;      Temps:          0       1       0       0       0
   644 ;;      Totals:         1       2       0       0       0
   645 ;;Total ram usage:        3 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 3
   648 ;; This function calls:
   649 ;;		_Lcd_WriteChar
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     046B                     _Lcd_WriteString:	
   656                           ;psect for function _Lcd_WriteString
   657                           
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   661                           ;Lcd_WriteString@config stored from wreg
   662     046B  1283               	bcf	3,5	;RP0=0, select bank0
   663     046C  1303               	bcf	3,6	;RP1=0, select bank0
   664     046D  00A1               	movwf	Lcd_WriteString@config
   665     046E                     l796:	
   666                           ;../../pic16flcd.c: 103:     while(*str != '\0') {
   667                           
   668                           
   669                           ;../../pic16flcd.c: 103:     while(*str != '\0') {
   670     046E  087D               	movf	Lcd_WriteString@str,w
   671     046F  0084               	movwf	4
   672     0470  120A  118A  2003  120A  118A  	fcall	stringdir
   673     0475  3A00               	xorlw	0
   674     0476  1903               	btfsc	3,2
   675     0477  0008               	return
   676                           
   677                           ;../../pic16flcd.c: 104:         Lcd_WriteChar(config, (unsigned char)(*str));
   678     0478  087D               	movf	Lcd_WriteString@str,w
   679     0479  0084               	movwf	4
   680     047A  120A  118A  2003  120A  118A  	fcall	stringdir
   681     047F  00F9               	movwf	Lcd_WriteChar@data
   682     0480  0821               	movf	Lcd_WriteString@config,w
   683     0481  120A  118A  26CF  120A  118A  	fcall	_Lcd_WriteChar
   684                           
   685                           ;../../pic16flcd.c: 105:         str++;
   686     0486  3001               	movlw	1
   687     0487  1283               	bcf	3,5	;RP0=0, select bank0
   688     0488  1303               	bcf	3,6	;RP1=0, select bank0
   689     0489  00A0               	movwf	??_Lcd_WriteString
   690     048A  0820               	movf	??_Lcd_WriteString,w
   691     048B  07FD               	addwf	Lcd_WriteString@str,f
   692     048C  2C6E               	goto	l796
   693     048D                     __end_of_Lcd_WriteString:
   694                           
   695                           	psect	text2
   696     06CF                     __ptext2:	
   697 ;; *************** function _Lcd_WriteChar *****************
   698 ;; Defined at:
   699 ;;		line 77 in file "../../pic16flcd.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  config          1    wreg     PTR struct .
   702 ;;		 -> main@lcd(8), 
   703 ;;  data            1    9[COMMON] unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  config          1   12[COMMON] PTR struct .
   706 ;;		 -> main@lcd(8), 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 300/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         1       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0
   718 ;;      Temps:          2       0       0       0       0
   719 ;;      Totals:         4       0       0       0       0
   720 ;;Total ram usage:        4 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 2
   723 ;; This function calls:
   724 ;;		_PulseEnable
   725 ;;		_SetBit
   726 ;; This function is called by:
   727 ;;		_Lcd_WriteString
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731     06CF                     _Lcd_WriteChar:	
   732                           ;psect for function _Lcd_WriteChar
   733                           
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   737                           ;Lcd_WriteChar@config stored from wreg
   738     06CF  00FC               	movwf	Lcd_WriteChar@config
   739                           
   740                           ;../../pic16flcd.c: 79:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
   741     06D0  087C               	movf	Lcd_WriteChar@config,w
   742     06D1  0084               	movwf	4
   743     06D2  1383               	bcf	3,7	;select IRP bank0
   744     06D3  0800               	movf	0,w
   745     06D4  00F0               	movwf	SetBit@port
   746     06D5  0A84               	incf	4,f
   747     06D6  0800               	movf	0,w
   748     06D7  0384               	decf	4,f
   749     06D8  00F1               	movwf	SetBit@port+1
   750     06D9  087C               	movf	Lcd_WriteChar@config,w
   751     06DA  3E04               	addlw	4
   752     06DB  0084               	movwf	4
   753     06DC  0800               	movf	0,w
   754     06DD  00F2               	movwf	SetBit@pin
   755     06DE  0879               	movf	Lcd_WriteChar@data,w
   756     06DF  00FB               	movwf	??_Lcd_WriteChar+1
   757     06E0  3004               	movlw	4
   758     06E1                     u785:
   759     06E1  1003               	clrc
   760     06E2  0CFB               	rrf	??_Lcd_WriteChar+1,f
   761     06E3  3EFF               	addlw	-1
   762     06E4  1D03               	skipz
   763     06E5  2EE1               	goto	u785
   764     06E6  1C7B               	btfss	??_Lcd_WriteChar+1,0
   765     06E7  2EEA               	goto	u790
   766     06E8  3001               	movlw	1
   767     06E9  2EEB               	goto	u800
   768     06EA                     u790:
   769     06EA  3000               	movlw	0
   770     06EB                     u800:
   771     06EB  00F3               	movwf	SetBit@value
   772     06EC  120A  118A  24B0  120A  118A  	fcall	_SetBit
   773                           
   774                           ;../../pic16flcd.c: 80:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
   775     06F1  087C               	movf	Lcd_WriteChar@config,w
   776     06F2  0084               	movwf	4
   777     06F3  1383               	bcf	3,7	;select IRP bank0
   778     06F4  0800               	movf	0,w
   779     06F5  00F0               	movwf	SetBit@port
   780     06F6  0A84               	incf	4,f
   781     06F7  0800               	movf	0,w
   782     06F8  0384               	decf	4,f
   783     06F9  00F1               	movwf	SetBit@port+1
   784     06FA  087C               	movf	Lcd_WriteChar@config,w
   785     06FB  3E05               	addlw	5
   786     06FC  0084               	movwf	4
   787     06FD  0800               	movf	0,w
   788     06FE  00F2               	movwf	SetBit@pin
   789     06FF  0879               	movf	Lcd_WriteChar@data,w
   790     0700  00FB               	movwf	??_Lcd_WriteChar+1
   791     0701  3005               	movlw	5
   792     0702                     u815:
   793     0702  1003               	clrc
   794     0703  0CFB               	rrf	??_Lcd_WriteChar+1,f
   795     0704  3EFF               	addlw	-1
   796     0705  1D03               	skipz
   797     0706  2F02               	goto	u815
   798     0707  1C7B               	btfss	??_Lcd_WriteChar+1,0
   799     0708  2F0B               	goto	u820
   800     0709  3001               	movlw	1
   801     070A  2F0C               	goto	u830
   802     070B                     u820:
   803     070B  3000               	movlw	0
   804     070C                     u830:
   805     070C  00F3               	movwf	SetBit@value
   806     070D  120A  118A  24B0  120A  118A  	fcall	_SetBit
   807                           
   808                           ;../../pic16flcd.c: 81:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
   809     0712  087C               	movf	Lcd_WriteChar@config,w
   810     0713  0084               	movwf	4
   811     0714  1383               	bcf	3,7	;select IRP bank0
   812     0715  0800               	movf	0,w
   813     0716  00F0               	movwf	SetBit@port
   814     0717  0A84               	incf	4,f
   815     0718  0800               	movf	0,w
   816     0719  0384               	decf	4,f
   817     071A  00F1               	movwf	SetBit@port+1
   818     071B  087C               	movf	Lcd_WriteChar@config,w
   819     071C  3E06               	addlw	6
   820     071D  0084               	movwf	4
   821     071E  0800               	movf	0,w
   822     071F  00F2               	movwf	SetBit@pin
   823     0720  0879               	movf	Lcd_WriteChar@data,w
   824     0721  00FB               	movwf	??_Lcd_WriteChar+1
   825     0722  3006               	movlw	6
   826     0723                     u845:
   827     0723  1003               	clrc
   828     0724  0CFB               	rrf	??_Lcd_WriteChar+1,f
   829     0725  3EFF               	addlw	-1
   830     0726  1D03               	skipz
   831     0727  2F23               	goto	u845
   832     0728  1C7B               	btfss	??_Lcd_WriteChar+1,0
   833     0729  2F2C               	goto	u850
   834     072A  3001               	movlw	1
   835     072B  2F2D               	goto	u860
   836     072C                     u850:
   837     072C  3000               	movlw	0
   838     072D                     u860:
   839     072D  00F3               	movwf	SetBit@value
   840     072E  120A  118A  24B0  120A  118A  	fcall	_SetBit
   841                           
   842                           ;../../pic16flcd.c: 82:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
   843     0733  087C               	movf	Lcd_WriteChar@config,w
   844     0734  0084               	movwf	4
   845     0735  1383               	bcf	3,7	;select IRP bank0
   846     0736  0800               	movf	0,w
   847     0737  00F0               	movwf	SetBit@port
   848     0738  0A84               	incf	4,f
   849     0739  0800               	movf	0,w
   850     073A  0384               	decf	4,f
   851     073B  00F1               	movwf	SetBit@port+1
   852     073C  087C               	movf	Lcd_WriteChar@config,w
   853     073D  3E07               	addlw	7
   854     073E  0084               	movwf	4
   855     073F  0800               	movf	0,w
   856     0740  00F2               	movwf	SetBit@pin
   857     0741  0879               	movf	Lcd_WriteChar@data,w
   858     0742  00FB               	movwf	??_Lcd_WriteChar+1
   859     0743  3007               	movlw	7
   860     0744                     u875:
   861     0744  1003               	clrc
   862     0745  0CFB               	rrf	??_Lcd_WriteChar+1,f
   863     0746  3EFF               	addlw	-1
   864     0747  1D03               	skipz
   865     0748  2F44               	goto	u875
   866     0749  1C7B               	btfss	??_Lcd_WriteChar+1,0
   867     074A  2F4D               	goto	u880
   868     074B  3001               	movlw	1
   869     074C  2F4E               	goto	u890
   870     074D                     u880:
   871     074D  3000               	movlw	0
   872     074E                     u890:
   873     074E  00F3               	movwf	SetBit@value
   874     074F  120A  118A  24B0  120A  118A  	fcall	_SetBit
   875                           
   876                           ;../../pic16flcd.c: 84:     SetBit(config->port, config->rs_pin, 1);
   877     0754  087C               	movf	Lcd_WriteChar@config,w
   878     0755  0084               	movwf	4
   879     0756  1383               	bcf	3,7	;select IRP bank0
   880     0757  0800               	movf	0,w
   881     0758  00F0               	movwf	SetBit@port
   882     0759  0A84               	incf	4,f
   883     075A  0800               	movf	0,w
   884     075B  0384               	decf	4,f
   885     075C  00F1               	movwf	SetBit@port+1
   886     075D  087C               	movf	Lcd_WriteChar@config,w
   887     075E  3E02               	addlw	2
   888     075F  0084               	movwf	4
   889     0760  0800               	movf	0,w
   890     0761  00F2               	movwf	SetBit@pin
   891     0762  01F3               	clrf	SetBit@value
   892     0763  0AF3               	incf	SetBit@value,f
   893     0764  120A  118A  24B0  120A  118A  	fcall	_SetBit
   894                           
   895                           ;../../pic16flcd.c: 85:     PulseEnable(config);
   896     0769  087C               	movf	Lcd_WriteChar@config,w
   897     076A  120A  118A  24DA  120A  118A  	fcall	_PulseEnable
   898                           
   899                           ;../../pic16flcd.c: 88:     SetBit(config->port, config->d4_pin, data & 0x01);
   900     076F  087C               	movf	Lcd_WriteChar@config,w
   901     0770  0084               	movwf	4
   902     0771  1383               	bcf	3,7	;select IRP bank0
   903     0772  0800               	movf	0,w
   904     0773  00F0               	movwf	SetBit@port
   905     0774  0A84               	incf	4,f
   906     0775  0800               	movf	0,w
   907     0776  0384               	decf	4,f
   908     0777  00F1               	movwf	SetBit@port+1
   909     0778  087C               	movf	Lcd_WriteChar@config,w
   910     0779  3E04               	addlw	4
   911     077A  0084               	movwf	4
   912     077B  0800               	movf	0,w
   913     077C  00F2               	movwf	SetBit@pin
   914     077D  1C79               	btfss	Lcd_WriteChar@data,0
   915     077E  2F81               	goto	u900
   916     077F  3001               	movlw	1
   917     0780  2F82               	goto	u910
   918     0781                     u900:
   919     0781  3000               	movlw	0
   920     0782                     u910:
   921     0782  00F3               	movwf	SetBit@value
   922     0783  120A  118A  24B0  120A  118A  	fcall	_SetBit
   923                           
   924                           ;../../pic16flcd.c: 89:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
   925     0788  087C               	movf	Lcd_WriteChar@config,w
   926     0789  0084               	movwf	4
   927     078A  1383               	bcf	3,7	;select IRP bank0
   928     078B  0800               	movf	0,w
   929     078C  00F0               	movwf	SetBit@port
   930     078D  0A84               	incf	4,f
   931     078E  0800               	movf	0,w
   932     078F  0384               	decf	4,f
   933     0790  00F1               	movwf	SetBit@port+1
   934     0791  087C               	movf	Lcd_WriteChar@config,w
   935     0792  3E05               	addlw	5
   936     0793  0084               	movwf	4
   937     0794  0800               	movf	0,w
   938     0795  00F2               	movwf	SetBit@pin
   939     0796  0879               	movf	Lcd_WriteChar@data,w
   940     0797  00FB               	movwf	??_Lcd_WriteChar+1
   941     0798  3001               	movlw	1
   942     0799                     u925:
   943     0799  1003               	clrc
   944     079A  0CFB               	rrf	??_Lcd_WriteChar+1,f
   945     079B  3EFF               	addlw	-1
   946     079C  1D03               	skipz
   947     079D  2F99               	goto	u925
   948     079E  1C7B               	btfss	??_Lcd_WriteChar+1,0
   949     079F  2FA2               	goto	u930
   950     07A0  3001               	movlw	1
   951     07A1  2FA3               	goto	u940
   952     07A2                     u930:
   953     07A2  3000               	movlw	0
   954     07A3                     u940:
   955     07A3  00F3               	movwf	SetBit@value
   956     07A4  120A  118A  24B0  120A  118A  	fcall	_SetBit
   957                           
   958                           ;../../pic16flcd.c: 90:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
   959     07A9  087C               	movf	Lcd_WriteChar@config,w
   960     07AA  0084               	movwf	4
   961     07AB  1383               	bcf	3,7	;select IRP bank0
   962     07AC  0800               	movf	0,w
   963     07AD  00F0               	movwf	SetBit@port
   964     07AE  0A84               	incf	4,f
   965     07AF  0800               	movf	0,w
   966     07B0  0384               	decf	4,f
   967     07B1  00F1               	movwf	SetBit@port+1
   968     07B2  087C               	movf	Lcd_WriteChar@config,w
   969     07B3  3E06               	addlw	6
   970     07B4  0084               	movwf	4
   971     07B5  0800               	movf	0,w
   972     07B6  00F2               	movwf	SetBit@pin
   973     07B7  0879               	movf	Lcd_WriteChar@data,w
   974     07B8  00FB               	movwf	??_Lcd_WriteChar+1
   975     07B9  3002               	movlw	2
   976     07BA                     u955:
   977     07BA  1003               	clrc
   978     07BB  0CFB               	rrf	??_Lcd_WriteChar+1,f
   979     07BC  3EFF               	addlw	-1
   980     07BD  1D03               	skipz
   981     07BE  2FBA               	goto	u955
   982     07BF  1C7B               	btfss	??_Lcd_WriteChar+1,0
   983     07C0  2FC3               	goto	u960
   984     07C1  3001               	movlw	1
   985     07C2  2FC4               	goto	u970
   986     07C3                     u960:
   987     07C3  3000               	movlw	0
   988     07C4                     u970:
   989     07C4  00F3               	movwf	SetBit@value
   990     07C5  120A  118A  24B0  120A  118A  	fcall	_SetBit
   991                           
   992                           ;../../pic16flcd.c: 91:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
   993     07CA  087C               	movf	Lcd_WriteChar@config,w
   994     07CB  0084               	movwf	4
   995     07CC  1383               	bcf	3,7	;select IRP bank0
   996     07CD  0800               	movf	0,w
   997     07CE  00F0               	movwf	SetBit@port
   998     07CF  0A84               	incf	4,f
   999     07D0  0800               	movf	0,w
  1000     07D1  0384               	decf	4,f
  1001     07D2  00F1               	movwf	SetBit@port+1
  1002     07D3  087C               	movf	Lcd_WriteChar@config,w
  1003     07D4  3E07               	addlw	7
  1004     07D5  0084               	movwf	4
  1005     07D6  0800               	movf	0,w
  1006     07D7  00F2               	movwf	SetBit@pin
  1007     07D8  0879               	movf	Lcd_WriteChar@data,w
  1008     07D9  00FB               	movwf	??_Lcd_WriteChar+1
  1009     07DA  3003               	movlw	3
  1010     07DB                     u985:
  1011     07DB  1003               	clrc
  1012     07DC  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1013     07DD  3EFF               	addlw	-1
  1014     07DE  1D03               	skipz
  1015     07DF  2FDB               	goto	u985
  1016     07E0  1C7B               	btfss	??_Lcd_WriteChar+1,0
  1017     07E1  2FE4               	goto	u990
  1018     07E2  3001               	movlw	1
  1019     07E3  2FE5               	goto	u1000
  1020     07E4                     u990:
  1021     07E4  3000               	movlw	0
  1022     07E5                     u1000:
  1023     07E5  00F3               	movwf	SetBit@value
  1024     07E6  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1025                           
  1026                           ;../../pic16flcd.c: 93:     PulseEnable(config);
  1027     07EB  087C               	movf	Lcd_WriteChar@config,w
  1028     07EC  120A  118A  24DA   	fcall	_PulseEnable
  1029     07EF  0008               	return
  1030     07F0                     __end_of_Lcd_WriteChar:
  1031                           
  1032                           	psect	text3
  1033     048D                     __ptext3:	
  1034 ;; *************** function _Lcd_SetCursor *****************
  1035 ;; Defined at:
  1036 ;;		line 148 in file "../../pic16flcd.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  config          1    wreg     PTR struct .
  1039 ;;		 -> main@lcd(8), 
  1040 ;;  row             1    0[BANK0 ] unsigned char 
  1041 ;;  column          1    1[BANK0 ] unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  config          1    4[BANK0 ] PTR struct .
  1044 ;;		 -> main@lcd(8), 
  1045 ;;  address         1    5[BANK0 ] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 300/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       2       0       0       0
  1056 ;;      Locals:         0       2       0       0       0
  1057 ;;      Temps:          0       2       0       0       0
  1058 ;;      Totals:         0       6       0       0       0
  1059 ;;Total ram usage:        6 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 3
  1062 ;; This function calls:
  1063 ;;		_Lcd_Command
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069     048D                     _Lcd_SetCursor:	
  1070                           ;psect for function _Lcd_SetCursor
  1071                           
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1075                           ;Lcd_SetCursor@config stored from wreg
  1076     048D  00A4               	movwf	Lcd_SetCursor@config
  1077                           
  1078                           ;../../pic16flcd.c: 149:     unsigned char address;;../../pic16flcd.c: 152:     switch(r
      +                          ow) {
  1079     048E  2C94               	goto	l826
  1080     048F                     l820:
  1081                           
  1082                           ;../../pic16flcd.c: 154:             address = 0x80;
  1083     048F  3080               	movlw	128
  1084     0490  2C92               	goto	L1
  1085     0491                     l822:	
  1086                           ;../../pic16flcd.c: 155:             break;
  1087                           
  1088                           
  1089                           ;../../pic16flcd.c: 157:             address = 0xC0;
  1090     0491  30C0               	movlw	192
  1091     0492                     L1:
  1092     0492  00A5               	movwf	Lcd_SetCursor@address
  1093                           
  1094                           ;../../pic16flcd.c: 158:             break;
  1095     0493  2CA4               	goto	l828
  1096     0494                     l826:
  1097     0494  0820               	movf	Lcd_SetCursor@row,w
  1098     0495  00A2               	movwf	??_Lcd_SetCursor
  1099     0496  01A3               	clrf	??_Lcd_SetCursor+1
  1100                           
  1101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1102                           ; Switch size 1, requested type "simple"
  1103                           ; Number of cases is 1, Range of values is 0 to 0
  1104                           ; switch strategies available:
  1105                           ; Name         Instructions Cycles
  1106                           ; simple_byte            4     3 (average)
  1107                           ; direct_byte           11     8 (fixed)
  1108                           ; jumptable            260     6 (fixed)
  1109                           ;	Chosen strategy is simple_byte
  1110     0497  0823               	movf	??_Lcd_SetCursor+1,w
  1111     0498  3A00               	xorlw	0	; case 0
  1112     0499  1903               	skipnz
  1113     049A  2C9C               	goto	l870
  1114     049B  2C8F               	goto	l820
  1115     049C                     l870:
  1116                           
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 2, Range of values is 1 to 2
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte            7     4 (average)
  1122                           ; direct_byte           17    11 (fixed)
  1123                           ; jumptable            263     9 (fixed)
  1124                           ;	Chosen strategy is simple_byte
  1125     049C  0822               	movf	??_Lcd_SetCursor,w
  1126     049D  3A01               	xorlw	1	; case 1
  1127     049E  1903               	skipnz
  1128     049F  2C8F               	goto	l820
  1129     04A0  3A03               	xorlw	3	; case 2
  1130     04A1  1903               	skipnz
  1131     04A2  2C91               	goto	l822
  1132     04A3  2C8F               	goto	l820
  1133     04A4                     l828:
  1134                           
  1135                           ;../../pic16flcd.c: 164:     address += (column - 1);
  1136     04A4  0821               	movf	Lcd_SetCursor@column,w
  1137     04A5  3EFF               	addlw	255
  1138     04A6  00A2               	movwf	??_Lcd_SetCursor
  1139     04A7  0822               	movf	??_Lcd_SetCursor,w
  1140     04A8  07A5               	addwf	Lcd_SetCursor@address,f
  1141                           
  1142                           ;../../pic16flcd.c: 167:     Lcd_Command(config, address);
  1143     04A9  0825               	movf	Lcd_SetCursor@address,w
  1144     04AA  00F9               	movwf	Lcd_Command@cmd
  1145     04AB  0824               	movf	Lcd_SetCursor@config,w
  1146     04AC  120A  118A  25AF   	fcall	_Lcd_Command
  1147     04AF  0008               	return
  1148     04B0                     __end_of_Lcd_SetCursor:
  1149                           
  1150                           	psect	text4
  1151     0544                     __ptext4:	
  1152 ;; *************** function _Lcd_Init *****************
  1153 ;; Defined at:
  1154 ;;		line 110 in file "../../pic16flcd.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  config          1    wreg     PTR struct .
  1157 ;;		 -> main@lcd(8), 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  config          1    4[BANK0 ] PTR struct .
  1160 ;;		 -> main@lcd(8), 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : B00/100
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       1       0       0       0
  1172 ;;      Temps:          0       2       0       0       0
  1173 ;;      Totals:         0       3       0       0       0
  1174 ;;Total ram usage:        3 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 4
  1177 ;; This function calls:
  1178 ;;		_Lcd_Clear
  1179 ;;		_Lcd_Command
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185     0544                     _Lcd_Init:	
  1186                           ;psect for function _Lcd_Init
  1187                           
  1188                           
  1189                           ;incstack = 0
  1190                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1191                           ;Lcd_Init@config stored from wreg
  1192     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1193     0545  00A4               	movwf	Lcd_Init@config
  1194                           
  1195                           ;../../pic16flcd.c: 116:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1196     0546  3014               	movlw	20
  1197     0547  1283               	bcf	3,5	;RP0=0, select bank0
  1198     0548  1303               	bcf	3,6	;RP1=0, select bank0
  1199     0549  00A3               	movwf	??_Lcd_Init+1
  1200     054A  3079               	movlw	121
  1201     054B  00A2               	movwf	??_Lcd_Init
  1202     054C                     u1037:
  1203     054C  0BA2               	decfsz	??_Lcd_Init,f
  1204     054D  2D4C               	goto	u1037
  1205     054E  0BA3               	decfsz	??_Lcd_Init+1,f
  1206     054F  2D4C               	goto	u1037
  1207                           
  1208                           ;../../pic16flcd.c: 117:     Lcd_Command(config, 0x03);
  1209     0550  3003               	movlw	3
  1210     0551  00F9               	movwf	Lcd_Command@cmd
  1211     0552  1283               	bcf	3,5	;RP0=0, select bank0
  1212     0553  1303               	bcf	3,6	;RP1=0, select bank0
  1213     0554  0824               	movf	Lcd_Init@config,w
  1214     0555  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1215                           
  1216                           ;../../pic16flcd.c: 118:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1217     055A  3007               	movlw	7
  1218     055B  1283               	bcf	3,5	;RP0=0, select bank0
  1219     055C  1303               	bcf	3,6	;RP1=0, select bank0
  1220     055D  00A3               	movwf	??_Lcd_Init+1
  1221     055E  307C               	movlw	124
  1222     055F  00A2               	movwf	??_Lcd_Init
  1223     0560                     u1047:
  1224     0560  0BA2               	decfsz	??_Lcd_Init,f
  1225     0561  2D60               	goto	u1047
  1226     0562  0BA3               	decfsz	??_Lcd_Init+1,f
  1227     0563  2D60               	goto	u1047
  1228     0564  0000               	nop
  1229                           
  1230                           ;../../pic16flcd.c: 119:     Lcd_Command(config, 0x03);
  1231     0565  3003               	movlw	3
  1232     0566  00F9               	movwf	Lcd_Command@cmd
  1233     0567  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0568  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0569  0824               	movf	Lcd_Init@config,w
  1236     056A  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1237                           
  1238                           ;../../pic16flcd.c: 120:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1239     056F  3020               	movlw	32
  1240     0570  1283               	bcf	3,5	;RP0=0, select bank0
  1241     0571  1303               	bcf	3,6	;RP1=0, select bank0
  1242     0572  00A2               	movwf	??_Lcd_Init
  1243     0573                     u1057:
  1244     0573  0BA2               	decfsz	??_Lcd_Init,f
  1245     0574  2D73               	goto	u1057
  1246     0575  0000               	nop
  1247                           
  1248                           ;../../pic16flcd.c: 121:     Lcd_Command(config, 0x03);
  1249     0576  3003               	movlw	3
  1250     0577  00F9               	movwf	Lcd_Command@cmd
  1251     0578  1283               	bcf	3,5	;RP0=0, select bank0
  1252     0579  1303               	bcf	3,6	;RP1=0, select bank0
  1253     057A  0824               	movf	Lcd_Init@config,w
  1254     057B  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1255                           
  1256                           ;../../pic16flcd.c: 122:     Lcd_Command(config, 0x02);
  1257     0580  3002               	movlw	2
  1258     0581  00F9               	movwf	Lcd_Command@cmd
  1259     0582  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0583  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0584  0824               	movf	Lcd_Init@config,w
  1262     0585  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1263                           
  1264                           ;../../pic16flcd.c: 124:     Lcd_Command(config, 0x28);
  1265     058A  3028               	movlw	40
  1266     058B  00F9               	movwf	Lcd_Command@cmd
  1267     058C  1283               	bcf	3,5	;RP0=0, select bank0
  1268     058D  1303               	bcf	3,6	;RP1=0, select bank0
  1269     058E  0824               	movf	Lcd_Init@config,w
  1270     058F  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1271                           
  1272                           ;../../pic16flcd.c: 125:     Lcd_Command(config, 0x0C);
  1273     0594  300C               	movlw	12
  1274     0595  00F9               	movwf	Lcd_Command@cmd
  1275     0596  1283               	bcf	3,5	;RP0=0, select bank0
  1276     0597  1303               	bcf	3,6	;RP1=0, select bank0
  1277     0598  0824               	movf	Lcd_Init@config,w
  1278     0599  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1279                           
  1280                           ;../../pic16flcd.c: 126:     Lcd_Command(config, 0x06);
  1281     059E  3006               	movlw	6
  1282     059F  00F9               	movwf	Lcd_Command@cmd
  1283     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1284     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1285     05A2  0824               	movf	Lcd_Init@config,w
  1286     05A3  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1287                           
  1288                           ;../../pic16flcd.c: 127:     Lcd_Clear(config);
  1289     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1290     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1291     05AA  0824               	movf	Lcd_Init@config,w
  1292     05AB  120A  118A  2457   	fcall	_Lcd_Clear
  1293     05AE  0008               	return
  1294     05AF                     __end_of_Lcd_Init:
  1295                           
  1296                           	psect	text5
  1297     0457                     __ptext5:	
  1298 ;; *************** function _Lcd_Clear *****************
  1299 ;; Defined at:
  1300 ;;		line 135 in file "../../pic16flcd.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  config          1    wreg     PTR struct .
  1303 ;;		 -> main@lcd(8), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  config          1   13[COMMON] PTR struct .
  1306 ;;		 -> main@lcd(8), 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/100
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         1       0       0       0       0
  1318 ;;      Temps:          0       2       0       0       0
  1319 ;;      Totals:         1       2       0       0       0
  1320 ;;Total ram usage:        3 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 3
  1323 ;; This function calls:
  1324 ;;		_Lcd_Command
  1325 ;; This function is called by:
  1326 ;;		_Lcd_Init
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331     0457                     _Lcd_Clear:	
  1332                           ;psect for function _Lcd_Clear
  1333                           
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1337                           ;Lcd_Clear@config stored from wreg
  1338     0457  00FD               	movwf	Lcd_Clear@config
  1339                           
  1340                           ;../../pic16flcd.c: 136:     Lcd_Command(config, 0x01);
  1341     0458  01F9               	clrf	Lcd_Command@cmd
  1342     0459  0AF9               	incf	Lcd_Command@cmd,f
  1343     045A  087D               	movf	Lcd_Clear@config,w
  1344     045B  120A  118A  25AF  120A  118A  	fcall	_Lcd_Command
  1345                           
  1346                           ;../../pic16flcd.c: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1347     0460  3003               	movlw	3
  1348     0461  1283               	bcf	3,5	;RP0=0, select bank0
  1349     0462  1303               	bcf	3,6	;RP1=0, select bank0
  1350     0463  00A1               	movwf	??_Lcd_Clear+1
  1351     0464  3097               	movlw	151
  1352     0465  00A0               	movwf	??_Lcd_Clear
  1353     0466                     u1067:
  1354     0466  0BA0               	decfsz	??_Lcd_Clear,f
  1355     0467  2C66               	goto	u1067
  1356     0468  0BA1               	decfsz	??_Lcd_Clear+1,f
  1357     0469  2C66               	goto	u1067
  1358     046A  0008               	return
  1359     046B                     __end_of_Lcd_Clear:
  1360                           
  1361                           	psect	text6
  1362     05AF                     __ptext6:	
  1363 ;; *************** function _Lcd_Command *****************
  1364 ;; Defined at:
  1365 ;;		line 51 in file "../../pic16flcd.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  config          1    wreg     PTR struct .
  1368 ;;		 -> main@lcd(8), 
  1369 ;;  cmd             1    9[COMMON] unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  config          1   12[COMMON] PTR struct .
  1372 ;;		 -> main@lcd(8), 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         1       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0
  1385 ;;      Totals:         4       0       0       0       0
  1386 ;;Total ram usage:        4 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 2
  1389 ;; This function calls:
  1390 ;;		_PulseEnable
  1391 ;;		_SetBit
  1392 ;; This function is called by:
  1393 ;;		_Lcd_Init
  1394 ;;		_Lcd_Clear
  1395 ;;		_Lcd_SetCursor
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399     05AF                     _Lcd_Command:	
  1400                           ;psect for function _Lcd_Command
  1401                           
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1405                           ;Lcd_Command@config stored from wreg
  1406     05AF  00FC               	movwf	Lcd_Command@config
  1407                           
  1408                           ;../../pic16flcd.c: 53:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1409     05B0  087C               	movf	Lcd_Command@config,w
  1410     05B1  0084               	movwf	4
  1411     05B2  1383               	bcf	3,7	;select IRP bank0
  1412     05B3  0800               	movf	0,w
  1413     05B4  00F0               	movwf	SetBit@port
  1414     05B5  0A84               	incf	4,f
  1415     05B6  0800               	movf	0,w
  1416     05B7  0384               	decf	4,f
  1417     05B8  00F1               	movwf	SetBit@port+1
  1418     05B9  087C               	movf	Lcd_Command@config,w
  1419     05BA  3E04               	addlw	4
  1420     05BB  0084               	movwf	4
  1421     05BC  0800               	movf	0,w
  1422     05BD  00F2               	movwf	SetBit@pin
  1423     05BE  0879               	movf	Lcd_Command@cmd,w
  1424     05BF  00FB               	movwf	??_Lcd_Command+1
  1425     05C0  3004               	movlw	4
  1426     05C1                     u555:
  1427     05C1  1003               	clrc
  1428     05C2  0CFB               	rrf	??_Lcd_Command+1,f
  1429     05C3  3EFF               	addlw	-1
  1430     05C4  1D03               	skipz
  1431     05C5  2DC1               	goto	u555
  1432     05C6  1C7B               	btfss	??_Lcd_Command+1,0
  1433     05C7  2DCA               	goto	u560
  1434     05C8  3001               	movlw	1
  1435     05C9  2DCB               	goto	u570
  1436     05CA                     u560:
  1437     05CA  3000               	movlw	0
  1438     05CB                     u570:
  1439     05CB  00F3               	movwf	SetBit@value
  1440     05CC  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1441                           
  1442                           ;../../pic16flcd.c: 54:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1443     05D1  087C               	movf	Lcd_Command@config,w
  1444     05D2  0084               	movwf	4
  1445     05D3  1383               	bcf	3,7	;select IRP bank0
  1446     05D4  0800               	movf	0,w
  1447     05D5  00F0               	movwf	SetBit@port
  1448     05D6  0A84               	incf	4,f
  1449     05D7  0800               	movf	0,w
  1450     05D8  0384               	decf	4,f
  1451     05D9  00F1               	movwf	SetBit@port+1
  1452     05DA  087C               	movf	Lcd_Command@config,w
  1453     05DB  3E05               	addlw	5
  1454     05DC  0084               	movwf	4
  1455     05DD  0800               	movf	0,w
  1456     05DE  00F2               	movwf	SetBit@pin
  1457     05DF  0879               	movf	Lcd_Command@cmd,w
  1458     05E0  00FB               	movwf	??_Lcd_Command+1
  1459     05E1  3005               	movlw	5
  1460     05E2                     u585:
  1461     05E2  1003               	clrc
  1462     05E3  0CFB               	rrf	??_Lcd_Command+1,f
  1463     05E4  3EFF               	addlw	-1
  1464     05E5  1D03               	skipz
  1465     05E6  2DE2               	goto	u585
  1466     05E7  1C7B               	btfss	??_Lcd_Command+1,0
  1467     05E8  2DEB               	goto	u590
  1468     05E9  3001               	movlw	1
  1469     05EA  2DEC               	goto	u600
  1470     05EB                     u590:
  1471     05EB  3000               	movlw	0
  1472     05EC                     u600:
  1473     05EC  00F3               	movwf	SetBit@value
  1474     05ED  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1475                           
  1476                           ;../../pic16flcd.c: 55:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  1477     05F2  087C               	movf	Lcd_Command@config,w
  1478     05F3  0084               	movwf	4
  1479     05F4  1383               	bcf	3,7	;select IRP bank0
  1480     05F5  0800               	movf	0,w
  1481     05F6  00F0               	movwf	SetBit@port
  1482     05F7  0A84               	incf	4,f
  1483     05F8  0800               	movf	0,w
  1484     05F9  0384               	decf	4,f
  1485     05FA  00F1               	movwf	SetBit@port+1
  1486     05FB  087C               	movf	Lcd_Command@config,w
  1487     05FC  3E06               	addlw	6
  1488     05FD  0084               	movwf	4
  1489     05FE  0800               	movf	0,w
  1490     05FF  00F2               	movwf	SetBit@pin
  1491     0600  0879               	movf	Lcd_Command@cmd,w
  1492     0601  00FB               	movwf	??_Lcd_Command+1
  1493     0602  3006               	movlw	6
  1494     0603                     u615:
  1495     0603  1003               	clrc
  1496     0604  0CFB               	rrf	??_Lcd_Command+1,f
  1497     0605  3EFF               	addlw	-1
  1498     0606  1D03               	skipz
  1499     0607  2E03               	goto	u615
  1500     0608  1C7B               	btfss	??_Lcd_Command+1,0
  1501     0609  2E0C               	goto	u620
  1502     060A  3001               	movlw	1
  1503     060B  2E0D               	goto	u630
  1504     060C                     u620:
  1505     060C  3000               	movlw	0
  1506     060D                     u630:
  1507     060D  00F3               	movwf	SetBit@value
  1508     060E  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1509                           
  1510                           ;../../pic16flcd.c: 56:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  1511     0613  087C               	movf	Lcd_Command@config,w
  1512     0614  0084               	movwf	4
  1513     0615  1383               	bcf	3,7	;select IRP bank0
  1514     0616  0800               	movf	0,w
  1515     0617  00F0               	movwf	SetBit@port
  1516     0618  0A84               	incf	4,f
  1517     0619  0800               	movf	0,w
  1518     061A  0384               	decf	4,f
  1519     061B  00F1               	movwf	SetBit@port+1
  1520     061C  087C               	movf	Lcd_Command@config,w
  1521     061D  3E07               	addlw	7
  1522     061E  0084               	movwf	4
  1523     061F  0800               	movf	0,w
  1524     0620  00F2               	movwf	SetBit@pin
  1525     0621  0879               	movf	Lcd_Command@cmd,w
  1526     0622  00FB               	movwf	??_Lcd_Command+1
  1527     0623  3007               	movlw	7
  1528     0624                     u645:
  1529     0624  1003               	clrc
  1530     0625  0CFB               	rrf	??_Lcd_Command+1,f
  1531     0626  3EFF               	addlw	-1
  1532     0627  1D03               	skipz
  1533     0628  2E24               	goto	u645
  1534     0629  1C7B               	btfss	??_Lcd_Command+1,0
  1535     062A  2E2D               	goto	u650
  1536     062B  3001               	movlw	1
  1537     062C  2E2E               	goto	u660
  1538     062D                     u650:
  1539     062D  3000               	movlw	0
  1540     062E                     u660:
  1541     062E  00F3               	movwf	SetBit@value
  1542     062F  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1543                           
  1544                           ;../../pic16flcd.c: 58:     SetBit(config->port, config->rs_pin, 0);
  1545     0634  087C               	movf	Lcd_Command@config,w
  1546     0635  0084               	movwf	4
  1547     0636  1383               	bcf	3,7	;select IRP bank0
  1548     0637  0800               	movf	0,w
  1549     0638  00F0               	movwf	SetBit@port
  1550     0639  0A84               	incf	4,f
  1551     063A  0800               	movf	0,w
  1552     063B  0384               	decf	4,f
  1553     063C  00F1               	movwf	SetBit@port+1
  1554     063D  087C               	movf	Lcd_Command@config,w
  1555     063E  3E02               	addlw	2
  1556     063F  0084               	movwf	4
  1557     0640  0800               	movf	0,w
  1558     0641  00F2               	movwf	SetBit@pin
  1559     0642  01F3               	clrf	SetBit@value
  1560     0643  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1561                           
  1562                           ;../../pic16flcd.c: 59:     PulseEnable(config);
  1563     0648  087C               	movf	Lcd_Command@config,w
  1564     0649  120A  118A  24DA  120A  118A  	fcall	_PulseEnable
  1565                           
  1566                           ;../../pic16flcd.c: 62:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  1567     064E  087C               	movf	Lcd_Command@config,w
  1568     064F  0084               	movwf	4
  1569     0650  1383               	bcf	3,7	;select IRP bank0
  1570     0651  0800               	movf	0,w
  1571     0652  00F0               	movwf	SetBit@port
  1572     0653  0A84               	incf	4,f
  1573     0654  0800               	movf	0,w
  1574     0655  0384               	decf	4,f
  1575     0656  00F1               	movwf	SetBit@port+1
  1576     0657  087C               	movf	Lcd_Command@config,w
  1577     0658  3E04               	addlw	4
  1578     0659  0084               	movwf	4
  1579     065A  0800               	movf	0,w
  1580     065B  00F2               	movwf	SetBit@pin
  1581     065C  1C79               	btfss	Lcd_Command@cmd,0
  1582     065D  2E60               	goto	u670
  1583     065E  3001               	movlw	1
  1584     065F  2E61               	goto	u680
  1585     0660                     u670:
  1586     0660  3000               	movlw	0
  1587     0661                     u680:
  1588     0661  00F3               	movwf	SetBit@value
  1589     0662  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1590                           
  1591                           ;../../pic16flcd.c: 63:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  1592     0667  087C               	movf	Lcd_Command@config,w
  1593     0668  0084               	movwf	4
  1594     0669  1383               	bcf	3,7	;select IRP bank0
  1595     066A  0800               	movf	0,w
  1596     066B  00F0               	movwf	SetBit@port
  1597     066C  0A84               	incf	4,f
  1598     066D  0800               	movf	0,w
  1599     066E  0384               	decf	4,f
  1600     066F  00F1               	movwf	SetBit@port+1
  1601     0670  087C               	movf	Lcd_Command@config,w
  1602     0671  3E05               	addlw	5
  1603     0672  0084               	movwf	4
  1604     0673  0800               	movf	0,w
  1605     0674  00F2               	movwf	SetBit@pin
  1606     0675  0879               	movf	Lcd_Command@cmd,w
  1607     0676  00FB               	movwf	??_Lcd_Command+1
  1608     0677  3001               	movlw	1
  1609     0678                     u695:
  1610     0678  1003               	clrc
  1611     0679  0CFB               	rrf	??_Lcd_Command+1,f
  1612     067A  3EFF               	addlw	-1
  1613     067B  1D03               	skipz
  1614     067C  2E78               	goto	u695
  1615     067D  1C7B               	btfss	??_Lcd_Command+1,0
  1616     067E  2E81               	goto	u700
  1617     067F  3001               	movlw	1
  1618     0680  2E82               	goto	u710
  1619     0681                     u700:
  1620     0681  3000               	movlw	0
  1621     0682                     u710:
  1622     0682  00F3               	movwf	SetBit@value
  1623     0683  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1624                           
  1625                           ;../../pic16flcd.c: 64:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  1626     0688  087C               	movf	Lcd_Command@config,w
  1627     0689  0084               	movwf	4
  1628     068A  1383               	bcf	3,7	;select IRP bank0
  1629     068B  0800               	movf	0,w
  1630     068C  00F0               	movwf	SetBit@port
  1631     068D  0A84               	incf	4,f
  1632     068E  0800               	movf	0,w
  1633     068F  0384               	decf	4,f
  1634     0690  00F1               	movwf	SetBit@port+1
  1635     0691  087C               	movf	Lcd_Command@config,w
  1636     0692  3E06               	addlw	6
  1637     0693  0084               	movwf	4
  1638     0694  0800               	movf	0,w
  1639     0695  00F2               	movwf	SetBit@pin
  1640     0696  0879               	movf	Lcd_Command@cmd,w
  1641     0697  00FB               	movwf	??_Lcd_Command+1
  1642     0698  3002               	movlw	2
  1643     0699                     u725:
  1644     0699  1003               	clrc
  1645     069A  0CFB               	rrf	??_Lcd_Command+1,f
  1646     069B  3EFF               	addlw	-1
  1647     069C  1D03               	skipz
  1648     069D  2E99               	goto	u725
  1649     069E  1C7B               	btfss	??_Lcd_Command+1,0
  1650     069F  2EA2               	goto	u730
  1651     06A0  3001               	movlw	1
  1652     06A1  2EA3               	goto	u740
  1653     06A2                     u730:
  1654     06A2  3000               	movlw	0
  1655     06A3                     u740:
  1656     06A3  00F3               	movwf	SetBit@value
  1657     06A4  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1658                           
  1659                           ;../../pic16flcd.c: 65:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  1660     06A9  087C               	movf	Lcd_Command@config,w
  1661     06AA  0084               	movwf	4
  1662     06AB  1383               	bcf	3,7	;select IRP bank0
  1663     06AC  0800               	movf	0,w
  1664     06AD  00F0               	movwf	SetBit@port
  1665     06AE  0A84               	incf	4,f
  1666     06AF  0800               	movf	0,w
  1667     06B0  0384               	decf	4,f
  1668     06B1  00F1               	movwf	SetBit@port+1
  1669     06B2  087C               	movf	Lcd_Command@config,w
  1670     06B3  3E07               	addlw	7
  1671     06B4  0084               	movwf	4
  1672     06B5  0800               	movf	0,w
  1673     06B6  00F2               	movwf	SetBit@pin
  1674     06B7  0879               	movf	Lcd_Command@cmd,w
  1675     06B8  00FB               	movwf	??_Lcd_Command+1
  1676     06B9  3003               	movlw	3
  1677     06BA                     u755:
  1678     06BA  1003               	clrc
  1679     06BB  0CFB               	rrf	??_Lcd_Command+1,f
  1680     06BC  3EFF               	addlw	-1
  1681     06BD  1D03               	skipz
  1682     06BE  2EBA               	goto	u755
  1683     06BF  1C7B               	btfss	??_Lcd_Command+1,0
  1684     06C0  2EC3               	goto	u760
  1685     06C1  3001               	movlw	1
  1686     06C2  2EC4               	goto	u770
  1687     06C3                     u760:
  1688     06C3  3000               	movlw	0
  1689     06C4                     u770:
  1690     06C4  00F3               	movwf	SetBit@value
  1691     06C5  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1692                           
  1693                           ;../../pic16flcd.c: 67:     PulseEnable(config);
  1694     06CA  087C               	movf	Lcd_Command@config,w
  1695     06CB  120A  118A  24DA   	fcall	_PulseEnable
  1696     06CE  0008               	return
  1697     06CF                     __end_of_Lcd_Command:
  1698                           
  1699                           	psect	text7
  1700     04DA                     __ptext7:	
  1701 ;; *************** function _PulseEnable *****************
  1702 ;; Defined at:
  1703 ;;		line 37 in file "../../pic16flcd.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  config          1    wreg     PTR struct .
  1706 ;;		 -> main@lcd(8), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  config          1    8[COMMON] PTR struct .
  1709 ;;		 -> main@lcd(8), 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         1       0       0       0       0
  1721 ;;      Temps:          2       0       0       0       0
  1722 ;;      Totals:         3       0       0       0       0
  1723 ;;Total ram usage:        3 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 1
  1726 ;; This function calls:
  1727 ;;		_SetBit
  1728 ;; This function is called by:
  1729 ;;		_Lcd_Command
  1730 ;;		_Lcd_WriteChar
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734     04DA                     _PulseEnable:	
  1735                           ;psect for function _PulseEnable
  1736                           
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1740                           ;PulseEnable@config stored from wreg
  1741     04DA  00F8               	movwf	PulseEnable@config
  1742                           
  1743                           ;../../pic16flcd.c: 38:     SetBit(config->port, config->en_pin, 1);
  1744     04DB  0878               	movf	PulseEnable@config,w
  1745     04DC  0084               	movwf	4
  1746     04DD  1383               	bcf	3,7	;select IRP bank0
  1747     04DE  0800               	movf	0,w
  1748     04DF  00F0               	movwf	SetBit@port
  1749     04E0  0A84               	incf	4,f
  1750     04E1  0800               	movf	0,w
  1751     04E2  0384               	decf	4,f
  1752     04E3  00F1               	movwf	SetBit@port+1
  1753     04E4  0878               	movf	PulseEnable@config,w
  1754     04E5  3E03               	addlw	3
  1755     04E6  0084               	movwf	4
  1756     04E7  0800               	movf	0,w
  1757     04E8  00F2               	movwf	SetBit@pin
  1758     04E9  01F3               	clrf	SetBit@value
  1759     04EA  0AF3               	incf	SetBit@value,f
  1760     04EB  120A  118A  24B0  120A  118A  	fcall	_SetBit
  1761                           
  1762                           ;../../pic16flcd.c: 39:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1763     04F0  3003               	movlw	3
  1764     04F1  00F7               	movwf	??_PulseEnable+1
  1765     04F2  3097               	movlw	151
  1766     04F3  00F6               	movwf	??_PulseEnable
  1767     04F4                     u1077:
  1768     04F4  0BF6               	decfsz	??_PulseEnable,f
  1769     04F5  2CF4               	goto	u1077
  1770     04F6  0BF7               	decfsz	??_PulseEnable+1,f
  1771     04F7  2CF4               	goto	u1077
  1772     04F8  2CF9               	nop2
  1773                           
  1774                           ;../../pic16flcd.c: 40:     SetBit(config->port, config->en_pin, 0);
  1775     04F9  0878               	movf	PulseEnable@config,w
  1776     04FA  0084               	movwf	4
  1777     04FB  1383               	bcf	3,7	;select IRP bank0
  1778     04FC  0800               	movf	0,w
  1779     04FD  00F0               	movwf	SetBit@port
  1780     04FE  0A84               	incf	4,f
  1781     04FF  0800               	movf	0,w
  1782     0500  0384               	decf	4,f
  1783     0501  00F1               	movwf	SetBit@port+1
  1784     0502  0878               	movf	PulseEnable@config,w
  1785     0503  3E03               	addlw	3
  1786     0504  0084               	movwf	4
  1787     0505  0800               	movf	0,w
  1788     0506  00F2               	movwf	SetBit@pin
  1789     0507  01F3               	clrf	SetBit@value
  1790     0508  120A  118A  24B0   	fcall	_SetBit
  1791     050B  0008               	return
  1792     050C                     __end_of_PulseEnable:
  1793                           
  1794                           	psect	text8
  1795     04B0                     __ptext8:	
  1796 ;; *************** function _SetBit *****************
  1797 ;; Defined at:
  1798 ;;		line 23 in file "../../pic16flcd.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  1801 ;;		 -> PORTC(1), 
  1802 ;;  pin             1    2[COMMON] unsigned char 
  1803 ;;  value           1    3[COMMON] _Bool 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 800/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         4       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0
  1817 ;;      Temps:          2       0       0       0       0
  1818 ;;      Totals:         6       0       0       0       0
  1819 ;;Total ram usage:        6 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_PulseEnable
  1825 ;;		_Lcd_Command
  1826 ;;		_Lcd_WriteChar
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830     04B0                     _SetBit:	
  1831                           ;psect for function _SetBit
  1832                           
  1833                           
  1834                           ;../../pic16flcd.c: 24:     if (value) {
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  1838     04B0  0873               	movf	SetBit@value,w
  1839     04B1  1903               	btfsc	3,2
  1840     04B2  2CC6               	goto	l774
  1841                           
  1842                           ;../../pic16flcd.c: 25:         *port |= (1 << pin);
  1843     04B3  3001               	movlw	1
  1844     04B4  00F4               	movwf	??_SetBit
  1845     04B5  0A72               	incf	SetBit@pin,w
  1846     04B6  2CB9               	goto	u534
  1847     04B7                     u535:
  1848     04B7  1003               	clrc
  1849     04B8  0DF4               	rlf	??_SetBit,f
  1850     04B9                     u534:
  1851     04B9  3EFF               	addlw	-1
  1852     04BA  1D03               	skipz
  1853     04BB  2CB7               	goto	u535
  1854     04BC  0874               	movf	??_SetBit,w
  1855     04BD  00F5               	movwf	??_SetBit+1
  1856     04BE  0870               	movf	SetBit@port,w
  1857     04BF  0084               	movwf	4
  1858     04C0  1783               	bsf	3,7
  1859     04C1  1C71               	btfss	SetBit@port+1,0
  1860     04C2  1383               	bcf	3,7
  1861     04C3  0875               	movf	??_SetBit+1,w
  1862     04C4  0480               	iorwf	0,f
  1863                           
  1864                           ;../../pic16flcd.c: 26:     } else {
  1865     04C5  0008               	return
  1866     04C6                     l774:
  1867                           
  1868                           ;../../pic16flcd.c: 27:         *port &= ~(1 << pin);
  1869     04C6  3001               	movlw	1
  1870     04C7  00F4               	movwf	??_SetBit
  1871     04C8  0A72               	incf	SetBit@pin,w
  1872     04C9  2CCC               	goto	u544
  1873     04CA                     u545:
  1874     04CA  1003               	clrc
  1875     04CB  0DF4               	rlf	??_SetBit,f
  1876     04CC                     u544:
  1877     04CC  3EFF               	addlw	-1
  1878     04CD  1D03               	skipz
  1879     04CE  2CCA               	goto	u545
  1880     04CF  0874               	movf	??_SetBit,w
  1881     04D0  3AFF               	xorlw	255
  1882     04D1  00F5               	movwf	??_SetBit+1
  1883     04D2  0870               	movf	SetBit@port,w
  1884     04D3  0084               	movwf	4
  1885     04D4  1783               	bsf	3,7
  1886     04D5  1C71               	btfss	SetBit@port+1,0
  1887     04D6  1383               	bcf	3,7
  1888     04D7  0875               	movf	??_SetBit+1,w
  1889     04D8  0580               	andwf	0,f
  1890     04D9  0008               	return
  1891     04DA                     __end_of_SetBit:
  1892     007E                     btemp	set	126	;btemp
  1893     007E                     wtemp0	set	126
  1894                           
  1895                           	psect	config
  1896                           
  1897                           ;Config register CONFIG1 @ 0x2007
  1898                           ;	Oscillator Selection bits
  1899                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1900                           ;	Watchdog Timer Enable bit
  1901                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1902                           ;	Power-up Timer Enable bit
  1903                           ;	PWRTE = OFF, PWRT disabled
  1904                           ;	RE3/MCLR pin function select bit
  1905                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1906                           ;	Code Protection bit
  1907                           ;	CP = OFF, Program memory code protection is disabled
  1908                           ;	Data Code Protection bit
  1909                           ;	CPD = OFF, Data memory code protection is disabled
  1910                           ;	Brown Out Reset Selection bits
  1911                           ;	BOREN = ON, BOR enabled
  1912                           ;	Internal External Switchover bit
  1913                           ;	IESO = 0x1, unprogrammed default
  1914                           ;	Fail-Safe Clock Monitor Enabled bit
  1915                           ;	FCMEN = 0x1, unprogrammed default
  1916                           ;	Low Voltage Programming Enable bit
  1917                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1918                           ;	In-Circuit Debugger Mode bit
  1919                           ;	DEBUG = 0x1, unprogrammed default
  1920     2007                     	org	8199
  1921     2007  2FF4               	dw	12276

Data Sizes:
    Strings     19
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    F1466$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S22$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   56456
                                              6 BANK0     12    12      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     2      1   10653
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10477
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11530
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22803
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11341
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11253
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteString
     _Lcd_WriteChar
       _PulseEnable
       _SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan  3 11:40:19 2024

                      pc 0002           Lcd_Init@config 0024                       fsr 0004  
                    l125 0543                      l820 048F                      l822 0491  
                    l826 0494                      l828 04A4                      l774 04C6  
                    l870 049C                      l796 046E                      u600 05EC  
                    u700 0681                      u620 060C                      u534 04B9  
                    u710 0682                      u630 060D                      u535 04B7  
                    u615 0603                      u544 04CC                      u560 05CA  
                    u800 06EB                      u545 04CA                      u730 06A2  
                    u650 062D                      u570 05CB                      u555 05C1  
                    u740 06A3                      u660 062E                      u900 0781  
                    u820 070B                      u725 0699                      u645 0624  
                    u670 0660                      u590 05EB                      u910 0782  
                    u830 070C                      u815 0702                      u760 06C3  
                    u680 0661                      u585 05E2                      u770 06C4  
                    u930 07A2                      u850 072C                      u755 06BA  
                    u940 07A3                      u860 072D                      u925 0799  
                    u845 0723                      u790 06EA                      u695 0678  
                    u960 07C3                      u880 074D                      u785 06E1  
                    u970 07C4                      u890 074E                      u955 07BA  
                    u875 0744                      u990 07E4                      u985 07DB  
                    fsr0 0004         ?_Lcd_WriteString 007D                      indf 0000  
    __end_of_Lcd_Command 06CF                     STR_1 0009                     u1000 07E5  
                   u1020 0514                     u1037 054C                     u1047 0560  
                   u1057 0573                     u1067 0466                     u1077 04F4  
     Lcd_WriteString@str 007D                     _main 050C                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTC 0007  
                  _TRISC 0087               SetBit@port 0070                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Init 05AF  
      PulseEnable@config 0078          __initialization 07F0             __end_of_main 0544  
            _Lcd_Command 05AF                   ??_main 0026    __end_of_Lcd_SetCursor 04B0  
                 _SetBit 04B0     Lcd_SetCursor@address 0025              SetBit@value 0073  
  __end_of_Lcd_WriteChar 07F0  __end_of__initialization 07FC            ??_PulseEnable 0076  
      __end_of_Lcd_Clear 046B           __pcstackCOMMON 0070             __pidataBANK0 043E  
              ?_Lcd_Init 0070                  ?_SetBit 0070               __pmaintext 050C  
    __end_of_PulseEnable 050C               ??_Lcd_Init 0022    Lcd_WriteString@config 0021  
             __stringtab 0003        Lcd_WriteChar@data 0079             ?_Lcd_Command 0079  
                __ptext1 046B                  __ptext2 06CF                  __ptext3 048D  
                __ptext4 0544                  __ptext5 0457                  __ptext6 05AF  
                __ptext7 04DA                  __ptext8 04B0                  main@lcd 002A  
   end_of_initialization 07FC         Lcd_SetCursor@row 0020              _PulseEnable 04DA  
      ??_Lcd_WriteString 0020                _Lcd_Clear 0457           __end_of_SetBit 04DA  
              SetBit@pin 0072      start_initialization 07F0                 ??_SetBit 0074  
             ?_Lcd_Clear 0070      Lcd_SetCursor@config 0024      Lcd_SetCursor@column 0021  
             init_fetch0 0446              __pdataBANK0 0032        Lcd_Command@config 007C  
    Lcd_WriteChar@config 007C                ___latbits 0002            __pcstackBANK0 0020  
          _Lcd_SetCursor 048D                __pstrings 0003            _Lcd_WriteChar 06CF  
         ?_Lcd_SetCursor 0020             ?_PulseEnable 0070              ??_Lcd_Clear 0020  
        Lcd_Clear@config 007D                main@F1466 0032              __stringbase 0008  
         ?_Lcd_WriteChar 0079                 _Lcd_Init 0544          _Lcd_WriteString 046B  
     __end_of__stringtab 0009          ??_Lcd_SetCursor 0022          ??_Lcd_WriteChar 007A  
__end_of_Lcd_WriteString 048D                 init_ram0 044A                stringcode 0003  
          ??_Lcd_Command 007A           Lcd_Command@cmd 0079                 stringdir 0003  
               stringtab 0003  
