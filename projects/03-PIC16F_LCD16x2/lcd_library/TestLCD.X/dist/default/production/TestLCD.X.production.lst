

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 12:21:17 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F628A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     008C                     	;# 
    84     008E                     	;# 
    85     0092                     	;# 
    86     0098                     	;# 
    87     0099                     	;# 
    88     009A                     	;# 
    89     009B                     	;# 
    90     009C                     	;# 
    91     009D                     	;# 
    92     009F                     	;# 
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001F                     	;# 
   117     0081                     	;# 
   118     0085                     	;# 
   119     0086                     	;# 
   120     008C                     	;# 
   121     008E                     	;# 
   122     0092                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009F                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     008C                     	;# 
   158     008E                     	;# 
   159     0092                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009F                     	;# 
   167                           
   168                           	psect	idataBANK0
   169     04D1                     __pidataBANK0:
   170                           
   171                           ;initializer for main@F652
   172     04D1  3406               	retlw	6
   173     04D2  3400               	retlw	0
   174     04D3  3400               	retlw	0
   175     04D4  3401               	retlw	1
   176     04D5  3404               	retlw	4
   177     04D6  3405               	retlw	5
   178     04D7  3406               	retlw	6
   179     04D8  3407               	retlw	7
   180     0006                     _PORTB	set	6
   181                           
   182                           	psect	strings
   183     0001                     __pstrings:
   184     0001                     stringtab:
   185     0001                     __stringtab:
   186     0001                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     0001                     stringdir:
   190     0001  3000               	movlw	high stringdir
   191     0002  008A               	movwf	10
   192     0003  0804               	movf	4,w
   193     0004  0A84               	incf	4,f
   194     0005  0782               	addwf	2,f
   195     0006                     __stringbase:
   196     0006  3400               	retlw	0
   197     0007                     __end_of__stringtab:
   198     0007                     STR_1:
   199     0007  3448               	retlw	72	;'H'
   200     0008  3465               	retlw	101	;'e'
   201     0009  346C               	retlw	108	;'l'
   202     000A  346C               	retlw	108	;'l'
   203     000B  346F               	retlw	111	;'o'
   204     000C  3400               	retlw	0
   205                           
   206                           	psect	cinit
   207     07EE                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07EE                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213     07EE  24D1               	fcall	__pidataBANK0	;fetch initializer
   214     07EF  00B0               	movwf	__pdataBANK0& (0+127)
   215     07F0  24D2               	fcall	__pidataBANK0+1	;fetch initializer
   216     07F1  00B1               	movwf	(__pdataBANK0+1)& (0+127)
   217     07F2  24D3               	fcall	__pidataBANK0+2	;fetch initializer
   218     07F3  00B2               	movwf	(__pdataBANK0+2)& (0+127)
   219     07F4  24D4               	fcall	__pidataBANK0+3	;fetch initializer
   220     07F5  00B3               	movwf	(__pdataBANK0+3)& (0+127)
   221     07F6  24D5               	fcall	__pidataBANK0+4	;fetch initializer
   222     07F7  00B4               	movwf	(__pdataBANK0+4)& (0+127)
   223     07F8  24D6               	fcall	__pidataBANK0+5	;fetch initializer
   224     07F9  00B5               	movwf	(__pdataBANK0+5)& (0+127)
   225     07FA  24D7               	fcall	__pidataBANK0+6	;fetch initializer
   226     07FB  00B6               	movwf	(__pdataBANK0+6)& (0+127)
   227     07FC  24D8               	fcall	__pidataBANK0+7	;fetch initializer
   228     07FD  00B7               	movwf	(__pdataBANK0+7)& (0+127)
   229     07FE                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232     07FE                     __end_of__initialization:
   233     07FE  0183               	clrf	3
   234     07FF  2D23               	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	dataBANK0
   237     0030                     __pdataBANK0:
   238     0030                     main@F652:
   239     0030                     	ds	8
   240                           
   241                           	psect	cstackCOMMON
   242     0070                     __pcstackCOMMON:
   243     0070                     ?_Lcd_Init:
   244     0070                     ?_Lcd_Clear:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_SetBit:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?_PulseEnable:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     SetBit@port:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 2 bytes @ 0x0
   261     0070                     	ds	2
   262     0072                     SetBit@pin:
   263                           
   264                           ; 1 bytes @ 0x2
   265     0072                     	ds	1
   266     0073                     SetBit@value:
   267                           
   268                           ; 1 bytes @ 0x3
   269     0073                     	ds	1
   270     0074                     ??_SetBit:
   271                           
   272                           ; 1 bytes @ 0x4
   273     0074                     	ds	1
   274     0075                     ??_PulseEnable:
   275                           
   276                           ; 1 bytes @ 0x5
   277     0075                     	ds	2
   278     0077                     PulseEnable@config:
   279                           
   280                           ; 1 bytes @ 0x7
   281     0077                     	ds	1
   282     0078                     ?_Lcd_Command:
   283     0078                     ?_Lcd_WriteChar:	
   284                           ; 1 bytes @ 0x8
   285                           
   286     0078                     Lcd_Command@cmd:	
   287                           ; 1 bytes @ 0x8
   288                           
   289     0078                     Lcd_WriteChar@data:	
   290                           ; 1 bytes @ 0x8
   291                           
   292                           
   293                           ; 1 bytes @ 0x8
   294     0078                     	ds	1
   295     0079                     ??_Lcd_Command:
   296     0079                     ??_Lcd_WriteChar:	
   297                           ; 1 bytes @ 0x9
   298                           
   299                           
   300                           ; 1 bytes @ 0x9
   301     0079                     	ds	2
   302     007B                     Lcd_Command@config:
   303     007B                     Lcd_WriteChar@config:	
   304                           ; 1 bytes @ 0xB
   305                           
   306                           
   307                           ; 1 bytes @ 0xB
   308     007B                     	ds	1
   309     007C                     ??_Lcd_Clear:
   310     007C                     ?_Lcd_SetCursor:	
   311                           ; 1 bytes @ 0xC
   312                           
   313     007C                     ?_Lcd_WriteString:	
   314                           ; 1 bytes @ 0xC
   315                           
   316     007C                     Lcd_WriteString@str:	
   317                           ; 1 bytes @ 0xC
   318                           
   319     007C                     Lcd_SetCursor@row:	
   320                           ; 1 bytes @ 0xC
   321                           
   322                           
   323                           ; 1 bytes @ 0xC
   324     007C                     	ds	1
   325     007D                     ??_Lcd_WriteString:
   326     007D                     Lcd_WriteString@config:	
   327                           ; 1 bytes @ 0xD
   328                           
   329     007D                     Lcd_SetCursor@column:	
   330                           ; 1 bytes @ 0xD
   331                           
   332                           
   333                           ; 1 bytes @ 0xD
   334     007D                     	ds	1
   335                           
   336                           	psect	cstackBANK0
   337     0020                     __pcstackBANK0:
   338     0020                     ??_Lcd_SetCursor:
   339     0020                     Lcd_Clear@config:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344     0020                     	ds	1
   345     0021                     ??_Lcd_Init:
   346                           
   347                           ; 1 bytes @ 0x1
   348     0021                     	ds	1
   349     0022                     Lcd_SetCursor@config:
   350                           
   351                           ; 1 bytes @ 0x2
   352     0022                     	ds	1
   353     0023                     Lcd_Init@config:
   354     0023                     Lcd_SetCursor@address:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359     0023                     	ds	1
   360     0024                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x4
   363     0024                     	ds	4
   364     0028                     main@lcdConfig_16F628A:
   365                           
   366                           ; 8 bytes @ 0x8
   367     0028                     	ds	8
   368                           
   369                           	psect	maintext
   370     0523                     __pmaintext:	
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 14 in file "LCDTST.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  lcdConfig_16    8    8[BANK0 ] struct .
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   390 ;;      Params:         0       0       0       0
   391 ;;      Locals:         0       8       0       0
   392 ;;      Temps:          0       4       0       0
   393 ;;      Totals:         0      12       0       0
   394 ;;Total ram usage:       12 bytes
   395 ;; Hardware stack levels required when called: 5
   396 ;; This function calls:
   397 ;;		_Lcd_Clear
   398 ;;		_Lcd_Init
   399 ;;		_Lcd_SetCursor
   400 ;;		_Lcd_WriteString
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406     0523                     _main:	
   407                           ;psect for function _main
   408                           
   409     0523                     l766:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   412                           
   413                           
   414                           ;LCDTST.c: 16:     while(1) {}
   415     0523  3028               	movlw	main@lcdConfig_16F628A& (0+255)
   416     0524  0084               	movwf	4
   417     0525  3030               	movlw	low main@F652
   418     0526  1283               	bcf	3,5	;RP0=0, select bank0
   419     0527  1303               	bcf	3,6	;RP1=0, select bank0
   420     0528  00A4               	movwf	??_main
   421     0529  0804               	movf	4,w
   422     052A  00A5               	movwf	??_main+1
   423     052B  3008               	movlw	8
   424     052C  00A6               	movwf	??_main+2
   425     052D                     u1020:
   426     052D  0824               	movf	??_main,w
   427     052E  0084               	movwf	4
   428     052F  1383               	bcf	3,7	;select IRP bank0
   429     0530  0800               	movf	0,w
   430     0531  00A7               	movwf	??_main+3
   431     0532  0AA4               	incf	??_main,f
   432     0533  0825               	movf	??_main+1,w
   433     0534  0084               	movwf	4
   434     0535  0827               	movf	??_main+3,w
   435     0536  0080               	movwf	0
   436     0537  0AA5               	incf	??_main+1,f
   437     0538  0BA6               	decfsz	??_main+2,f
   438     0539  2D2D               	goto	u1020
   439     053A                     l768:
   440     053A  3028               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   441     053B  25A2               	fcall	_Lcd_Init
   442     053C                     l770:
   443     053C  3028               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   444     053D  24D9               	fcall	_Lcd_Clear
   445     053E                     l772:
   446     053E  01FC               	clrf	Lcd_SetCursor@row
   447     053F  0AFC               	incf	Lcd_SetCursor@row,f
   448     0540  01FD               	clrf	Lcd_SetCursor@column
   449     0541  0AFD               	incf	Lcd_SetCursor@column,f
   450     0542  3028               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   451     0543  24FF               	fcall	_Lcd_SetCursor
   452     0544                     l774:
   453     0544  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   454     0545  00FC               	movwf	Lcd_WriteString@str
   455     0546  3028               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   456     0547  24EA               	fcall	_Lcd_WriteString
   457     0548                     l17:
   458     0548                     l18:
   459     0548  2D48               	goto	l17
   460     0549  2800               	ljmp	start
   461     054A                     __end_of_main:
   462                           
   463                           	psect	text1
   464     04EA                     __ptext1:	
   465 ;; *************** function _Lcd_WriteString *****************
   466 ;; Defined at:
   467 ;;		line 103 in file "pic16flcd.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;  config          1    wreg     PTR struct .
   470 ;;		 -> main@lcdConfig_16F628A(8), 
   471 ;;  str             1   12[COMMON] PTR unsigned char 
   472 ;;		 -> STR_1(6), 
   473 ;; Auto vars:     Size  Location     Type
   474 ;;  config          1   13[COMMON] PTR struct .
   475 ;;		 -> main@lcdConfig_16F628A(8), 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   485 ;;      Params:         1       0       0       0
   486 ;;      Locals:         1       0       0       0
   487 ;;      Temps:          0       0       0       0
   488 ;;      Totals:         2       0       0       0
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 3
   492 ;; This function calls:
   493 ;;		_Lcd_WriteChar
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     04EA                     _Lcd_WriteString:	
   500                           ;psect for function _Lcd_WriteString
   501                           
   502                           
   503                           ;incstack = 0
   504                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   505                           ;Lcd_WriteString@config stored from wreg
   506     04EA  00FD               	movwf	Lcd_WriteString@config
   507     04EB                     l758:
   508                           
   509                           ;pic16flcd.c: 104:     while(*str != '\0') {
   510     04EB  2CF6               	goto	l764
   511     04EC                     l760:
   512                           
   513                           ;pic16flcd.c: 105:         Lcd_WriteChar(config, (unsigned char)(*str));
   514     04EC  087C               	movf	Lcd_WriteString@str,w
   515     04ED  0084               	movwf	4
   516     04EE  2001               	fcall	stringdir
   517     04EF  00F8               	movwf	Lcd_WriteChar@data
   518     04F0  087D               	movf	Lcd_WriteString@config,w
   519     04F1  26EF               	fcall	_Lcd_WriteChar
   520     04F2                     l762:
   521                           
   522                           ;pic16flcd.c: 106:         str++;
   523     04F2  3001               	movlw	1
   524     04F3  00FF               	movwf	btemp+1
   525     04F4  087F               	movf	btemp+1,w
   526     04F5  07FC               	addwf	Lcd_WriteString@str,f
   527     04F6                     l764:
   528                           
   529                           ;pic16flcd.c: 104:     while(*str != '\0') {
   530     04F6  087C               	movf	Lcd_WriteString@str,w
   531     04F7  0084               	movwf	4
   532     04F8  2001               	fcall	stringdir
   533     04F9  3A00               	xorlw	0
   534     04FA  1D03               	skipz
   535     04FB  2CFD               	goto	u1011
   536     04FC  2CFE               	goto	u1010
   537     04FD                     u1011:
   538     04FD  2CEC               	goto	l760
   539     04FE                     u1010:
   540     04FE                     l44:
   541     04FE  0008               	return
   542     04FF                     __end_of_Lcd_WriteString:
   543                           
   544                           	psect	text2
   545     06EF                     __ptext2:	
   546 ;; *************** function _Lcd_WriteChar *****************
   547 ;; Defined at:
   548 ;;		line 78 in file "pic16flcd.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  config          1    wreg     PTR struct .
   551 ;;		 -> main@lcdConfig_16F628A(8), 
   552 ;;  data            1    8[COMMON] unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  config          1   11[COMMON] PTR struct .
   555 ;;		 -> main@lcdConfig_16F628A(8), 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   565 ;;      Params:         1       0       0       0
   566 ;;      Locals:         1       0       0       0
   567 ;;      Temps:          2       0       0       0
   568 ;;      Totals:         4       0       0       0
   569 ;;Total ram usage:        4 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 2
   572 ;; This function calls:
   573 ;;		_PulseEnable
   574 ;;		_SetBit
   575 ;; This function is called by:
   576 ;;		_Lcd_WriteString
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580     06EF                     _Lcd_WriteChar:	
   581                           ;psect for function _Lcd_WriteChar
   582                           
   583                           
   584                           ;incstack = 0
   585                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   586                           ;Lcd_WriteChar@config stored from wreg
   587     06EF  00FB               	movwf	Lcd_WriteChar@config
   588     06F0                     l716:
   589                           
   590                           ;pic16flcd.c: 80:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
   591     06F0  087B               	movf	Lcd_WriteChar@config,w
   592     06F1  0084               	movwf	4
   593     06F2  1383               	bcf	3,7	;select IRP bank0
   594     06F3  0800               	movf	0,w
   595     06F4  00F0               	movwf	SetBit@port
   596     06F5  0A84               	incf	4,f
   597     06F6  0800               	movf	0,w
   598     06F7  0384               	decf	4,f
   599     06F8  00F1               	movwf	SetBit@port+1
   600     06F9  087B               	movf	Lcd_WriteChar@config,w
   601     06FA  3E04               	addlw	4
   602     06FB  0084               	movwf	4
   603     06FC  0800               	movf	0,w
   604     06FD  00F2               	movwf	SetBit@pin
   605     06FE  0878               	movf	Lcd_WriteChar@data,w
   606     06FF  00FA               	movwf	??_Lcd_WriteChar+1
   607     0700  3004               	movlw	4
   608     0701                     u785:
   609     0701  1003               	clrc
   610     0702  0CFA               	rrf	??_Lcd_WriteChar+1,f
   611     0703  3EFF               	addlw	-1
   612     0704  1D03               	skipz
   613     0705  2F01               	goto	u785
   614     0706  187A               	btfsc	??_Lcd_WriteChar+1,0
   615     0707  2F09               	goto	u791
   616     0708  2F0B               	goto	u790
   617     0709                     u791:
   618     0709  3001               	movlw	1
   619     070A  2F0C               	goto	u800
   620     070B                     u790:
   621     070B  3000               	movlw	0
   622     070C                     u800:
   623     070C  00F3               	movwf	SetBit@value
   624     070D  254A               	fcall	_SetBit
   625                           
   626                           ;pic16flcd.c: 81:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
   627     070E  087B               	movf	Lcd_WriteChar@config,w
   628     070F  0084               	movwf	4
   629     0710  1383               	bcf	3,7	;select IRP bank0
   630     0711  0800               	movf	0,w
   631     0712  00F0               	movwf	SetBit@port
   632     0713  0A84               	incf	4,f
   633     0714  0800               	movf	0,w
   634     0715  0384               	decf	4,f
   635     0716  00F1               	movwf	SetBit@port+1
   636     0717  087B               	movf	Lcd_WriteChar@config,w
   637     0718  3E05               	addlw	5
   638     0719  0084               	movwf	4
   639     071A  0800               	movf	0,w
   640     071B  00F2               	movwf	SetBit@pin
   641     071C  0878               	movf	Lcd_WriteChar@data,w
   642     071D  00FA               	movwf	??_Lcd_WriteChar+1
   643     071E  3005               	movlw	5
   644     071F                     u815:
   645     071F  1003               	clrc
   646     0720  0CFA               	rrf	??_Lcd_WriteChar+1,f
   647     0721  3EFF               	addlw	-1
   648     0722  1D03               	skipz
   649     0723  2F1F               	goto	u815
   650     0724  187A               	btfsc	??_Lcd_WriteChar+1,0
   651     0725  2F27               	goto	u821
   652     0726  2F29               	goto	u820
   653     0727                     u821:
   654     0727  3001               	movlw	1
   655     0728  2F2A               	goto	u830
   656     0729                     u820:
   657     0729  3000               	movlw	0
   658     072A                     u830:
   659     072A  00F3               	movwf	SetBit@value
   660     072B  254A               	fcall	_SetBit
   661                           
   662                           ;pic16flcd.c: 82:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
   663     072C  087B               	movf	Lcd_WriteChar@config,w
   664     072D  0084               	movwf	4
   665     072E  1383               	bcf	3,7	;select IRP bank0
   666     072F  0800               	movf	0,w
   667     0730  00F0               	movwf	SetBit@port
   668     0731  0A84               	incf	4,f
   669     0732  0800               	movf	0,w
   670     0733  0384               	decf	4,f
   671     0734  00F1               	movwf	SetBit@port+1
   672     0735  087B               	movf	Lcd_WriteChar@config,w
   673     0736  3E06               	addlw	6
   674     0737  0084               	movwf	4
   675     0738  0800               	movf	0,w
   676     0739  00F2               	movwf	SetBit@pin
   677     073A  0878               	movf	Lcd_WriteChar@data,w
   678     073B  00FA               	movwf	??_Lcd_WriteChar+1
   679     073C  3006               	movlw	6
   680     073D                     u845:
   681     073D  1003               	clrc
   682     073E  0CFA               	rrf	??_Lcd_WriteChar+1,f
   683     073F  3EFF               	addlw	-1
   684     0740  1D03               	skipz
   685     0741  2F3D               	goto	u845
   686     0742  187A               	btfsc	??_Lcd_WriteChar+1,0
   687     0743  2F45               	goto	u851
   688     0744  2F47               	goto	u850
   689     0745                     u851:
   690     0745  3001               	movlw	1
   691     0746  2F48               	goto	u860
   692     0747                     u850:
   693     0747  3000               	movlw	0
   694     0748                     u860:
   695     0748  00F3               	movwf	SetBit@value
   696     0749  254A               	fcall	_SetBit
   697                           
   698                           ;pic16flcd.c: 83:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
   699     074A  087B               	movf	Lcd_WriteChar@config,w
   700     074B  0084               	movwf	4
   701     074C  1383               	bcf	3,7	;select IRP bank0
   702     074D  0800               	movf	0,w
   703     074E  00F0               	movwf	SetBit@port
   704     074F  0A84               	incf	4,f
   705     0750  0800               	movf	0,w
   706     0751  0384               	decf	4,f
   707     0752  00F1               	movwf	SetBit@port+1
   708     0753  087B               	movf	Lcd_WriteChar@config,w
   709     0754  3E07               	addlw	7
   710     0755  0084               	movwf	4
   711     0756  0800               	movf	0,w
   712     0757  00F2               	movwf	SetBit@pin
   713     0758  0878               	movf	Lcd_WriteChar@data,w
   714     0759  00FA               	movwf	??_Lcd_WriteChar+1
   715     075A  3007               	movlw	7
   716     075B                     u875:
   717     075B  1003               	clrc
   718     075C  0CFA               	rrf	??_Lcd_WriteChar+1,f
   719     075D  3EFF               	addlw	-1
   720     075E  1D03               	skipz
   721     075F  2F5B               	goto	u875
   722     0760  187A               	btfsc	??_Lcd_WriteChar+1,0
   723     0761  2F63               	goto	u881
   724     0762  2F65               	goto	u880
   725     0763                     u881:
   726     0763  3001               	movlw	1
   727     0764  2F66               	goto	u890
   728     0765                     u880:
   729     0765  3000               	movlw	0
   730     0766                     u890:
   731     0766  00F3               	movwf	SetBit@value
   732     0767  254A               	fcall	_SetBit
   733                           
   734                           ;pic16flcd.c: 85:     SetBit(config->port, config->rs_pin, 1);
   735     0768  087B               	movf	Lcd_WriteChar@config,w
   736     0769  0084               	movwf	4
   737     076A  1383               	bcf	3,7	;select IRP bank0
   738     076B  0800               	movf	0,w
   739     076C  00F0               	movwf	SetBit@port
   740     076D  0A84               	incf	4,f
   741     076E  0800               	movf	0,w
   742     076F  0384               	decf	4,f
   743     0770  00F1               	movwf	SetBit@port+1
   744     0771  087B               	movf	Lcd_WriteChar@config,w
   745     0772  3E02               	addlw	2
   746     0773  0084               	movwf	4
   747     0774  0800               	movf	0,w
   748     0775  00F2               	movwf	SetBit@pin
   749     0776  01F3               	clrf	SetBit@value
   750     0777  0AF3               	incf	SetBit@value,f
   751     0778  254A               	fcall	_SetBit
   752                           
   753                           ;pic16flcd.c: 86:     PulseEnable(config);
   754     0779  087B               	movf	Lcd_WriteChar@config,w
   755     077A  2576               	fcall	_PulseEnable
   756                           
   757                           ;pic16flcd.c: 89:     SetBit(config->port, config->d4_pin, data & 0x01);
   758     077B  087B               	movf	Lcd_WriteChar@config,w
   759     077C  0084               	movwf	4
   760     077D  1383               	bcf	3,7	;select IRP bank0
   761     077E  0800               	movf	0,w
   762     077F  00F0               	movwf	SetBit@port
   763     0780  0A84               	incf	4,f
   764     0781  0800               	movf	0,w
   765     0782  0384               	decf	4,f
   766     0783  00F1               	movwf	SetBit@port+1
   767     0784  087B               	movf	Lcd_WriteChar@config,w
   768     0785  3E04               	addlw	4
   769     0786  0084               	movwf	4
   770     0787  0800               	movf	0,w
   771     0788  00F2               	movwf	SetBit@pin
   772     0789  1878               	btfsc	Lcd_WriteChar@data,0
   773     078A  2F8C               	goto	u901
   774     078B  2F8E               	goto	u900
   775     078C                     u901:
   776     078C  3001               	movlw	1
   777     078D  2F8F               	goto	u910
   778     078E                     u900:
   779     078E  3000               	movlw	0
   780     078F                     u910:
   781     078F  00F3               	movwf	SetBit@value
   782     0790  254A               	fcall	_SetBit
   783                           
   784                           ;pic16flcd.c: 90:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
   785     0791  087B               	movf	Lcd_WriteChar@config,w
   786     0792  0084               	movwf	4
   787     0793  1383               	bcf	3,7	;select IRP bank0
   788     0794  0800               	movf	0,w
   789     0795  00F0               	movwf	SetBit@port
   790     0796  0A84               	incf	4,f
   791     0797  0800               	movf	0,w
   792     0798  0384               	decf	4,f
   793     0799  00F1               	movwf	SetBit@port+1
   794     079A  087B               	movf	Lcd_WriteChar@config,w
   795     079B  3E05               	addlw	5
   796     079C  0084               	movwf	4
   797     079D  0800               	movf	0,w
   798     079E  00F2               	movwf	SetBit@pin
   799     079F  0878               	movf	Lcd_WriteChar@data,w
   800     07A0  00FA               	movwf	??_Lcd_WriteChar+1
   801     07A1  3001               	movlw	1
   802     07A2                     u925:
   803     07A2  1003               	clrc
   804     07A3  0CFA               	rrf	??_Lcd_WriteChar+1,f
   805     07A4  3EFF               	addlw	-1
   806     07A5  1D03               	skipz
   807     07A6  2FA2               	goto	u925
   808     07A7  187A               	btfsc	??_Lcd_WriteChar+1,0
   809     07A8  2FAA               	goto	u931
   810     07A9  2FAC               	goto	u930
   811     07AA                     u931:
   812     07AA  3001               	movlw	1
   813     07AB  2FAD               	goto	u940
   814     07AC                     u930:
   815     07AC  3000               	movlw	0
   816     07AD                     u940:
   817     07AD  00F3               	movwf	SetBit@value
   818     07AE  254A               	fcall	_SetBit
   819                           
   820                           ;pic16flcd.c: 91:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
   821     07AF  087B               	movf	Lcd_WriteChar@config,w
   822     07B0  0084               	movwf	4
   823     07B1  1383               	bcf	3,7	;select IRP bank0
   824     07B2  0800               	movf	0,w
   825     07B3  00F0               	movwf	SetBit@port
   826     07B4  0A84               	incf	4,f
   827     07B5  0800               	movf	0,w
   828     07B6  0384               	decf	4,f
   829     07B7  00F1               	movwf	SetBit@port+1
   830     07B8  087B               	movf	Lcd_WriteChar@config,w
   831     07B9  3E06               	addlw	6
   832     07BA  0084               	movwf	4
   833     07BB  0800               	movf	0,w
   834     07BC  00F2               	movwf	SetBit@pin
   835     07BD  0878               	movf	Lcd_WriteChar@data,w
   836     07BE  00FA               	movwf	??_Lcd_WriteChar+1
   837     07BF  3002               	movlw	2
   838     07C0                     u955:
   839     07C0  1003               	clrc
   840     07C1  0CFA               	rrf	??_Lcd_WriteChar+1,f
   841     07C2  3EFF               	addlw	-1
   842     07C3  1D03               	skipz
   843     07C4  2FC0               	goto	u955
   844     07C5  187A               	btfsc	??_Lcd_WriteChar+1,0
   845     07C6  2FC8               	goto	u961
   846     07C7  2FCA               	goto	u960
   847     07C8                     u961:
   848     07C8  3001               	movlw	1
   849     07C9  2FCB               	goto	u970
   850     07CA                     u960:
   851     07CA  3000               	movlw	0
   852     07CB                     u970:
   853     07CB  00F3               	movwf	SetBit@value
   854     07CC  254A               	fcall	_SetBit
   855                           
   856                           ;pic16flcd.c: 92:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
   857     07CD  087B               	movf	Lcd_WriteChar@config,w
   858     07CE  0084               	movwf	4
   859     07CF  1383               	bcf	3,7	;select IRP bank0
   860     07D0  0800               	movf	0,w
   861     07D1  00F0               	movwf	SetBit@port
   862     07D2  0A84               	incf	4,f
   863     07D3  0800               	movf	0,w
   864     07D4  0384               	decf	4,f
   865     07D5  00F1               	movwf	SetBit@port+1
   866     07D6  087B               	movf	Lcd_WriteChar@config,w
   867     07D7  3E07               	addlw	7
   868     07D8  0084               	movwf	4
   869     07D9  0800               	movf	0,w
   870     07DA  00F2               	movwf	SetBit@pin
   871     07DB  0878               	movf	Lcd_WriteChar@data,w
   872     07DC  00FA               	movwf	??_Lcd_WriteChar+1
   873     07DD  3003               	movlw	3
   874     07DE                     u985:
   875     07DE  1003               	clrc
   876     07DF  0CFA               	rrf	??_Lcd_WriteChar+1,f
   877     07E0  3EFF               	addlw	-1
   878     07E1  1D03               	skipz
   879     07E2  2FDE               	goto	u985
   880     07E3  187A               	btfsc	??_Lcd_WriteChar+1,0
   881     07E4  2FE6               	goto	u991
   882     07E5  2FE8               	goto	u990
   883     07E6                     u991:
   884     07E6  3001               	movlw	1
   885     07E7  2FE9               	goto	u1000
   886     07E8                     u990:
   887     07E8  3000               	movlw	0
   888     07E9                     u1000:
   889     07E9  00F3               	movwf	SetBit@value
   890     07EA  254A               	fcall	_SetBit
   891                           
   892                           ;pic16flcd.c: 94:     PulseEnable(config);
   893     07EB  087B               	movf	Lcd_WriteChar@config,w
   894     07EC  2576               	fcall	_PulseEnable
   895     07ED                     l38:
   896     07ED  0008               	return
   897     07EE                     __end_of_Lcd_WriteChar:
   898                           
   899                           	psect	text3
   900     04FF                     __ptext3:	
   901 ;; *************** function _Lcd_SetCursor *****************
   902 ;; Defined at:
   903 ;;		line 148 in file "pic16flcd.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  config          1    wreg     PTR struct .
   906 ;;		 -> main@lcdConfig_16F628A(8), 
   907 ;;  row             1   12[COMMON] unsigned char 
   908 ;;  column          1   13[COMMON] unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  config          1    2[BANK0 ] PTR struct .
   911 ;;		 -> main@lcdConfig_16F628A(8), 
   912 ;;  address         1    3[BANK0 ] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   922 ;;      Params:         2       0       0       0
   923 ;;      Locals:         0       2       0       0
   924 ;;      Temps:          0       2       0       0
   925 ;;      Totals:         2       4       0       0
   926 ;;Total ram usage:        6 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 3
   929 ;; This function calls:
   930 ;;		_Lcd_Command
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936     04FF                     _Lcd_SetCursor:	
   937                           ;psect for function _Lcd_SetCursor
   938                           
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   942                           ;Lcd_SetCursor@config stored from wreg
   943     04FF  1283               	bcf	3,5	;RP0=0, select bank0
   944     0500  1303               	bcf	3,6	;RP1=0, select bank0
   945     0501  00A2               	movwf	Lcd_SetCursor@config
   946     0502                     l738:
   947                           
   948                           ;pic16flcd.c: 149:     unsigned char address;;pic16flcd.c: 152:     switch(row) {
   949     0502  2D09               	goto	l746
   950     0503                     l740:
   951                           
   952                           ;pic16flcd.c: 154:             address = 0x80;
   953     0503  3080               	movlw	128
   954     0504  00A3               	movwf	Lcd_SetCursor@address
   955                           
   956                           ;pic16flcd.c: 155:             break;
   957     0505  2D19               	goto	l748
   958     0506                     l742:
   959                           
   960                           ;pic16flcd.c: 157:             address = 0xC0;
   961     0506  30C0               	movlw	192
   962     0507  00A3               	movwf	Lcd_SetCursor@address
   963                           
   964                           ;pic16flcd.c: 158:             break;
   965     0508  2D19               	goto	l748
   966     0509                     l746:
   967     0509  087C               	movf	Lcd_SetCursor@row,w
   968     050A  00A0               	movwf	??_Lcd_SetCursor
   969     050B  01A1               	clrf	??_Lcd_SetCursor+1
   970                           
   971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 1, Range of values is 0 to 0
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            4     3 (average)
   977                           ; direct_byte            7     6 (fixed)
   978                           ; jumptable            260     6 (fixed)
   979                           ;	Chosen strategy is simple_byte
   980     050C  0821               	movf	??_Lcd_SetCursor+1,w
   981     050D  3A00               	xorlw	0	; case 0
   982     050E  1903               	skipnz
   983     050F  2D11               	goto	l806
   984     0510  2D03               	goto	l740
   985     0511                     l806:
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 2, Range of values is 1 to 2
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            7     4 (average)
   992                           ; direct_byte           11     9 (fixed)
   993                           ; jumptable            263     9 (fixed)
   994                           ;	Chosen strategy is simple_byte
   995     0511  0820               	movf	??_Lcd_SetCursor,w
   996     0512  3A01               	xorlw	1	; case 1
   997     0513  1903               	skipnz
   998     0514  2D03               	goto	l740
   999     0515  3A03               	xorlw	3	; case 2
  1000     0516  1903               	skipnz
  1001     0517  2D06               	goto	l742
  1002     0518  2D03               	goto	l740
  1003     0519                     l748:
  1004                           
  1005                           ;pic16flcd.c: 164:     address += (column - 1);
  1006     0519  087D               	movf	Lcd_SetCursor@column,w
  1007     051A  3EFF               	addlw	255
  1008     051B  00FF               	movwf	btemp+1
  1009     051C  087F               	movf	btemp+1,w
  1010     051D  07A3               	addwf	Lcd_SetCursor@address,f
  1011     051E                     l750:
  1012                           
  1013                           ;pic16flcd.c: 167:     Lcd_Command(config, address);
  1014     051E  0823               	movf	Lcd_SetCursor@address,w
  1015     051F  00F8               	movwf	Lcd_Command@cmd
  1016     0520  0822               	movf	Lcd_SetCursor@config,w
  1017     0521  25F1               	fcall	_Lcd_Command
  1018     0522                     l58:
  1019     0522  0008               	return
  1020     0523                     __end_of_Lcd_SetCursor:
  1021                           
  1022                           	psect	text4
  1023     05A2                     __ptext4:	
  1024 ;; *************** function _Lcd_Init *****************
  1025 ;; Defined at:
  1026 ;;		line 111 in file "pic16flcd.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  config          1    wreg     PTR struct .
  1029 ;;		 -> main@lcdConfig_16F628A(8), 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  config          1    3[BANK0 ] PTR struct .
  1032 ;;		 -> main@lcdConfig_16F628A(8), 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1042 ;;      Params:         0       0       0       0
  1043 ;;      Locals:         0       1       0       0
  1044 ;;      Temps:          0       2       0       0
  1045 ;;      Totals:         0       3       0       0
  1046 ;;Total ram usage:        3 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 4
  1049 ;; This function calls:
  1050 ;;		_Lcd_Clear
  1051 ;;		_Lcd_Command
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057     05A2                     _Lcd_Init:	
  1058                           ;psect for function _Lcd_Init
  1059                           
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1063                           ;Lcd_Init@config stored from wreg
  1064     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1065     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1066     05A4  00A3               	movwf	Lcd_Init@config
  1067     05A5                     l718:
  1068                           
  1069                           ;pic16flcd.c: 116:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1070     05A5  3014               	movlw	20
  1071     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1072     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1073     05A8  00A2               	movwf	??_Lcd_Init+1
  1074     05A9  3079               	movlw	121
  1075     05AA  00A1               	movwf	??_Lcd_Init
  1076     05AB                     u1037:
  1077     05AB  0BA1               	decfsz	??_Lcd_Init,f
  1078     05AC  2DAB               	goto	u1037
  1079     05AD  0BA2               	decfsz	??_Lcd_Init+1,f
  1080     05AE  2DAB               	goto	u1037
  1081     05AF  0000               	nop
  1082     05B0                     l720:
  1083                           
  1084                           ;pic16flcd.c: 117:     Lcd_Command(config, 0x03);
  1085     05B0  3003               	movlw	3
  1086     05B1  00F8               	movwf	Lcd_Command@cmd
  1087     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1088     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1089     05B4  0823               	movf	Lcd_Init@config,w
  1090     05B5  25F1               	fcall	_Lcd_Command
  1091     05B6                     l722:
  1092                           
  1093                           ;pic16flcd.c: 118:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1094     05B6  3007               	movlw	7
  1095     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1096     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1097     05B9  00A2               	movwf	??_Lcd_Init+1
  1098     05BA  307C               	movlw	124
  1099     05BB  00A1               	movwf	??_Lcd_Init
  1100     05BC                     u1047:
  1101     05BC  0BA1               	decfsz	??_Lcd_Init,f
  1102     05BD  2DBC               	goto	u1047
  1103     05BE  0BA2               	decfsz	??_Lcd_Init+1,f
  1104     05BF  2DBC               	goto	u1047
  1105     05C0  2DC1               	nop2
  1106                           
  1107                           ;pic16flcd.c: 119:     Lcd_Command(config, 0x03);
  1108     05C1  3003               	movlw	3
  1109     05C2  00F8               	movwf	Lcd_Command@cmd
  1110     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1111     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1112     05C5  0823               	movf	Lcd_Init@config,w
  1113     05C6  25F1               	fcall	_Lcd_Command
  1114     05C7                     l724:
  1115                           
  1116                           ;pic16flcd.c: 120:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1117     05C7  3020               	movlw	32
  1118     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1119     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1120     05CA  00A1               	movwf	??_Lcd_Init
  1121     05CB                     u1057:
  1122     05CB  0BA1               	decfsz	??_Lcd_Init,f
  1123     05CC  2DCB               	goto	u1057
  1124     05CD  2DCE               	nop2
  1125     05CE                     l726:
  1126                           
  1127                           ;pic16flcd.c: 121:     Lcd_Command(config, 0x03);
  1128     05CE  3003               	movlw	3
  1129     05CF  00F8               	movwf	Lcd_Command@cmd
  1130     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1131     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1132     05D2  0823               	movf	Lcd_Init@config,w
  1133     05D3  25F1               	fcall	_Lcd_Command
  1134     05D4                     l728:
  1135                           
  1136                           ;pic16flcd.c: 122:     Lcd_Command(config, 0x02);
  1137     05D4  3002               	movlw	2
  1138     05D5  00F8               	movwf	Lcd_Command@cmd
  1139     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1140     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1141     05D8  0823               	movf	Lcd_Init@config,w
  1142     05D9  25F1               	fcall	_Lcd_Command
  1143     05DA                     l730:
  1144                           
  1145                           ;pic16flcd.c: 124:     Lcd_Command(config, 0x28);
  1146     05DA  3028               	movlw	40
  1147     05DB  00F8               	movwf	Lcd_Command@cmd
  1148     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1149     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1150     05DE  0823               	movf	Lcd_Init@config,w
  1151     05DF  25F1               	fcall	_Lcd_Command
  1152     05E0                     l732:
  1153                           
  1154                           ;pic16flcd.c: 125:     Lcd_Command(config, 0x0C);
  1155     05E0  300C               	movlw	12
  1156     05E1  00F8               	movwf	Lcd_Command@cmd
  1157     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1158     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1159     05E4  0823               	movf	Lcd_Init@config,w
  1160     05E5  25F1               	fcall	_Lcd_Command
  1161     05E6                     l734:
  1162                           
  1163                           ;pic16flcd.c: 126:     Lcd_Command(config, 0x06);
  1164     05E6  3006               	movlw	6
  1165     05E7  00F8               	movwf	Lcd_Command@cmd
  1166     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1167     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1168     05EA  0823               	movf	Lcd_Init@config,w
  1169     05EB  25F1               	fcall	_Lcd_Command
  1170     05EC                     l736:
  1171                           
  1172                           ;pic16flcd.c: 127:     Lcd_Clear(config);
  1173     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1174     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1175     05EE  0823               	movf	Lcd_Init@config,w
  1176     05EF  24D9               	fcall	_Lcd_Clear
  1177     05F0                     l47:
  1178     05F0  0008               	return
  1179     05F1                     __end_of_Lcd_Init:
  1180                           
  1181                           	psect	text5
  1182     04D9                     __ptext5:	
  1183 ;; *************** function _Lcd_Clear *****************
  1184 ;; Defined at:
  1185 ;;		line 135 in file "pic16flcd.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  config          1    wreg     PTR struct .
  1188 ;;		 -> main@lcdConfig_16F628A(8), 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  config          1    0[BANK0 ] PTR struct .
  1191 ;;		 -> main@lcdConfig_16F628A(8), 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1201 ;;      Params:         0       0       0       0
  1202 ;;      Locals:         0       1       0       0
  1203 ;;      Temps:          2       0       0       0
  1204 ;;      Totals:         2       1       0       0
  1205 ;;Total ram usage:        3 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 3
  1208 ;; This function calls:
  1209 ;;		_Lcd_Command
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;;		_Lcd_Init
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216     04D9                     _Lcd_Clear:	
  1217                           ;psect for function _Lcd_Clear
  1218                           
  1219                           
  1220                           ;incstack = 0
  1221                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1222                           ;Lcd_Clear@config stored from wreg
  1223     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1224     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1225     04DB  00A0               	movwf	Lcd_Clear@config
  1226     04DC                     l712:
  1227                           
  1228                           ;pic16flcd.c: 136:     Lcd_Command(config, 0x01);
  1229     04DC  01F8               	clrf	Lcd_Command@cmd
  1230     04DD  0AF8               	incf	Lcd_Command@cmd,f
  1231     04DE  0820               	movf	Lcd_Clear@config,w
  1232     04DF  25F1               	fcall	_Lcd_Command
  1233     04E0                     l714:
  1234                           
  1235                           ;pic16flcd.c: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1236     04E0  3003               	movlw	3
  1237     04E1  00FD               	movwf	??_Lcd_Clear+1
  1238     04E2  3097               	movlw	151
  1239     04E3  00FC               	movwf	??_Lcd_Clear
  1240     04E4                     u1067:
  1241     04E4  0BFC               	decfsz	??_Lcd_Clear,f
  1242     04E5  2CE4               	goto	u1067
  1243     04E6  0BFD               	decfsz	??_Lcd_Clear+1,f
  1244     04E7  2CE4               	goto	u1067
  1245     04E8  2CE9               	nop2
  1246     04E9                     l50:
  1247     04E9  0008               	return
  1248     04EA                     __end_of_Lcd_Clear:
  1249                           
  1250                           	psect	text6
  1251     05F1                     __ptext6:	
  1252 ;; *************** function _Lcd_Command *****************
  1253 ;; Defined at:
  1254 ;;		line 52 in file "pic16flcd.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  config          1    wreg     PTR struct .
  1257 ;;		 -> main@lcdConfig_16F628A(8), 
  1258 ;;  cmd             1    8[COMMON] unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  config          1   11[COMMON] PTR struct .
  1261 ;;		 -> main@lcdConfig_16F628A(8), 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1271 ;;      Params:         1       0       0       0
  1272 ;;      Locals:         1       0       0       0
  1273 ;;      Temps:          2       0       0       0
  1274 ;;      Totals:         4       0       0       0
  1275 ;;Total ram usage:        4 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 2
  1278 ;; This function calls:
  1279 ;;		_PulseEnable
  1280 ;;		_SetBit
  1281 ;; This function is called by:
  1282 ;;		_Lcd_Init
  1283 ;;		_Lcd_Clear
  1284 ;;		_Lcd_SetCursor
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288     05F1                     _Lcd_Command:	
  1289                           ;psect for function _Lcd_Command
  1290                           
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1294                           ;Lcd_Command@config stored from wreg
  1295     05F1  00FB               	movwf	Lcd_Command@config
  1296     05F2                     l710:
  1297                           
  1298                           ;pic16flcd.c: 54:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1299     05F2  087B               	movf	Lcd_Command@config,w
  1300     05F3  0084               	movwf	4
  1301     05F4  1383               	bcf	3,7	;select IRP bank0
  1302     05F5  0800               	movf	0,w
  1303     05F6  00F0               	movwf	SetBit@port
  1304     05F7  0A84               	incf	4,f
  1305     05F8  0800               	movf	0,w
  1306     05F9  0384               	decf	4,f
  1307     05FA  00F1               	movwf	SetBit@port+1
  1308     05FB  087B               	movf	Lcd_Command@config,w
  1309     05FC  3E04               	addlw	4
  1310     05FD  0084               	movwf	4
  1311     05FE  0800               	movf	0,w
  1312     05FF  00F2               	movwf	SetBit@pin
  1313     0600  0878               	movf	Lcd_Command@cmd,w
  1314     0601  00FA               	movwf	??_Lcd_Command+1
  1315     0602  3004               	movlw	4
  1316     0603                     u555:
  1317     0603  1003               	clrc
  1318     0604  0CFA               	rrf	??_Lcd_Command+1,f
  1319     0605  3EFF               	addlw	-1
  1320     0606  1D03               	skipz
  1321     0607  2E03               	goto	u555
  1322     0608  187A               	btfsc	??_Lcd_Command+1,0
  1323     0609  2E0B               	goto	u561
  1324     060A  2E0D               	goto	u560
  1325     060B                     u561:
  1326     060B  3001               	movlw	1
  1327     060C  2E0E               	goto	u570
  1328     060D                     u560:
  1329     060D  3000               	movlw	0
  1330     060E                     u570:
  1331     060E  00F3               	movwf	SetBit@value
  1332     060F  254A               	fcall	_SetBit
  1333                           
  1334                           ;pic16flcd.c: 55:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1335     0610  087B               	movf	Lcd_Command@config,w
  1336     0611  0084               	movwf	4
  1337     0612  1383               	bcf	3,7	;select IRP bank0
  1338     0613  0800               	movf	0,w
  1339     0614  00F0               	movwf	SetBit@port
  1340     0615  0A84               	incf	4,f
  1341     0616  0800               	movf	0,w
  1342     0617  0384               	decf	4,f
  1343     0618  00F1               	movwf	SetBit@port+1
  1344     0619  087B               	movf	Lcd_Command@config,w
  1345     061A  3E05               	addlw	5
  1346     061B  0084               	movwf	4
  1347     061C  0800               	movf	0,w
  1348     061D  00F2               	movwf	SetBit@pin
  1349     061E  0878               	movf	Lcd_Command@cmd,w
  1350     061F  00FA               	movwf	??_Lcd_Command+1
  1351     0620  3005               	movlw	5
  1352     0621                     u585:
  1353     0621  1003               	clrc
  1354     0622  0CFA               	rrf	??_Lcd_Command+1,f
  1355     0623  3EFF               	addlw	-1
  1356     0624  1D03               	skipz
  1357     0625  2E21               	goto	u585
  1358     0626  187A               	btfsc	??_Lcd_Command+1,0
  1359     0627  2E29               	goto	u591
  1360     0628  2E2B               	goto	u590
  1361     0629                     u591:
  1362     0629  3001               	movlw	1
  1363     062A  2E2C               	goto	u600
  1364     062B                     u590:
  1365     062B  3000               	movlw	0
  1366     062C                     u600:
  1367     062C  00F3               	movwf	SetBit@value
  1368     062D  254A               	fcall	_SetBit
  1369                           
  1370                           ;pic16flcd.c: 56:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  1371     062E  087B               	movf	Lcd_Command@config,w
  1372     062F  0084               	movwf	4
  1373     0630  1383               	bcf	3,7	;select IRP bank0
  1374     0631  0800               	movf	0,w
  1375     0632  00F0               	movwf	SetBit@port
  1376     0633  0A84               	incf	4,f
  1377     0634  0800               	movf	0,w
  1378     0635  0384               	decf	4,f
  1379     0636  00F1               	movwf	SetBit@port+1
  1380     0637  087B               	movf	Lcd_Command@config,w
  1381     0638  3E06               	addlw	6
  1382     0639  0084               	movwf	4
  1383     063A  0800               	movf	0,w
  1384     063B  00F2               	movwf	SetBit@pin
  1385     063C  0878               	movf	Lcd_Command@cmd,w
  1386     063D  00FA               	movwf	??_Lcd_Command+1
  1387     063E  3006               	movlw	6
  1388     063F                     u615:
  1389     063F  1003               	clrc
  1390     0640  0CFA               	rrf	??_Lcd_Command+1,f
  1391     0641  3EFF               	addlw	-1
  1392     0642  1D03               	skipz
  1393     0643  2E3F               	goto	u615
  1394     0644  187A               	btfsc	??_Lcd_Command+1,0
  1395     0645  2E47               	goto	u621
  1396     0646  2E49               	goto	u620
  1397     0647                     u621:
  1398     0647  3001               	movlw	1
  1399     0648  2E4A               	goto	u630
  1400     0649                     u620:
  1401     0649  3000               	movlw	0
  1402     064A                     u630:
  1403     064A  00F3               	movwf	SetBit@value
  1404     064B  254A               	fcall	_SetBit
  1405                           
  1406                           ;pic16flcd.c: 57:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  1407     064C  087B               	movf	Lcd_Command@config,w
  1408     064D  0084               	movwf	4
  1409     064E  1383               	bcf	3,7	;select IRP bank0
  1410     064F  0800               	movf	0,w
  1411     0650  00F0               	movwf	SetBit@port
  1412     0651  0A84               	incf	4,f
  1413     0652  0800               	movf	0,w
  1414     0653  0384               	decf	4,f
  1415     0654  00F1               	movwf	SetBit@port+1
  1416     0655  087B               	movf	Lcd_Command@config,w
  1417     0656  3E07               	addlw	7
  1418     0657  0084               	movwf	4
  1419     0658  0800               	movf	0,w
  1420     0659  00F2               	movwf	SetBit@pin
  1421     065A  0878               	movf	Lcd_Command@cmd,w
  1422     065B  00FA               	movwf	??_Lcd_Command+1
  1423     065C  3007               	movlw	7
  1424     065D                     u645:
  1425     065D  1003               	clrc
  1426     065E  0CFA               	rrf	??_Lcd_Command+1,f
  1427     065F  3EFF               	addlw	-1
  1428     0660  1D03               	skipz
  1429     0661  2E5D               	goto	u645
  1430     0662  187A               	btfsc	??_Lcd_Command+1,0
  1431     0663  2E65               	goto	u651
  1432     0664  2E67               	goto	u650
  1433     0665                     u651:
  1434     0665  3001               	movlw	1
  1435     0666  2E68               	goto	u660
  1436     0667                     u650:
  1437     0667  3000               	movlw	0
  1438     0668                     u660:
  1439     0668  00F3               	movwf	SetBit@value
  1440     0669  254A               	fcall	_SetBit
  1441                           
  1442                           ;pic16flcd.c: 59:     SetBit(config->port, config->rs_pin, 0);
  1443     066A  087B               	movf	Lcd_Command@config,w
  1444     066B  0084               	movwf	4
  1445     066C  1383               	bcf	3,7	;select IRP bank0
  1446     066D  0800               	movf	0,w
  1447     066E  00F0               	movwf	SetBit@port
  1448     066F  0A84               	incf	4,f
  1449     0670  0800               	movf	0,w
  1450     0671  0384               	decf	4,f
  1451     0672  00F1               	movwf	SetBit@port+1
  1452     0673  087B               	movf	Lcd_Command@config,w
  1453     0674  3E02               	addlw	2
  1454     0675  0084               	movwf	4
  1455     0676  0800               	movf	0,w
  1456     0677  00F2               	movwf	SetBit@pin
  1457     0678  01F3               	clrf	SetBit@value
  1458     0679  254A               	fcall	_SetBit
  1459                           
  1460                           ;pic16flcd.c: 60:     PulseEnable(config);
  1461     067A  087B               	movf	Lcd_Command@config,w
  1462     067B  2576               	fcall	_PulseEnable
  1463                           
  1464                           ;pic16flcd.c: 63:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  1465     067C  087B               	movf	Lcd_Command@config,w
  1466     067D  0084               	movwf	4
  1467     067E  1383               	bcf	3,7	;select IRP bank0
  1468     067F  0800               	movf	0,w
  1469     0680  00F0               	movwf	SetBit@port
  1470     0681  0A84               	incf	4,f
  1471     0682  0800               	movf	0,w
  1472     0683  0384               	decf	4,f
  1473     0684  00F1               	movwf	SetBit@port+1
  1474     0685  087B               	movf	Lcd_Command@config,w
  1475     0686  3E04               	addlw	4
  1476     0687  0084               	movwf	4
  1477     0688  0800               	movf	0,w
  1478     0689  00F2               	movwf	SetBit@pin
  1479     068A  1878               	btfsc	Lcd_Command@cmd,0
  1480     068B  2E8D               	goto	u671
  1481     068C  2E8F               	goto	u670
  1482     068D                     u671:
  1483     068D  3001               	movlw	1
  1484     068E  2E90               	goto	u680
  1485     068F                     u670:
  1486     068F  3000               	movlw	0
  1487     0690                     u680:
  1488     0690  00F3               	movwf	SetBit@value
  1489     0691  254A               	fcall	_SetBit
  1490                           
  1491                           ;pic16flcd.c: 64:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  1492     0692  087B               	movf	Lcd_Command@config,w
  1493     0693  0084               	movwf	4
  1494     0694  1383               	bcf	3,7	;select IRP bank0
  1495     0695  0800               	movf	0,w
  1496     0696  00F0               	movwf	SetBit@port
  1497     0697  0A84               	incf	4,f
  1498     0698  0800               	movf	0,w
  1499     0699  0384               	decf	4,f
  1500     069A  00F1               	movwf	SetBit@port+1
  1501     069B  087B               	movf	Lcd_Command@config,w
  1502     069C  3E05               	addlw	5
  1503     069D  0084               	movwf	4
  1504     069E  0800               	movf	0,w
  1505     069F  00F2               	movwf	SetBit@pin
  1506     06A0  0878               	movf	Lcd_Command@cmd,w
  1507     06A1  00FA               	movwf	??_Lcd_Command+1
  1508     06A2  3001               	movlw	1
  1509     06A3                     u695:
  1510     06A3  1003               	clrc
  1511     06A4  0CFA               	rrf	??_Lcd_Command+1,f
  1512     06A5  3EFF               	addlw	-1
  1513     06A6  1D03               	skipz
  1514     06A7  2EA3               	goto	u695
  1515     06A8  187A               	btfsc	??_Lcd_Command+1,0
  1516     06A9  2EAB               	goto	u701
  1517     06AA  2EAD               	goto	u700
  1518     06AB                     u701:
  1519     06AB  3001               	movlw	1
  1520     06AC  2EAE               	goto	u710
  1521     06AD                     u700:
  1522     06AD  3000               	movlw	0
  1523     06AE                     u710:
  1524     06AE  00F3               	movwf	SetBit@value
  1525     06AF  254A               	fcall	_SetBit
  1526                           
  1527                           ;pic16flcd.c: 65:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  1528     06B0  087B               	movf	Lcd_Command@config,w
  1529     06B1  0084               	movwf	4
  1530     06B2  1383               	bcf	3,7	;select IRP bank0
  1531     06B3  0800               	movf	0,w
  1532     06B4  00F0               	movwf	SetBit@port
  1533     06B5  0A84               	incf	4,f
  1534     06B6  0800               	movf	0,w
  1535     06B7  0384               	decf	4,f
  1536     06B8  00F1               	movwf	SetBit@port+1
  1537     06B9  087B               	movf	Lcd_Command@config,w
  1538     06BA  3E06               	addlw	6
  1539     06BB  0084               	movwf	4
  1540     06BC  0800               	movf	0,w
  1541     06BD  00F2               	movwf	SetBit@pin
  1542     06BE  0878               	movf	Lcd_Command@cmd,w
  1543     06BF  00FA               	movwf	??_Lcd_Command+1
  1544     06C0  3002               	movlw	2
  1545     06C1                     u725:
  1546     06C1  1003               	clrc
  1547     06C2  0CFA               	rrf	??_Lcd_Command+1,f
  1548     06C3  3EFF               	addlw	-1
  1549     06C4  1D03               	skipz
  1550     06C5  2EC1               	goto	u725
  1551     06C6  187A               	btfsc	??_Lcd_Command+1,0
  1552     06C7  2EC9               	goto	u731
  1553     06C8  2ECB               	goto	u730
  1554     06C9                     u731:
  1555     06C9  3001               	movlw	1
  1556     06CA  2ECC               	goto	u740
  1557     06CB                     u730:
  1558     06CB  3000               	movlw	0
  1559     06CC                     u740:
  1560     06CC  00F3               	movwf	SetBit@value
  1561     06CD  254A               	fcall	_SetBit
  1562                           
  1563                           ;pic16flcd.c: 66:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  1564     06CE  087B               	movf	Lcd_Command@config,w
  1565     06CF  0084               	movwf	4
  1566     06D0  1383               	bcf	3,7	;select IRP bank0
  1567     06D1  0800               	movf	0,w
  1568     06D2  00F0               	movwf	SetBit@port
  1569     06D3  0A84               	incf	4,f
  1570     06D4  0800               	movf	0,w
  1571     06D5  0384               	decf	4,f
  1572     06D6  00F1               	movwf	SetBit@port+1
  1573     06D7  087B               	movf	Lcd_Command@config,w
  1574     06D8  3E07               	addlw	7
  1575     06D9  0084               	movwf	4
  1576     06DA  0800               	movf	0,w
  1577     06DB  00F2               	movwf	SetBit@pin
  1578     06DC  0878               	movf	Lcd_Command@cmd,w
  1579     06DD  00FA               	movwf	??_Lcd_Command+1
  1580     06DE  3003               	movlw	3
  1581     06DF                     u755:
  1582     06DF  1003               	clrc
  1583     06E0  0CFA               	rrf	??_Lcd_Command+1,f
  1584     06E1  3EFF               	addlw	-1
  1585     06E2  1D03               	skipz
  1586     06E3  2EDF               	goto	u755
  1587     06E4  187A               	btfsc	??_Lcd_Command+1,0
  1588     06E5  2EE7               	goto	u761
  1589     06E6  2EE9               	goto	u760
  1590     06E7                     u761:
  1591     06E7  3001               	movlw	1
  1592     06E8  2EEA               	goto	u770
  1593     06E9                     u760:
  1594     06E9  3000               	movlw	0
  1595     06EA                     u770:
  1596     06EA  00F3               	movwf	SetBit@value
  1597     06EB  254A               	fcall	_SetBit
  1598                           
  1599                           ;pic16flcd.c: 68:     PulseEnable(config);
  1600     06EC  087B               	movf	Lcd_Command@config,w
  1601     06ED  2576               	fcall	_PulseEnable
  1602     06EE                     l35:
  1603     06EE  0008               	return
  1604     06EF                     __end_of_Lcd_Command:
  1605                           
  1606                           	psect	text7
  1607     0576                     __ptext7:	
  1608 ;; *************** function _PulseEnable *****************
  1609 ;; Defined at:
  1610 ;;		line 38 in file "pic16flcd.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  config          1    wreg     PTR struct .
  1613 ;;		 -> main@lcdConfig_16F628A(8), 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  config          1    7[COMMON] PTR struct .
  1616 ;;		 -> main@lcdConfig_16F628A(8), 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1626 ;;      Params:         0       0       0       0
  1627 ;;      Locals:         1       0       0       0
  1628 ;;      Temps:          2       0       0       0
  1629 ;;      Totals:         3       0       0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 1
  1633 ;; This function calls:
  1634 ;;		_SetBit
  1635 ;; This function is called by:
  1636 ;;		_Lcd_Command
  1637 ;;		_Lcd_WriteChar
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641     0576                     _PulseEnable:	
  1642                           ;psect for function _PulseEnable
  1643                           
  1644                           
  1645                           ;incstack = 0
  1646                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1647                           ;PulseEnable@config stored from wreg
  1648     0576  00F7               	movwf	PulseEnable@config
  1649     0577                     l704:
  1650                           
  1651                           ;pic16flcd.c: 39:     SetBit(config->port, config->en_pin, 1);
  1652     0577  0877               	movf	PulseEnable@config,w
  1653     0578  0084               	movwf	4
  1654     0579  1383               	bcf	3,7	;select IRP bank0
  1655     057A  0800               	movf	0,w
  1656     057B  00F0               	movwf	SetBit@port
  1657     057C  0A84               	incf	4,f
  1658     057D  0800               	movf	0,w
  1659     057E  0384               	decf	4,f
  1660     057F  00F1               	movwf	SetBit@port+1
  1661     0580  0877               	movf	PulseEnable@config,w
  1662     0581  3E03               	addlw	3
  1663     0582  0084               	movwf	4
  1664     0583  0800               	movf	0,w
  1665     0584  00F2               	movwf	SetBit@pin
  1666     0585  01F3               	clrf	SetBit@value
  1667     0586  0AF3               	incf	SetBit@value,f
  1668     0587  254A               	fcall	_SetBit
  1669     0588                     l706:
  1670                           
  1671                           ;pic16flcd.c: 40:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1672     0588  3003               	movlw	3
  1673     0589  00F6               	movwf	??_PulseEnable+1
  1674     058A  3097               	movlw	151
  1675     058B  00F5               	movwf	??_PulseEnable
  1676     058C                     u1077:
  1677     058C  0BF5               	decfsz	??_PulseEnable,f
  1678     058D  2D8C               	goto	u1077
  1679     058E  0BF6               	decfsz	??_PulseEnable+1,f
  1680     058F  2D8C               	goto	u1077
  1681     0590  2D91               	nop2
  1682     0591                     l708:
  1683                           
  1684                           ;pic16flcd.c: 41:     SetBit(config->port, config->en_pin, 0);
  1685     0591  0877               	movf	PulseEnable@config,w
  1686     0592  0084               	movwf	4
  1687     0593  1383               	bcf	3,7	;select IRP bank0
  1688     0594  0800               	movf	0,w
  1689     0595  00F0               	movwf	SetBit@port
  1690     0596  0A84               	incf	4,f
  1691     0597  0800               	movf	0,w
  1692     0598  0384               	decf	4,f
  1693     0599  00F1               	movwf	SetBit@port+1
  1694     059A  0877               	movf	PulseEnable@config,w
  1695     059B  3E03               	addlw	3
  1696     059C  0084               	movwf	4
  1697     059D  0800               	movf	0,w
  1698     059E  00F2               	movwf	SetBit@pin
  1699     059F  01F3               	clrf	SetBit@value
  1700     05A0  254A               	fcall	_SetBit
  1701     05A1                     l32:
  1702     05A1  0008               	return
  1703     05A2                     __end_of_PulseEnable:
  1704                           
  1705                           	psect	text8
  1706     054A                     __ptext8:	
  1707 ;; *************** function _SetBit *****************
  1708 ;; Defined at:
  1709 ;;		line 24 in file "pic16flcd.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  1712 ;;		 -> PORTB(1), 
  1713 ;;  pin             1    2[COMMON] unsigned char 
  1714 ;;  value           1    3[COMMON] _Bool 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1726 ;;      Params:         4       0       0       0
  1727 ;;      Locals:         0       0       0       0
  1728 ;;      Temps:          1       0       0       0
  1729 ;;      Totals:         5       0       0       0
  1730 ;;Total ram usage:        5 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_PulseEnable
  1736 ;;		_Lcd_Command
  1737 ;;		_Lcd_WriteChar
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741     054A                     _SetBit:	
  1742                           ;psect for function _SetBit
  1743                           
  1744     054A                     l698:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0+btemp+1]
  1747                           
  1748                           
  1749                           ;pic16flcd.c: 25:     if (value) {
  1750     054A  0873               	movf	SetBit@value,w
  1751     054B  1903               	btfsc	3,2
  1752     054C  2D4E               	goto	u521
  1753     054D  2D4F               	goto	u520
  1754     054E                     u521:
  1755     054E  2D62               	goto	l702
  1756     054F                     u520:
  1757     054F                     l700:
  1758                           
  1759                           ;pic16flcd.c: 26:         *port |= (1 << pin);
  1760     054F  3001               	movlw	1
  1761     0550  00F4               	movwf	??_SetBit
  1762     0551  0A72               	incf	SetBit@pin,w
  1763     0552  2D55               	goto	u534
  1764     0553                     u535:
  1765     0553  1003               	clrc
  1766     0554  0DF4               	rlf	??_SetBit,f
  1767     0555                     u534:
  1768     0555  3EFF               	addlw	-1
  1769     0556  1D03               	skipz
  1770     0557  2D53               	goto	u535
  1771     0558  0874               	movf	??_SetBit,w
  1772     0559  00FF               	movwf	btemp+1
  1773     055A  0870               	movf	SetBit@port,w
  1774     055B  0084               	movwf	4
  1775     055C  1783               	bsf	3,7
  1776     055D  1C71               	btfss	SetBit@port+1,0
  1777     055E  1383               	bcf	3,7
  1778     055F  087F               	movf	btemp+1,w
  1779     0560  0480               	iorwf	0,f
  1780                           
  1781                           ;pic16flcd.c: 27:     } else {
  1782     0561  2D75               	goto	l29
  1783     0562                     l702:
  1784                           
  1785                           ;pic16flcd.c: 28:         *port &= ~(1 << pin);
  1786     0562  3001               	movlw	1
  1787     0563  00F4               	movwf	??_SetBit
  1788     0564  0A72               	incf	SetBit@pin,w
  1789     0565  2D68               	goto	u544
  1790     0566                     u545:
  1791     0566  1003               	clrc
  1792     0567  0DF4               	rlf	??_SetBit,f
  1793     0568                     u544:
  1794     0568  3EFF               	addlw	-1
  1795     0569  1D03               	skipz
  1796     056A  2D66               	goto	u545
  1797     056B  0874               	movf	??_SetBit,w
  1798     056C  3AFF               	xorlw	255
  1799     056D  00FF               	movwf	btemp+1
  1800     056E  0870               	movf	SetBit@port,w
  1801     056F  0084               	movwf	4
  1802     0570  1783               	bsf	3,7
  1803     0571  1C71               	btfss	SetBit@port+1,0
  1804     0572  1383               	bcf	3,7
  1805     0573  087F               	movf	btemp+1,w
  1806     0574  0580               	andwf	0,f
  1807     0575                     l29:
  1808     0575  0008               	return
  1809     0576                     __end_of_SetBit:
  1810     007E                     btemp	set	126	;btemp
  1811     007E                     wtemp0	set	126
  1812                           
  1813                           	psect	config
  1814                           
  1815                           ;Config register CONFIG @ 0x2007
  1816                           ;	Oscillator Selection bits
  1817                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1818                           ;	Watchdog Timer Enable bit
  1819                           ;	WDTE = OFF, WDT disabled
  1820                           ;	Power-up Timer Enable bit
  1821                           ;	PWRTE = OFF, PWRT disabled
  1822                           ;	RA5/MCLR/VPP Pin Function Select bit
  1823                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1824                           ;	Brown-out Detect Enable bit
  1825                           ;	BOREN = OFF, BOD disabled
  1826                           ;	Low-Voltage Programming Enable bit
  1827                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1828                           ;	Data EE Memory Code Protection bit
  1829                           ;	CPD = OFF, Data memory code protection off
  1830                           ;	Flash Program Memory Code Protection bit
  1831                           ;	CP = OFF, Code protection off
  1832     2007                     	org	8199
  1833     2007  3F38               	dw	16184

Data Sizes:
    Strings     6
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      24
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    F652$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    lcdConfig_16F628A$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_SetCursor
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_Init
    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   55880
                                              4 BANK0     12    12      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      2     1      1   10461
                                             12 COMMON     2     1      1
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10285
                                              8 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11434
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22611
                                              1 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11245
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11157
                                              8 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              5 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               5     1      4    4670
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteString
     _Lcd_WriteChar
       _PulseEnable
       _SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      18       3       30.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      10        0.0%
ABS                  0      0      26       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 12:21:17 2023

                      pc 0002                       l32 05A1                       l17 0548  
                     l50 04E9                       l18 0548                       l35 06EE  
                     l44 04FE                       l29 0575                       l38 07ED  
                     l47 05F0                       l58 0522           Lcd_Init@config 0023  
                     fsr 0004                      l700 054F                      l702 0562  
                    l710 05F2                      l704 0577                      l712 04DC  
                    l720 05B0                      l706 0588                      l714 04E0  
                    l730 05DA                      l722 05B6                      l708 0591  
                    l732 05E0                      l724 05C7                      l740 0503  
                    l716 06F0                      l734 05E6                      l726 05CE  
                    l718 05A5                      l750 051E                      l806 0511  
                    l742 0506                      l736 05EC                      l728 05D4  
                    l760 04EC                      l746 0509                      l738 0502  
                    l762 04F2                      l770 053C                      l748 0519  
                    l764 04F6                      l772 053E                      l758 04EB  
                    l774 0544                      l766 0523                      l768 053A  
                    l698 054A                      u520 054F                      u600 062C  
                    u521 054E                      u700 06AD                      u620 0649  
                    u701 06AB                      u621 0647                      u534 0555  
                    u710 06AE                      u630 064A                      u535 0553  
                    u615 063F                      u544 0568                      u560 060D  
                    u800 070C                      u545 0566                      u561 060B  
                    u730 06CB                      u650 0667                      u570 060E  
                    u731 06C9                      u651 0665                      u555 0603  
                    u740 06CC                      u660 0668                      u900 078E  
                    u820 0729                      u725 06C1                      u645 065D  
                    u901 078C                      u821 0727                      u670 068F  
                    u590 062B                      u910 078F                      u830 072A  
                    u671 068D                      u591 0629                      u815 071F  
                    u760 06E9                      u680 0690                      u761 06E7  
                    u585 0621                      u770 06EA                      u930 07AC  
                    u850 0747                      u755 06DF                      u931 07AA  
                    u851 0745                      u940 07AD                      u860 0748  
                    u925 07A2                      u845 073D                      u790 070B  
                    u695 06A3                      u791 0709                      u960 07CA  
                    u880 0765                      u961 07C8                      u881 0763  
                    u785 0701                      u970 07CB                      u890 0766  
                    u955 07C0                      u875 075B                      u990 07E8  
                    u991 07E6                      u985 07DE                      fsr0 0004  
       ?_Lcd_WriteString 007C                      indf 0000      __end_of_Lcd_Command 06EF  
                   STR_1 0007                     u1000 07E9                     u1010 04FE  
                   u1011 04FD                     u1020 052D                     u1037 05AB  
                   u1047 05BC                     u1057 05CB                     u1067 04E4  
                   u1077 058C       Lcd_WriteString@str 007C                     _main 0523  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006               SetBit@port 0070                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Init 05F1  
      PulseEnable@config 0077          __initialization 07EE             __end_of_main 054A  
            _Lcd_Command 05F1                   ??_main 0024    __end_of_Lcd_SetCursor 0523  
                 _SetBit 054A     Lcd_SetCursor@address 0023              SetBit@value 0073  
  __end_of_Lcd_WriteChar 07EE  __end_of__initialization 07FE            ??_PulseEnable 0075  
      __end_of_Lcd_Clear 04EA           __pcstackCOMMON 0070             __pidataBANK0 04D1  
              ?_Lcd_Init 0070                  ?_SetBit 0070               __pmaintext 0523  
    __end_of_PulseEnable 05A2               ??_Lcd_Init 0021    Lcd_WriteString@config 007D  
             __stringtab 0001        Lcd_WriteChar@data 0078             ?_Lcd_Command 0078  
                __ptext1 04EA                  __ptext2 06EF                  __ptext3 04FF  
                __ptext4 05A2                  __ptext5 04D9                  __ptext6 05F1  
                __ptext7 0576                  __ptext8 054A     end_of_initialization 07FE  
       Lcd_SetCursor@row 007C              _PulseEnable 0576        ??_Lcd_WriteString 007D  
              _Lcd_Clear 04D9           __end_of_SetBit 0576                SetBit@pin 0072  
    start_initialization 07EE                 ??_SetBit 0074               ?_Lcd_Clear 0070  
    Lcd_SetCursor@config 0022      Lcd_SetCursor@column 007D              __pdataBANK0 0030  
      Lcd_Command@config 007B      Lcd_WriteChar@config 007B                ___latbits 0000  
          __pcstackBANK0 0020            _Lcd_SetCursor 04FF                __pstrings 0001  
          _Lcd_WriteChar 06EF           ?_Lcd_SetCursor 007C             ?_PulseEnable 0070  
            ??_Lcd_Clear 007C          Lcd_Clear@config 0020              __stringbase 0006  
         ?_Lcd_WriteChar 0078                 _Lcd_Init 05A2          _Lcd_WriteString 04EA  
     __end_of__stringtab 0007          ??_Lcd_SetCursor 0020                 main@F652 0030  
        ??_Lcd_WriteChar 0079  __end_of_Lcd_WriteString 04FF                stringcode 0001  
  main@lcdConfig_16F628A 0028            ??_Lcd_Command 0079           Lcd_Command@cmd 0078  
               stringdir 0001                 stringtab 0001  
