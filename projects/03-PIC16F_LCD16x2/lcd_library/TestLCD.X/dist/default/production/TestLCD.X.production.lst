

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 11:29:44 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F628A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     008C                     	;# 
    84     008E                     	;# 
    85     0092                     	;# 
    86     0098                     	;# 
    87     0099                     	;# 
    88     009A                     	;# 
    89     009B                     	;# 
    90     009C                     	;# 
    91     009D                     	;# 
    92     009F                     	;# 
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001F                     	;# 
   117     0081                     	;# 
   118     0085                     	;# 
   119     0086                     	;# 
   120     008C                     	;# 
   121     008E                     	;# 
   122     0092                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009F                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     008C                     	;# 
   158     008E                     	;# 
   159     0092                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009F                     	;# 
   167                           
   168                           	psect	idataBANK0
   169     04CB                     __pidataBANK0:
   170                           
   171                           ;initializer for main@F652
   172     04CB  3406               	retlw	6
   173     04CC  3400               	retlw	0
   174     04CD  3400               	retlw	0
   175     04CE  3401               	retlw	1
   176     04CF  3404               	retlw	4
   177     04D0  3405               	retlw	5
   178     04D1  3406               	retlw	6
   179     04D2  3407               	retlw	7
   180     0006                     _PORTB	set	6
   181                           
   182                           	psect	strings
   183     0001                     __pstrings:
   184     0001                     stringtab:
   185     0001                     __stringtab:
   186     0001                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     0001                     stringdir:
   190     0001  3000               	movlw	high stringdir
   191     0002  008A               	movwf	10
   192     0003  0804               	movf	4,w
   193     0004  0A84               	incf	4,f
   194     0005  0782               	addwf	2,f
   195     0006                     __stringbase:
   196     0006  3400               	retlw	0
   197     0007                     __end_of__stringtab:
   198     0007                     STR_1:
   199     0007  3448               	retlw	72	;'H'
   200     0008  3465               	retlw	101	;'e'
   201     0009  346C               	retlw	108	;'l'
   202     000A  346C               	retlw	108	;'l'
   203     000B  346F               	retlw	111	;'o'
   204     000C  3400               	retlw	0
   205                           
   206                           	psect	cinit
   207     07EE                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07EE                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213     07EE  24CB               	fcall	__pidataBANK0	;fetch initializer
   214     07EF  00B2               	movwf	__pdataBANK0& (0+127)
   215     07F0  24CC               	fcall	__pidataBANK0+1	;fetch initializer
   216     07F1  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   217     07F2  24CD               	fcall	__pidataBANK0+2	;fetch initializer
   218     07F3  00B4               	movwf	(__pdataBANK0+2)& (0+127)
   219     07F4  24CE               	fcall	__pidataBANK0+3	;fetch initializer
   220     07F5  00B5               	movwf	(__pdataBANK0+3)& (0+127)
   221     07F6  24CF               	fcall	__pidataBANK0+4	;fetch initializer
   222     07F7  00B6               	movwf	(__pdataBANK0+4)& (0+127)
   223     07F8  24D0               	fcall	__pidataBANK0+5	;fetch initializer
   224     07F9  00B7               	movwf	(__pdataBANK0+5)& (0+127)
   225     07FA  24D1               	fcall	__pidataBANK0+6	;fetch initializer
   226     07FB  00B8               	movwf	(__pdataBANK0+6)& (0+127)
   227     07FC  24D2               	fcall	__pidataBANK0+7	;fetch initializer
   228     07FD  00B9               	movwf	(__pdataBANK0+7)& (0+127)
   229     07FE                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232     07FE                     __end_of__initialization:
   233     07FE  0183               	clrf	3
   234     07FF  2D21               	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	dataBANK0
   237     0032                     __pdataBANK0:
   238     0032                     main@F652:
   239     0032                     	ds	8
   240                           
   241                           	psect	cstackCOMMON
   242     0070                     __pcstackCOMMON:
   243     0070                     ?_Lcd_Init:
   244     0070                     ?_Lcd_Clear:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_SetBit:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?_PulseEnable:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     SetBit@port:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 2 bytes @ 0x0
   261     0070                     	ds	2
   262     0072                     SetBit@pin:
   263                           
   264                           ; 1 bytes @ 0x2
   265     0072                     	ds	1
   266     0073                     SetBit@value:
   267                           
   268                           ; 1 bytes @ 0x3
   269     0073                     	ds	1
   270     0074                     ??_SetBit:
   271                           
   272                           ; 1 bytes @ 0x4
   273     0074                     	ds	2
   274     0076                     ??_PulseEnable:
   275                           
   276                           ; 1 bytes @ 0x6
   277     0076                     	ds	2
   278     0078                     PulseEnable@config:
   279                           
   280                           ; 1 bytes @ 0x8
   281     0078                     	ds	1
   282     0079                     ?_Lcd_Command:
   283     0079                     ?_Lcd_WriteChar:	
   284                           ; 1 bytes @ 0x9
   285                           
   286     0079                     Lcd_Command@cmd:	
   287                           ; 1 bytes @ 0x9
   288                           
   289     0079                     Lcd_WriteChar@data:	
   290                           ; 1 bytes @ 0x9
   291                           
   292                           
   293                           ; 1 bytes @ 0x9
   294     0079                     	ds	1
   295     007A                     ??_Lcd_Command:
   296     007A                     ??_Lcd_WriteChar:	
   297                           ; 1 bytes @ 0xA
   298                           
   299                           
   300                           ; 1 bytes @ 0xA
   301     007A                     	ds	2
   302     007C                     Lcd_Command@config:
   303     007C                     Lcd_WriteChar@config:	
   304                           ; 1 bytes @ 0xC
   305                           
   306                           
   307                           ; 1 bytes @ 0xC
   308     007C                     	ds	1
   309     007D                     ?_Lcd_WriteString:
   310     007D                     Lcd_WriteString@str:	
   311                           ; 1 bytes @ 0xD
   312                           
   313     007D                     Lcd_Clear@config:	
   314                           ; 1 bytes @ 0xD
   315                           
   316                           
   317                           ; 1 bytes @ 0xD
   318     007D                     	ds	1
   319                           
   320                           	psect	cstackBANK0
   321     0020                     __pcstackBANK0:
   322     0020                     ??_Lcd_Clear:
   323     0020                     ?_Lcd_SetCursor:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0020                     ??_Lcd_WriteString:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0020                     Lcd_SetCursor@row:	
   330                           ; 1 bytes @ 0x0
   331                           
   332                           
   333                           ; 1 bytes @ 0x0
   334     0020                     	ds	1
   335     0021                     Lcd_WriteString@config:
   336     0021                     Lcd_SetCursor@column:	
   337                           ; 1 bytes @ 0x1
   338                           
   339                           
   340                           ; 1 bytes @ 0x1
   341     0021                     	ds	1
   342     0022                     ??_Lcd_Init:
   343     0022                     ??_Lcd_SetCursor:	
   344                           ; 1 bytes @ 0x2
   345                           
   346                           
   347                           ; 1 bytes @ 0x2
   348     0022                     	ds	2
   349     0024                     Lcd_Init@config:
   350     0024                     Lcd_SetCursor@config:	
   351                           ; 1 bytes @ 0x4
   352                           
   353                           
   354                           ; 1 bytes @ 0x4
   355     0024                     	ds	1
   356     0025                     Lcd_SetCursor@address:
   357                           
   358                           ; 1 bytes @ 0x5
   359     0025                     	ds	1
   360     0026                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x6
   363     0026                     	ds	4
   364     002A                     main@lcdConfig_16F628A:
   365                           
   366                           ; 8 bytes @ 0xA
   367     002A                     	ds	8
   368                           
   369                           	psect	maintext
   370     0521                     __pmaintext:	
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 14 in file "LCDTST.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  lcdConfig_16    8   10[BANK0 ] struct .
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   390 ;;      Params:         0       0       0       0
   391 ;;      Locals:         0       8       0       0
   392 ;;      Temps:          0       4       0       0
   393 ;;      Totals:         0      12       0       0
   394 ;;Total ram usage:       12 bytes
   395 ;; Hardware stack levels required when called: 5
   396 ;; This function calls:
   397 ;;		_Lcd_Clear
   398 ;;		_Lcd_Init
   399 ;;		_Lcd_SetCursor
   400 ;;		_Lcd_WriteString
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406     0521                     _main:	
   407                           ;psect for function _main
   408                           
   409     0521                     l766:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   412                           
   413                           
   414                           ;LCDTST.c: 16:     while(1) {}
   415     0521  302A               	movlw	main@lcdConfig_16F628A& (0+255)
   416     0522  0084               	movwf	4
   417     0523  3032               	movlw	low main@F652
   418     0524  1283               	bcf	3,5	;RP0=0, select bank0
   419     0525  1303               	bcf	3,6	;RP1=0, select bank0
   420     0526  00A6               	movwf	??_main
   421     0527  0804               	movf	4,w
   422     0528  00A7               	movwf	??_main+1
   423     0529  3008               	movlw	8
   424     052A  00A8               	movwf	??_main+2
   425     052B                     u1020:
   426     052B  0826               	movf	??_main,w
   427     052C  0084               	movwf	4
   428     052D  1383               	bcf	3,7	;select IRP bank0
   429     052E  0800               	movf	0,w
   430     052F  00A9               	movwf	??_main+3
   431     0530  0AA6               	incf	??_main,f
   432     0531  0827               	movf	??_main+1,w
   433     0532  0084               	movwf	4
   434     0533  0829               	movf	??_main+3,w
   435     0534  0080               	movwf	0
   436     0535  0AA7               	incf	??_main+1,f
   437     0536  0BA8               	decfsz	??_main+2,f
   438     0537  2D2B               	goto	u1020
   439     0538                     l768:
   440     0538  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   441     0539  25A2               	fcall	_Lcd_Init
   442     053A                     l770:
   443     053A  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   444     053B  24D3               	fcall	_Lcd_Clear
   445     053C                     l772:
   446     053C  1283               	bcf	3,5	;RP0=0, select bank0
   447     053D  1303               	bcf	3,6	;RP1=0, select bank0
   448     053E  01A0               	clrf	Lcd_SetCursor@row
   449     053F  0AA0               	incf	Lcd_SetCursor@row,f
   450     0540  01A1               	clrf	Lcd_SetCursor@column
   451     0541  0AA1               	incf	Lcd_SetCursor@column,f
   452     0542  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   453     0543  24FD               	fcall	_Lcd_SetCursor
   454     0544                     l774:
   455     0544  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   456     0545  00FD               	movwf	Lcd_WriteString@str
   457     0546  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   458     0547  24E4               	fcall	_Lcd_WriteString
   459     0548                     l17:
   460     0548                     l18:
   461     0548  2D48               	goto	l17
   462     0549  2800               	ljmp	start
   463     054A                     __end_of_main:
   464                           
   465                           	psect	text1
   466     04E4                     __ptext1:	
   467 ;; *************** function _Lcd_WriteString *****************
   468 ;; Defined at:
   469 ;;		line 112 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;  config          1    wreg     PTR struct .
   472 ;;		 -> main@lcdConfig_16F628A(8), 
   473 ;;  str             1   13[COMMON] PTR unsigned char 
   474 ;;		 -> STR_1(6), 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  config          1    1[BANK0 ] PTR struct .
   477 ;;		 -> main@lcdConfig_16F628A(8), 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   487 ;;      Params:         1       0       0       0
   488 ;;      Locals:         0       1       0       0
   489 ;;      Temps:          0       1       0       0
   490 ;;      Totals:         1       2       0       0
   491 ;;Total ram usage:        3 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 3
   494 ;; This function calls:
   495 ;;		_Lcd_WriteChar
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501     04E4                     _Lcd_WriteString:	
   502                           ;psect for function _Lcd_WriteString
   503                           
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   507                           ;Lcd_WriteString@config stored from wreg
   508     04E4  1283               	bcf	3,5	;RP0=0, select bank0
   509     04E5  1303               	bcf	3,6	;RP1=0, select bank0
   510     04E6  00A1               	movwf	Lcd_WriteString@config
   511     04E7                     l758:
   512                           
   513                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 113:     while(*str != '\0') {
   514     04E7  2CF4               	goto	l764
   515     04E8                     l760:
   516                           
   517                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 114:         Lcd_WriteChar(config, (unsigned char)(*str));
   518     04E8  087D               	movf	Lcd_WriteString@str,w
   519     04E9  0084               	movwf	4
   520     04EA  2001               	fcall	stringdir
   521     04EB  00F9               	movwf	Lcd_WriteChar@data
   522     04EC  0821               	movf	Lcd_WriteString@config,w
   523     04ED  26EF               	fcall	_Lcd_WriteChar
   524     04EE                     l762:
   525                           
   526                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 115:         str++;
   527     04EE  3001               	movlw	1
   528     04EF  1283               	bcf	3,5	;RP0=0, select bank0
   529     04F0  1303               	bcf	3,6	;RP1=0, select bank0
   530     04F1  00A0               	movwf	??_Lcd_WriteString
   531     04F2  0820               	movf	??_Lcd_WriteString,w
   532     04F3  07FD               	addwf	Lcd_WriteString@str,f
   533     04F4                     l764:
   534                           
   535                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 113:     while(*str != '\0') {
   536     04F4  087D               	movf	Lcd_WriteString@str,w
   537     04F5  0084               	movwf	4
   538     04F6  2001               	fcall	stringdir
   539     04F7  3A00               	xorlw	0
   540     04F8  1D03               	skipz
   541     04F9  2CFB               	goto	u1011
   542     04FA  2CFC               	goto	u1010
   543     04FB                     u1011:
   544     04FB  2CE8               	goto	l760
   545     04FC                     u1010:
   546     04FC                     l44:
   547     04FC  0008               	return
   548     04FD                     __end_of_Lcd_WriteString:
   549                           
   550                           	psect	text2
   551     06EF                     __ptext2:	
   552 ;; *************** function _Lcd_WriteChar *****************
   553 ;; Defined at:
   554 ;;		line 87 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  config          1    wreg     PTR struct .
   557 ;;		 -> main@lcdConfig_16F628A(8), 
   558 ;;  data            1    9[COMMON] unsigned char 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  config          1   12[COMMON] PTR struct .
   561 ;;		 -> main@lcdConfig_16F628A(8), 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   571 ;;      Params:         1       0       0       0
   572 ;;      Locals:         1       0       0       0
   573 ;;      Temps:          2       0       0       0
   574 ;;      Totals:         4       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 2
   578 ;; This function calls:
   579 ;;		_PulseEnable
   580 ;;		_SetBit
   581 ;; This function is called by:
   582 ;;		_Lcd_WriteString
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586     06EF                     _Lcd_WriteChar:	
   587                           ;psect for function _Lcd_WriteChar
   588                           
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   592                           ;Lcd_WriteChar@config stored from wreg
   593     06EF  00FC               	movwf	Lcd_WriteChar@config
   594     06F0                     l716:
   595                           
   596                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 89:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
   597     06F0  087C               	movf	Lcd_WriteChar@config,w
   598     06F1  0084               	movwf	4
   599     06F2  1383               	bcf	3,7	;select IRP bank0
   600     06F3  0800               	movf	0,w
   601     06F4  00F0               	movwf	SetBit@port
   602     06F5  0A84               	incf	4,f
   603     06F6  0800               	movf	0,w
   604     06F7  0384               	decf	4,f
   605     06F8  00F1               	movwf	SetBit@port+1
   606     06F9  087C               	movf	Lcd_WriteChar@config,w
   607     06FA  3E04               	addlw	4
   608     06FB  0084               	movwf	4
   609     06FC  0800               	movf	0,w
   610     06FD  00F2               	movwf	SetBit@pin
   611     06FE  0879               	movf	Lcd_WriteChar@data,w
   612     06FF  00FB               	movwf	??_Lcd_WriteChar+1
   613     0700  3004               	movlw	4
   614     0701                     u785:
   615     0701  1003               	clrc
   616     0702  0CFB               	rrf	??_Lcd_WriteChar+1,f
   617     0703  3EFF               	addlw	-1
   618     0704  1D03               	skipz
   619     0705  2F01               	goto	u785
   620     0706  187B               	btfsc	??_Lcd_WriteChar+1,0
   621     0707  2F09               	goto	u791
   622     0708  2F0B               	goto	u790
   623     0709                     u791:
   624     0709  3001               	movlw	1
   625     070A  2F0C               	goto	u800
   626     070B                     u790:
   627     070B  3000               	movlw	0
   628     070C                     u800:
   629     070C  00F3               	movwf	SetBit@value
   630     070D  254A               	fcall	_SetBit
   631                           
   632                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 90:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
   633     070E  087C               	movf	Lcd_WriteChar@config,w
   634     070F  0084               	movwf	4
   635     0710  1383               	bcf	3,7	;select IRP bank0
   636     0711  0800               	movf	0,w
   637     0712  00F0               	movwf	SetBit@port
   638     0713  0A84               	incf	4,f
   639     0714  0800               	movf	0,w
   640     0715  0384               	decf	4,f
   641     0716  00F1               	movwf	SetBit@port+1
   642     0717  087C               	movf	Lcd_WriteChar@config,w
   643     0718  3E05               	addlw	5
   644     0719  0084               	movwf	4
   645     071A  0800               	movf	0,w
   646     071B  00F2               	movwf	SetBit@pin
   647     071C  0879               	movf	Lcd_WriteChar@data,w
   648     071D  00FB               	movwf	??_Lcd_WriteChar+1
   649     071E  3005               	movlw	5
   650     071F                     u815:
   651     071F  1003               	clrc
   652     0720  0CFB               	rrf	??_Lcd_WriteChar+1,f
   653     0721  3EFF               	addlw	-1
   654     0722  1D03               	skipz
   655     0723  2F1F               	goto	u815
   656     0724  187B               	btfsc	??_Lcd_WriteChar+1,0
   657     0725  2F27               	goto	u821
   658     0726  2F29               	goto	u820
   659     0727                     u821:
   660     0727  3001               	movlw	1
   661     0728  2F2A               	goto	u830
   662     0729                     u820:
   663     0729  3000               	movlw	0
   664     072A                     u830:
   665     072A  00F3               	movwf	SetBit@value
   666     072B  254A               	fcall	_SetBit
   667                           
   668                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 91:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
   669     072C  087C               	movf	Lcd_WriteChar@config,w
   670     072D  0084               	movwf	4
   671     072E  1383               	bcf	3,7	;select IRP bank0
   672     072F  0800               	movf	0,w
   673     0730  00F0               	movwf	SetBit@port
   674     0731  0A84               	incf	4,f
   675     0732  0800               	movf	0,w
   676     0733  0384               	decf	4,f
   677     0734  00F1               	movwf	SetBit@port+1
   678     0735  087C               	movf	Lcd_WriteChar@config,w
   679     0736  3E06               	addlw	6
   680     0737  0084               	movwf	4
   681     0738  0800               	movf	0,w
   682     0739  00F2               	movwf	SetBit@pin
   683     073A  0879               	movf	Lcd_WriteChar@data,w
   684     073B  00FB               	movwf	??_Lcd_WriteChar+1
   685     073C  3006               	movlw	6
   686     073D                     u845:
   687     073D  1003               	clrc
   688     073E  0CFB               	rrf	??_Lcd_WriteChar+1,f
   689     073F  3EFF               	addlw	-1
   690     0740  1D03               	skipz
   691     0741  2F3D               	goto	u845
   692     0742  187B               	btfsc	??_Lcd_WriteChar+1,0
   693     0743  2F45               	goto	u851
   694     0744  2F47               	goto	u850
   695     0745                     u851:
   696     0745  3001               	movlw	1
   697     0746  2F48               	goto	u860
   698     0747                     u850:
   699     0747  3000               	movlw	0
   700     0748                     u860:
   701     0748  00F3               	movwf	SetBit@value
   702     0749  254A               	fcall	_SetBit
   703                           
   704                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 92:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
   705     074A  087C               	movf	Lcd_WriteChar@config,w
   706     074B  0084               	movwf	4
   707     074C  1383               	bcf	3,7	;select IRP bank0
   708     074D  0800               	movf	0,w
   709     074E  00F0               	movwf	SetBit@port
   710     074F  0A84               	incf	4,f
   711     0750  0800               	movf	0,w
   712     0751  0384               	decf	4,f
   713     0752  00F1               	movwf	SetBit@port+1
   714     0753  087C               	movf	Lcd_WriteChar@config,w
   715     0754  3E07               	addlw	7
   716     0755  0084               	movwf	4
   717     0756  0800               	movf	0,w
   718     0757  00F2               	movwf	SetBit@pin
   719     0758  0879               	movf	Lcd_WriteChar@data,w
   720     0759  00FB               	movwf	??_Lcd_WriteChar+1
   721     075A  3007               	movlw	7
   722     075B                     u875:
   723     075B  1003               	clrc
   724     075C  0CFB               	rrf	??_Lcd_WriteChar+1,f
   725     075D  3EFF               	addlw	-1
   726     075E  1D03               	skipz
   727     075F  2F5B               	goto	u875
   728     0760  187B               	btfsc	??_Lcd_WriteChar+1,0
   729     0761  2F63               	goto	u881
   730     0762  2F65               	goto	u880
   731     0763                     u881:
   732     0763  3001               	movlw	1
   733     0764  2F66               	goto	u890
   734     0765                     u880:
   735     0765  3000               	movlw	0
   736     0766                     u890:
   737     0766  00F3               	movwf	SetBit@value
   738     0767  254A               	fcall	_SetBit
   739                           
   740                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 94:     SetBit(config->port, config->rs_pin, 1);
   741     0768  087C               	movf	Lcd_WriteChar@config,w
   742     0769  0084               	movwf	4
   743     076A  1383               	bcf	3,7	;select IRP bank0
   744     076B  0800               	movf	0,w
   745     076C  00F0               	movwf	SetBit@port
   746     076D  0A84               	incf	4,f
   747     076E  0800               	movf	0,w
   748     076F  0384               	decf	4,f
   749     0770  00F1               	movwf	SetBit@port+1
   750     0771  087C               	movf	Lcd_WriteChar@config,w
   751     0772  3E02               	addlw	2
   752     0773  0084               	movwf	4
   753     0774  0800               	movf	0,w
   754     0775  00F2               	movwf	SetBit@pin
   755     0776  01F3               	clrf	SetBit@value
   756     0777  0AF3               	incf	SetBit@value,f
   757     0778  254A               	fcall	_SetBit
   758                           
   759                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 95:     PulseEnable(config);
   760     0779  087C               	movf	Lcd_WriteChar@config,w
   761     077A  2576               	fcall	_PulseEnable
   762                           
   763                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 98:     SetBit(config->port, config->d4_pin, data & 0x01);
   764     077B  087C               	movf	Lcd_WriteChar@config,w
   765     077C  0084               	movwf	4
   766     077D  1383               	bcf	3,7	;select IRP bank0
   767     077E  0800               	movf	0,w
   768     077F  00F0               	movwf	SetBit@port
   769     0780  0A84               	incf	4,f
   770     0781  0800               	movf	0,w
   771     0782  0384               	decf	4,f
   772     0783  00F1               	movwf	SetBit@port+1
   773     0784  087C               	movf	Lcd_WriteChar@config,w
   774     0785  3E04               	addlw	4
   775     0786  0084               	movwf	4
   776     0787  0800               	movf	0,w
   777     0788  00F2               	movwf	SetBit@pin
   778     0789  1879               	btfsc	Lcd_WriteChar@data,0
   779     078A  2F8C               	goto	u901
   780     078B  2F8E               	goto	u900
   781     078C                     u901:
   782     078C  3001               	movlw	1
   783     078D  2F8F               	goto	u910
   784     078E                     u900:
   785     078E  3000               	movlw	0
   786     078F                     u910:
   787     078F  00F3               	movwf	SetBit@value
   788     0790  254A               	fcall	_SetBit
   789                           
   790                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 99:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
   791     0791  087C               	movf	Lcd_WriteChar@config,w
   792     0792  0084               	movwf	4
   793     0793  1383               	bcf	3,7	;select IRP bank0
   794     0794  0800               	movf	0,w
   795     0795  00F0               	movwf	SetBit@port
   796     0796  0A84               	incf	4,f
   797     0797  0800               	movf	0,w
   798     0798  0384               	decf	4,f
   799     0799  00F1               	movwf	SetBit@port+1
   800     079A  087C               	movf	Lcd_WriteChar@config,w
   801     079B  3E05               	addlw	5
   802     079C  0084               	movwf	4
   803     079D  0800               	movf	0,w
   804     079E  00F2               	movwf	SetBit@pin
   805     079F  0879               	movf	Lcd_WriteChar@data,w
   806     07A0  00FB               	movwf	??_Lcd_WriteChar+1
   807     07A1  3001               	movlw	1
   808     07A2                     u925:
   809     07A2  1003               	clrc
   810     07A3  0CFB               	rrf	??_Lcd_WriteChar+1,f
   811     07A4  3EFF               	addlw	-1
   812     07A5  1D03               	skipz
   813     07A6  2FA2               	goto	u925
   814     07A7  187B               	btfsc	??_Lcd_WriteChar+1,0
   815     07A8  2FAA               	goto	u931
   816     07A9  2FAC               	goto	u930
   817     07AA                     u931:
   818     07AA  3001               	movlw	1
   819     07AB  2FAD               	goto	u940
   820     07AC                     u930:
   821     07AC  3000               	movlw	0
   822     07AD                     u940:
   823     07AD  00F3               	movwf	SetBit@value
   824     07AE  254A               	fcall	_SetBit
   825                           
   826                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 100:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
   827     07AF  087C               	movf	Lcd_WriteChar@config,w
   828     07B0  0084               	movwf	4
   829     07B1  1383               	bcf	3,7	;select IRP bank0
   830     07B2  0800               	movf	0,w
   831     07B3  00F0               	movwf	SetBit@port
   832     07B4  0A84               	incf	4,f
   833     07B5  0800               	movf	0,w
   834     07B6  0384               	decf	4,f
   835     07B7  00F1               	movwf	SetBit@port+1
   836     07B8  087C               	movf	Lcd_WriteChar@config,w
   837     07B9  3E06               	addlw	6
   838     07BA  0084               	movwf	4
   839     07BB  0800               	movf	0,w
   840     07BC  00F2               	movwf	SetBit@pin
   841     07BD  0879               	movf	Lcd_WriteChar@data,w
   842     07BE  00FB               	movwf	??_Lcd_WriteChar+1
   843     07BF  3002               	movlw	2
   844     07C0                     u955:
   845     07C0  1003               	clrc
   846     07C1  0CFB               	rrf	??_Lcd_WriteChar+1,f
   847     07C2  3EFF               	addlw	-1
   848     07C3  1D03               	skipz
   849     07C4  2FC0               	goto	u955
   850     07C5  187B               	btfsc	??_Lcd_WriteChar+1,0
   851     07C6  2FC8               	goto	u961
   852     07C7  2FCA               	goto	u960
   853     07C8                     u961:
   854     07C8  3001               	movlw	1
   855     07C9  2FCB               	goto	u970
   856     07CA                     u960:
   857     07CA  3000               	movlw	0
   858     07CB                     u970:
   859     07CB  00F3               	movwf	SetBit@value
   860     07CC  254A               	fcall	_SetBit
   861                           
   862                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 101:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
   863     07CD  087C               	movf	Lcd_WriteChar@config,w
   864     07CE  0084               	movwf	4
   865     07CF  1383               	bcf	3,7	;select IRP bank0
   866     07D0  0800               	movf	0,w
   867     07D1  00F0               	movwf	SetBit@port
   868     07D2  0A84               	incf	4,f
   869     07D3  0800               	movf	0,w
   870     07D4  0384               	decf	4,f
   871     07D5  00F1               	movwf	SetBit@port+1
   872     07D6  087C               	movf	Lcd_WriteChar@config,w
   873     07D7  3E07               	addlw	7
   874     07D8  0084               	movwf	4
   875     07D9  0800               	movf	0,w
   876     07DA  00F2               	movwf	SetBit@pin
   877     07DB  0879               	movf	Lcd_WriteChar@data,w
   878     07DC  00FB               	movwf	??_Lcd_WriteChar+1
   879     07DD  3003               	movlw	3
   880     07DE                     u985:
   881     07DE  1003               	clrc
   882     07DF  0CFB               	rrf	??_Lcd_WriteChar+1,f
   883     07E0  3EFF               	addlw	-1
   884     07E1  1D03               	skipz
   885     07E2  2FDE               	goto	u985
   886     07E3  187B               	btfsc	??_Lcd_WriteChar+1,0
   887     07E4  2FE6               	goto	u991
   888     07E5  2FE8               	goto	u990
   889     07E6                     u991:
   890     07E6  3001               	movlw	1
   891     07E7  2FE9               	goto	u1000
   892     07E8                     u990:
   893     07E8  3000               	movlw	0
   894     07E9                     u1000:
   895     07E9  00F3               	movwf	SetBit@value
   896     07EA  254A               	fcall	_SetBit
   897                           
   898                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 103:     PulseEnable(config);
   899     07EB  087C               	movf	Lcd_WriteChar@config,w
   900     07EC  2576               	fcall	_PulseEnable
   901     07ED                     l38:
   902     07ED  0008               	return
   903     07EE                     __end_of_Lcd_WriteChar:
   904                           
   905                           	psect	text3
   906     04FD                     __ptext3:	
   907 ;; *************** function _Lcd_SetCursor *****************
   908 ;; Defined at:
   909 ;;		line 160 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  config          1    wreg     PTR struct .
   912 ;;		 -> main@lcdConfig_16F628A(8), 
   913 ;;  row             1    0[BANK0 ] unsigned char 
   914 ;;  column          1    1[BANK0 ] unsigned char 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  config          1    4[BANK0 ] PTR struct .
   917 ;;		 -> main@lcdConfig_16F628A(8), 
   918 ;;  address         1    5[BANK0 ] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   928 ;;      Params:         0       2       0       0
   929 ;;      Locals:         0       2       0       0
   930 ;;      Temps:          0       2       0       0
   931 ;;      Totals:         0       6       0       0
   932 ;;Total ram usage:        6 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 3
   935 ;; This function calls:
   936 ;;		_Lcd_Command
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942     04FD                     _Lcd_SetCursor:	
   943                           ;psect for function _Lcd_SetCursor
   944                           
   945                           
   946                           ;incstack = 0
   947                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   948                           ;Lcd_SetCursor@config stored from wreg
   949     04FD  1283               	bcf	3,5	;RP0=0, select bank0
   950     04FE  1303               	bcf	3,6	;RP1=0, select bank0
   951     04FF  00A4               	movwf	Lcd_SetCursor@config
   952     0500                     l738:
   953                           
   954                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 161:     unsigned char address;;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F
      +                          /projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c: 164:     switch(row) {
   955     0500  2D07               	goto	l746
   956     0501                     l740:
   957                           
   958                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 166:             address = 0x80;
   959     0501  3080               	movlw	128
   960     0502  00A5               	movwf	Lcd_SetCursor@address
   961                           
   962                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 167:             break;
   963     0503  2D17               	goto	l748
   964     0504                     l742:
   965                           
   966                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 169:             address = 0xC0;
   967     0504  30C0               	movlw	192
   968     0505  00A5               	movwf	Lcd_SetCursor@address
   969                           
   970                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 170:             break;
   971     0506  2D17               	goto	l748
   972     0507                     l746:
   973     0507  0820               	movf	Lcd_SetCursor@row,w
   974     0508  00A2               	movwf	??_Lcd_SetCursor
   975     0509  01A3               	clrf	??_Lcd_SetCursor+1
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ; direct_byte            7     6 (fixed)
   984                           ; jumptable            260     6 (fixed)
   985                           ;	Chosen strategy is simple_byte
   986     050A  0823               	movf	??_Lcd_SetCursor+1,w
   987     050B  3A00               	xorlw	0	; case 0
   988     050C  1903               	skipnz
   989     050D  2D0F               	goto	l806
   990     050E  2D01               	goto	l740
   991     050F                     l806:
   992                           
   993                           ; Switch size 1, requested type "simple"
   994                           ; Number of cases is 2, Range of values is 1 to 2
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte            7     4 (average)
   998                           ; direct_byte           11     9 (fixed)
   999                           ; jumptable            263     9 (fixed)
  1000                           ;	Chosen strategy is simple_byte
  1001     050F  0822               	movf	??_Lcd_SetCursor,w
  1002     0510  3A01               	xorlw	1	; case 1
  1003     0511  1903               	skipnz
  1004     0512  2D01               	goto	l740
  1005     0513  3A03               	xorlw	3	; case 2
  1006     0514  1903               	skipnz
  1007     0515  2D04               	goto	l742
  1008     0516  2D01               	goto	l740
  1009     0517                     l748:
  1010                           
  1011                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 176:     address += (column - 1);
  1012     0517  0821               	movf	Lcd_SetCursor@column,w
  1013     0518  3EFF               	addlw	255
  1014     0519  00A2               	movwf	??_Lcd_SetCursor
  1015     051A  0822               	movf	??_Lcd_SetCursor,w
  1016     051B  07A5               	addwf	Lcd_SetCursor@address,f
  1017     051C                     l750:
  1018                           
  1019                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 179:     Lcd_Command(config, address);
  1020     051C  0825               	movf	Lcd_SetCursor@address,w
  1021     051D  00F9               	movwf	Lcd_Command@cmd
  1022     051E  0824               	movf	Lcd_SetCursor@config,w
  1023     051F  25F1               	fcall	_Lcd_Command
  1024     0520                     l58:
  1025     0520  0008               	return
  1026     0521                     __end_of_Lcd_SetCursor:
  1027                           
  1028                           	psect	text4
  1029     05A2                     __ptext4:	
  1030 ;; *************** function _Lcd_Init *****************
  1031 ;; Defined at:
  1032 ;;		line 123 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  config          1    wreg     PTR struct .
  1035 ;;		 -> main@lcdConfig_16F628A(8), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  config          1    4[BANK0 ] PTR struct .
  1038 ;;		 -> main@lcdConfig_16F628A(8), 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1048 ;;      Params:         0       0       0       0
  1049 ;;      Locals:         0       1       0       0
  1050 ;;      Temps:          0       2       0       0
  1051 ;;      Totals:         0       3       0       0
  1052 ;;Total ram usage:        3 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; Hardware stack levels required when called: 4
  1055 ;; This function calls:
  1056 ;;		_Lcd_Clear
  1057 ;;		_Lcd_Command
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063     05A2                     _Lcd_Init:	
  1064                           ;psect for function _Lcd_Init
  1065                           
  1066                           
  1067                           ;incstack = 0
  1068                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1069                           ;Lcd_Init@config stored from wreg
  1070     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1071     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1072     05A4  00A4               	movwf	Lcd_Init@config
  1073     05A5                     l718:
  1074                           
  1075                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 128:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1076     05A5  3014               	movlw	20
  1077     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1078     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1079     05A8  00A3               	movwf	??_Lcd_Init+1
  1080     05A9  3079               	movlw	121
  1081     05AA  00A2               	movwf	??_Lcd_Init
  1082     05AB                     u1037:
  1083     05AB  0BA2               	decfsz	??_Lcd_Init,f
  1084     05AC  2DAB               	goto	u1037
  1085     05AD  0BA3               	decfsz	??_Lcd_Init+1,f
  1086     05AE  2DAB               	goto	u1037
  1087     05AF  0000               	nop
  1088     05B0                     l720:
  1089                           
  1090                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 129:     Lcd_Command(config, 0x03);
  1091     05B0  3003               	movlw	3
  1092     05B1  00F9               	movwf	Lcd_Command@cmd
  1093     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1094     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1095     05B4  0824               	movf	Lcd_Init@config,w
  1096     05B5  25F1               	fcall	_Lcd_Command
  1097     05B6                     l722:
  1098                           
  1099                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 130:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1100     05B6  3007               	movlw	7
  1101     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1102     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1103     05B9  00A3               	movwf	??_Lcd_Init+1
  1104     05BA  307C               	movlw	124
  1105     05BB  00A2               	movwf	??_Lcd_Init
  1106     05BC                     u1047:
  1107     05BC  0BA2               	decfsz	??_Lcd_Init,f
  1108     05BD  2DBC               	goto	u1047
  1109     05BE  0BA3               	decfsz	??_Lcd_Init+1,f
  1110     05BF  2DBC               	goto	u1047
  1111     05C0  2DC1               	nop2
  1112                           
  1113                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 131:     Lcd_Command(config, 0x03);
  1114     05C1  3003               	movlw	3
  1115     05C2  00F9               	movwf	Lcd_Command@cmd
  1116     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1117     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1118     05C5  0824               	movf	Lcd_Init@config,w
  1119     05C6  25F1               	fcall	_Lcd_Command
  1120     05C7                     l724:
  1121                           
  1122                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 132:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1123     05C7  3020               	movlw	32
  1124     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1125     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1126     05CA  00A2               	movwf	??_Lcd_Init
  1127     05CB                     u1057:
  1128     05CB  0BA2               	decfsz	??_Lcd_Init,f
  1129     05CC  2DCB               	goto	u1057
  1130     05CD  2DCE               	nop2
  1131     05CE                     l726:
  1132                           
  1133                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 133:     Lcd_Command(config, 0x03);
  1134     05CE  3003               	movlw	3
  1135     05CF  00F9               	movwf	Lcd_Command@cmd
  1136     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1137     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1138     05D2  0824               	movf	Lcd_Init@config,w
  1139     05D3  25F1               	fcall	_Lcd_Command
  1140     05D4                     l728:
  1141                           
  1142                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 134:     Lcd_Command(config, 0x02);
  1143     05D4  3002               	movlw	2
  1144     05D5  00F9               	movwf	Lcd_Command@cmd
  1145     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1146     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1147     05D8  0824               	movf	Lcd_Init@config,w
  1148     05D9  25F1               	fcall	_Lcd_Command
  1149     05DA                     l730:
  1150                           
  1151                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 136:     Lcd_Command(config, 0x28);
  1152     05DA  3028               	movlw	40
  1153     05DB  00F9               	movwf	Lcd_Command@cmd
  1154     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1155     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1156     05DE  0824               	movf	Lcd_Init@config,w
  1157     05DF  25F1               	fcall	_Lcd_Command
  1158     05E0                     l732:
  1159                           
  1160                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 137:     Lcd_Command(config, 0x0C);
  1161     05E0  300C               	movlw	12
  1162     05E1  00F9               	movwf	Lcd_Command@cmd
  1163     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1164     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1165     05E4  0824               	movf	Lcd_Init@config,w
  1166     05E5  25F1               	fcall	_Lcd_Command
  1167     05E6                     l734:
  1168                           
  1169                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 138:     Lcd_Command(config, 0x06);
  1170     05E6  3006               	movlw	6
  1171     05E7  00F9               	movwf	Lcd_Command@cmd
  1172     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1173     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1174     05EA  0824               	movf	Lcd_Init@config,w
  1175     05EB  25F1               	fcall	_Lcd_Command
  1176     05EC                     l736:
  1177                           
  1178                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 139:     Lcd_Clear(config);
  1179     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1180     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1181     05EE  0824               	movf	Lcd_Init@config,w
  1182     05EF  24D3               	fcall	_Lcd_Clear
  1183     05F0                     l47:
  1184     05F0  0008               	return
  1185     05F1                     __end_of_Lcd_Init:
  1186                           
  1187                           	psect	text5
  1188     04D3                     __ptext5:	
  1189 ;; *************** function _Lcd_Clear *****************
  1190 ;; Defined at:
  1191 ;;		line 147 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  config          1    wreg     PTR struct .
  1194 ;;		 -> main@lcdConfig_16F628A(8), 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  config          1   13[COMMON] PTR struct .
  1197 ;;		 -> main@lcdConfig_16F628A(8), 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1207 ;;      Params:         0       0       0       0
  1208 ;;      Locals:         1       0       0       0
  1209 ;;      Temps:          0       2       0       0
  1210 ;;      Totals:         1       2       0       0
  1211 ;;Total ram usage:        3 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 3
  1214 ;; This function calls:
  1215 ;;		_Lcd_Command
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;;		_Lcd_Init
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222     04D3                     _Lcd_Clear:	
  1223                           ;psect for function _Lcd_Clear
  1224                           
  1225                           
  1226                           ;incstack = 0
  1227                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1228                           ;Lcd_Clear@config stored from wreg
  1229     04D3  00FD               	movwf	Lcd_Clear@config
  1230     04D4                     l712:
  1231                           
  1232                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 148:     Lcd_Command(config, 0x01);
  1233     04D4  01F9               	clrf	Lcd_Command@cmd
  1234     04D5  0AF9               	incf	Lcd_Command@cmd,f
  1235     04D6  087D               	movf	Lcd_Clear@config,w
  1236     04D7  25F1               	fcall	_Lcd_Command
  1237     04D8                     l714:
  1238                           
  1239                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 149:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1240     04D8  3003               	movlw	3
  1241     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1242     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1243     04DB  00A1               	movwf	??_Lcd_Clear+1
  1244     04DC  3097               	movlw	151
  1245     04DD  00A0               	movwf	??_Lcd_Clear
  1246     04DE                     u1067:
  1247     04DE  0BA0               	decfsz	??_Lcd_Clear,f
  1248     04DF  2CDE               	goto	u1067
  1249     04E0  0BA1               	decfsz	??_Lcd_Clear+1,f
  1250     04E1  2CDE               	goto	u1067
  1251     04E2  0000               	nop
  1252     04E3                     l50:
  1253     04E3  0008               	return
  1254     04E4                     __end_of_Lcd_Clear:
  1255                           
  1256                           	psect	text6
  1257     05F1                     __ptext6:	
  1258 ;; *************** function _Lcd_Command *****************
  1259 ;; Defined at:
  1260 ;;		line 61 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  config          1    wreg     PTR struct .
  1263 ;;		 -> main@lcdConfig_16F628A(8), 
  1264 ;;  cmd             1    9[COMMON] unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  config          1   12[COMMON] PTR struct .
  1267 ;;		 -> main@lcdConfig_16F628A(8), 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1277 ;;      Params:         1       0       0       0
  1278 ;;      Locals:         1       0       0       0
  1279 ;;      Temps:          2       0       0       0
  1280 ;;      Totals:         4       0       0       0
  1281 ;;Total ram usage:        4 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 2
  1284 ;; This function calls:
  1285 ;;		_PulseEnable
  1286 ;;		_SetBit
  1287 ;; This function is called by:
  1288 ;;		_Lcd_Init
  1289 ;;		_Lcd_Clear
  1290 ;;		_Lcd_SetCursor
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294     05F1                     _Lcd_Command:	
  1295                           ;psect for function _Lcd_Command
  1296                           
  1297                           
  1298                           ;incstack = 0
  1299                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1300                           ;Lcd_Command@config stored from wreg
  1301     05F1  00FC               	movwf	Lcd_Command@config
  1302     05F2                     l710:
  1303                           
  1304                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 63:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1305     05F2  087C               	movf	Lcd_Command@config,w
  1306     05F3  0084               	movwf	4
  1307     05F4  1383               	bcf	3,7	;select IRP bank0
  1308     05F5  0800               	movf	0,w
  1309     05F6  00F0               	movwf	SetBit@port
  1310     05F7  0A84               	incf	4,f
  1311     05F8  0800               	movf	0,w
  1312     05F9  0384               	decf	4,f
  1313     05FA  00F1               	movwf	SetBit@port+1
  1314     05FB  087C               	movf	Lcd_Command@config,w
  1315     05FC  3E04               	addlw	4
  1316     05FD  0084               	movwf	4
  1317     05FE  0800               	movf	0,w
  1318     05FF  00F2               	movwf	SetBit@pin
  1319     0600  0879               	movf	Lcd_Command@cmd,w
  1320     0601  00FB               	movwf	??_Lcd_Command+1
  1321     0602  3004               	movlw	4
  1322     0603                     u555:
  1323     0603  1003               	clrc
  1324     0604  0CFB               	rrf	??_Lcd_Command+1,f
  1325     0605  3EFF               	addlw	-1
  1326     0606  1D03               	skipz
  1327     0607  2E03               	goto	u555
  1328     0608  187B               	btfsc	??_Lcd_Command+1,0
  1329     0609  2E0B               	goto	u561
  1330     060A  2E0D               	goto	u560
  1331     060B                     u561:
  1332     060B  3001               	movlw	1
  1333     060C  2E0E               	goto	u570
  1334     060D                     u560:
  1335     060D  3000               	movlw	0
  1336     060E                     u570:
  1337     060E  00F3               	movwf	SetBit@value
  1338     060F  254A               	fcall	_SetBit
  1339                           
  1340                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 64:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1341     0610  087C               	movf	Lcd_Command@config,w
  1342     0611  0084               	movwf	4
  1343     0612  1383               	bcf	3,7	;select IRP bank0
  1344     0613  0800               	movf	0,w
  1345     0614  00F0               	movwf	SetBit@port
  1346     0615  0A84               	incf	4,f
  1347     0616  0800               	movf	0,w
  1348     0617  0384               	decf	4,f
  1349     0618  00F1               	movwf	SetBit@port+1
  1350     0619  087C               	movf	Lcd_Command@config,w
  1351     061A  3E05               	addlw	5
  1352     061B  0084               	movwf	4
  1353     061C  0800               	movf	0,w
  1354     061D  00F2               	movwf	SetBit@pin
  1355     061E  0879               	movf	Lcd_Command@cmd,w
  1356     061F  00FB               	movwf	??_Lcd_Command+1
  1357     0620  3005               	movlw	5
  1358     0621                     u585:
  1359     0621  1003               	clrc
  1360     0622  0CFB               	rrf	??_Lcd_Command+1,f
  1361     0623  3EFF               	addlw	-1
  1362     0624  1D03               	skipz
  1363     0625  2E21               	goto	u585
  1364     0626  187B               	btfsc	??_Lcd_Command+1,0
  1365     0627  2E29               	goto	u591
  1366     0628  2E2B               	goto	u590
  1367     0629                     u591:
  1368     0629  3001               	movlw	1
  1369     062A  2E2C               	goto	u600
  1370     062B                     u590:
  1371     062B  3000               	movlw	0
  1372     062C                     u600:
  1373     062C  00F3               	movwf	SetBit@value
  1374     062D  254A               	fcall	_SetBit
  1375                           
  1376                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 65:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  1377     062E  087C               	movf	Lcd_Command@config,w
  1378     062F  0084               	movwf	4
  1379     0630  1383               	bcf	3,7	;select IRP bank0
  1380     0631  0800               	movf	0,w
  1381     0632  00F0               	movwf	SetBit@port
  1382     0633  0A84               	incf	4,f
  1383     0634  0800               	movf	0,w
  1384     0635  0384               	decf	4,f
  1385     0636  00F1               	movwf	SetBit@port+1
  1386     0637  087C               	movf	Lcd_Command@config,w
  1387     0638  3E06               	addlw	6
  1388     0639  0084               	movwf	4
  1389     063A  0800               	movf	0,w
  1390     063B  00F2               	movwf	SetBit@pin
  1391     063C  0879               	movf	Lcd_Command@cmd,w
  1392     063D  00FB               	movwf	??_Lcd_Command+1
  1393     063E  3006               	movlw	6
  1394     063F                     u615:
  1395     063F  1003               	clrc
  1396     0640  0CFB               	rrf	??_Lcd_Command+1,f
  1397     0641  3EFF               	addlw	-1
  1398     0642  1D03               	skipz
  1399     0643  2E3F               	goto	u615
  1400     0644  187B               	btfsc	??_Lcd_Command+1,0
  1401     0645  2E47               	goto	u621
  1402     0646  2E49               	goto	u620
  1403     0647                     u621:
  1404     0647  3001               	movlw	1
  1405     0648  2E4A               	goto	u630
  1406     0649                     u620:
  1407     0649  3000               	movlw	0
  1408     064A                     u630:
  1409     064A  00F3               	movwf	SetBit@value
  1410     064B  254A               	fcall	_SetBit
  1411                           
  1412                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 66:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  1413     064C  087C               	movf	Lcd_Command@config,w
  1414     064D  0084               	movwf	4
  1415     064E  1383               	bcf	3,7	;select IRP bank0
  1416     064F  0800               	movf	0,w
  1417     0650  00F0               	movwf	SetBit@port
  1418     0651  0A84               	incf	4,f
  1419     0652  0800               	movf	0,w
  1420     0653  0384               	decf	4,f
  1421     0654  00F1               	movwf	SetBit@port+1
  1422     0655  087C               	movf	Lcd_Command@config,w
  1423     0656  3E07               	addlw	7
  1424     0657  0084               	movwf	4
  1425     0658  0800               	movf	0,w
  1426     0659  00F2               	movwf	SetBit@pin
  1427     065A  0879               	movf	Lcd_Command@cmd,w
  1428     065B  00FB               	movwf	??_Lcd_Command+1
  1429     065C  3007               	movlw	7
  1430     065D                     u645:
  1431     065D  1003               	clrc
  1432     065E  0CFB               	rrf	??_Lcd_Command+1,f
  1433     065F  3EFF               	addlw	-1
  1434     0660  1D03               	skipz
  1435     0661  2E5D               	goto	u645
  1436     0662  187B               	btfsc	??_Lcd_Command+1,0
  1437     0663  2E65               	goto	u651
  1438     0664  2E67               	goto	u650
  1439     0665                     u651:
  1440     0665  3001               	movlw	1
  1441     0666  2E68               	goto	u660
  1442     0667                     u650:
  1443     0667  3000               	movlw	0
  1444     0668                     u660:
  1445     0668  00F3               	movwf	SetBit@value
  1446     0669  254A               	fcall	_SetBit
  1447                           
  1448                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 68:     SetBit(config->port, config->rs_pin, 0);
  1449     066A  087C               	movf	Lcd_Command@config,w
  1450     066B  0084               	movwf	4
  1451     066C  1383               	bcf	3,7	;select IRP bank0
  1452     066D  0800               	movf	0,w
  1453     066E  00F0               	movwf	SetBit@port
  1454     066F  0A84               	incf	4,f
  1455     0670  0800               	movf	0,w
  1456     0671  0384               	decf	4,f
  1457     0672  00F1               	movwf	SetBit@port+1
  1458     0673  087C               	movf	Lcd_Command@config,w
  1459     0674  3E02               	addlw	2
  1460     0675  0084               	movwf	4
  1461     0676  0800               	movf	0,w
  1462     0677  00F2               	movwf	SetBit@pin
  1463     0678  01F3               	clrf	SetBit@value
  1464     0679  254A               	fcall	_SetBit
  1465                           
  1466                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 69:     PulseEnable(config);
  1467     067A  087C               	movf	Lcd_Command@config,w
  1468     067B  2576               	fcall	_PulseEnable
  1469                           
  1470                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 72:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  1471     067C  087C               	movf	Lcd_Command@config,w
  1472     067D  0084               	movwf	4
  1473     067E  1383               	bcf	3,7	;select IRP bank0
  1474     067F  0800               	movf	0,w
  1475     0680  00F0               	movwf	SetBit@port
  1476     0681  0A84               	incf	4,f
  1477     0682  0800               	movf	0,w
  1478     0683  0384               	decf	4,f
  1479     0684  00F1               	movwf	SetBit@port+1
  1480     0685  087C               	movf	Lcd_Command@config,w
  1481     0686  3E04               	addlw	4
  1482     0687  0084               	movwf	4
  1483     0688  0800               	movf	0,w
  1484     0689  00F2               	movwf	SetBit@pin
  1485     068A  1879               	btfsc	Lcd_Command@cmd,0
  1486     068B  2E8D               	goto	u671
  1487     068C  2E8F               	goto	u670
  1488     068D                     u671:
  1489     068D  3001               	movlw	1
  1490     068E  2E90               	goto	u680
  1491     068F                     u670:
  1492     068F  3000               	movlw	0
  1493     0690                     u680:
  1494     0690  00F3               	movwf	SetBit@value
  1495     0691  254A               	fcall	_SetBit
  1496                           
  1497                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 73:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  1498     0692  087C               	movf	Lcd_Command@config,w
  1499     0693  0084               	movwf	4
  1500     0694  1383               	bcf	3,7	;select IRP bank0
  1501     0695  0800               	movf	0,w
  1502     0696  00F0               	movwf	SetBit@port
  1503     0697  0A84               	incf	4,f
  1504     0698  0800               	movf	0,w
  1505     0699  0384               	decf	4,f
  1506     069A  00F1               	movwf	SetBit@port+1
  1507     069B  087C               	movf	Lcd_Command@config,w
  1508     069C  3E05               	addlw	5
  1509     069D  0084               	movwf	4
  1510     069E  0800               	movf	0,w
  1511     069F  00F2               	movwf	SetBit@pin
  1512     06A0  0879               	movf	Lcd_Command@cmd,w
  1513     06A1  00FB               	movwf	??_Lcd_Command+1
  1514     06A2  3001               	movlw	1
  1515     06A3                     u695:
  1516     06A3  1003               	clrc
  1517     06A4  0CFB               	rrf	??_Lcd_Command+1,f
  1518     06A5  3EFF               	addlw	-1
  1519     06A6  1D03               	skipz
  1520     06A7  2EA3               	goto	u695
  1521     06A8  187B               	btfsc	??_Lcd_Command+1,0
  1522     06A9  2EAB               	goto	u701
  1523     06AA  2EAD               	goto	u700
  1524     06AB                     u701:
  1525     06AB  3001               	movlw	1
  1526     06AC  2EAE               	goto	u710
  1527     06AD                     u700:
  1528     06AD  3000               	movlw	0
  1529     06AE                     u710:
  1530     06AE  00F3               	movwf	SetBit@value
  1531     06AF  254A               	fcall	_SetBit
  1532                           
  1533                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 74:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  1534     06B0  087C               	movf	Lcd_Command@config,w
  1535     06B1  0084               	movwf	4
  1536     06B2  1383               	bcf	3,7	;select IRP bank0
  1537     06B3  0800               	movf	0,w
  1538     06B4  00F0               	movwf	SetBit@port
  1539     06B5  0A84               	incf	4,f
  1540     06B6  0800               	movf	0,w
  1541     06B7  0384               	decf	4,f
  1542     06B8  00F1               	movwf	SetBit@port+1
  1543     06B9  087C               	movf	Lcd_Command@config,w
  1544     06BA  3E06               	addlw	6
  1545     06BB  0084               	movwf	4
  1546     06BC  0800               	movf	0,w
  1547     06BD  00F2               	movwf	SetBit@pin
  1548     06BE  0879               	movf	Lcd_Command@cmd,w
  1549     06BF  00FB               	movwf	??_Lcd_Command+1
  1550     06C0  3002               	movlw	2
  1551     06C1                     u725:
  1552     06C1  1003               	clrc
  1553     06C2  0CFB               	rrf	??_Lcd_Command+1,f
  1554     06C3  3EFF               	addlw	-1
  1555     06C4  1D03               	skipz
  1556     06C5  2EC1               	goto	u725
  1557     06C6  187B               	btfsc	??_Lcd_Command+1,0
  1558     06C7  2EC9               	goto	u731
  1559     06C8  2ECB               	goto	u730
  1560     06C9                     u731:
  1561     06C9  3001               	movlw	1
  1562     06CA  2ECC               	goto	u740
  1563     06CB                     u730:
  1564     06CB  3000               	movlw	0
  1565     06CC                     u740:
  1566     06CC  00F3               	movwf	SetBit@value
  1567     06CD  254A               	fcall	_SetBit
  1568                           
  1569                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 75:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  1570     06CE  087C               	movf	Lcd_Command@config,w
  1571     06CF  0084               	movwf	4
  1572     06D0  1383               	bcf	3,7	;select IRP bank0
  1573     06D1  0800               	movf	0,w
  1574     06D2  00F0               	movwf	SetBit@port
  1575     06D3  0A84               	incf	4,f
  1576     06D4  0800               	movf	0,w
  1577     06D5  0384               	decf	4,f
  1578     06D6  00F1               	movwf	SetBit@port+1
  1579     06D7  087C               	movf	Lcd_Command@config,w
  1580     06D8  3E07               	addlw	7
  1581     06D9  0084               	movwf	4
  1582     06DA  0800               	movf	0,w
  1583     06DB  00F2               	movwf	SetBit@pin
  1584     06DC  0879               	movf	Lcd_Command@cmd,w
  1585     06DD  00FB               	movwf	??_Lcd_Command+1
  1586     06DE  3003               	movlw	3
  1587     06DF                     u755:
  1588     06DF  1003               	clrc
  1589     06E0  0CFB               	rrf	??_Lcd_Command+1,f
  1590     06E1  3EFF               	addlw	-1
  1591     06E2  1D03               	skipz
  1592     06E3  2EDF               	goto	u755
  1593     06E4  187B               	btfsc	??_Lcd_Command+1,0
  1594     06E5  2EE7               	goto	u761
  1595     06E6  2EE9               	goto	u760
  1596     06E7                     u761:
  1597     06E7  3001               	movlw	1
  1598     06E8  2EEA               	goto	u770
  1599     06E9                     u760:
  1600     06E9  3000               	movlw	0
  1601     06EA                     u770:
  1602     06EA  00F3               	movwf	SetBit@value
  1603     06EB  254A               	fcall	_SetBit
  1604                           
  1605                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 77:     PulseEnable(config);
  1606     06EC  087C               	movf	Lcd_Command@config,w
  1607     06ED  2576               	fcall	_PulseEnable
  1608     06EE                     l35:
  1609     06EE  0008               	return
  1610     06EF                     __end_of_Lcd_Command:
  1611                           
  1612                           	psect	text7
  1613     0576                     __ptext7:	
  1614 ;; *************** function _PulseEnable *****************
  1615 ;; Defined at:
  1616 ;;		line 47 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  config          1    wreg     PTR struct .
  1619 ;;		 -> main@lcdConfig_16F628A(8), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  config          1    8[COMMON] PTR struct .
  1622 ;;		 -> main@lcdConfig_16F628A(8), 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1632 ;;      Params:         0       0       0       0
  1633 ;;      Locals:         1       0       0       0
  1634 ;;      Temps:          2       0       0       0
  1635 ;;      Totals:         3       0       0       0
  1636 ;;Total ram usage:        3 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 1
  1639 ;; This function calls:
  1640 ;;		_SetBit
  1641 ;; This function is called by:
  1642 ;;		_Lcd_Command
  1643 ;;		_Lcd_WriteChar
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647     0576                     _PulseEnable:	
  1648                           ;psect for function _PulseEnable
  1649                           
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1653                           ;PulseEnable@config stored from wreg
  1654     0576  00F8               	movwf	PulseEnable@config
  1655     0577                     l704:
  1656                           
  1657                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 48:     SetBit(config->port, config->en_pin, 1);
  1658     0577  0878               	movf	PulseEnable@config,w
  1659     0578  0084               	movwf	4
  1660     0579  1383               	bcf	3,7	;select IRP bank0
  1661     057A  0800               	movf	0,w
  1662     057B  00F0               	movwf	SetBit@port
  1663     057C  0A84               	incf	4,f
  1664     057D  0800               	movf	0,w
  1665     057E  0384               	decf	4,f
  1666     057F  00F1               	movwf	SetBit@port+1
  1667     0580  0878               	movf	PulseEnable@config,w
  1668     0581  3E03               	addlw	3
  1669     0582  0084               	movwf	4
  1670     0583  0800               	movf	0,w
  1671     0584  00F2               	movwf	SetBit@pin
  1672     0585  01F3               	clrf	SetBit@value
  1673     0586  0AF3               	incf	SetBit@value,f
  1674     0587  254A               	fcall	_SetBit
  1675     0588                     l706:
  1676                           
  1677                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1678     0588  3003               	movlw	3
  1679     0589  00F7               	movwf	??_PulseEnable+1
  1680     058A  3097               	movlw	151
  1681     058B  00F6               	movwf	??_PulseEnable
  1682     058C                     u1077:
  1683     058C  0BF6               	decfsz	??_PulseEnable,f
  1684     058D  2D8C               	goto	u1077
  1685     058E  0BF7               	decfsz	??_PulseEnable+1,f
  1686     058F  2D8C               	goto	u1077
  1687     0590  2D91               	nop2
  1688     0591                     l708:
  1689                           
  1690                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 50:     SetBit(config->port, config->en_pin, 0);
  1691     0591  0878               	movf	PulseEnable@config,w
  1692     0592  0084               	movwf	4
  1693     0593  1383               	bcf	3,7	;select IRP bank0
  1694     0594  0800               	movf	0,w
  1695     0595  00F0               	movwf	SetBit@port
  1696     0596  0A84               	incf	4,f
  1697     0597  0800               	movf	0,w
  1698     0598  0384               	decf	4,f
  1699     0599  00F1               	movwf	SetBit@port+1
  1700     059A  0878               	movf	PulseEnable@config,w
  1701     059B  3E03               	addlw	3
  1702     059C  0084               	movwf	4
  1703     059D  0800               	movf	0,w
  1704     059E  00F2               	movwf	SetBit@pin
  1705     059F  01F3               	clrf	SetBit@value
  1706     05A0  254A               	fcall	_SetBit
  1707     05A1                     l32:
  1708     05A1  0008               	return
  1709     05A2                     __end_of_PulseEnable:
  1710                           
  1711                           	psect	text8
  1712     054A                     __ptext8:	
  1713 ;; *************** function _SetBit *****************
  1714 ;; Defined at:
  1715 ;;		line 33 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  1718 ;;		 -> PORTB(1), 
  1719 ;;  pin             1    2[COMMON] unsigned char 
  1720 ;;  value           1    3[COMMON] _Bool 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1732 ;;      Params:         4       0       0       0
  1733 ;;      Locals:         0       0       0       0
  1734 ;;      Temps:          2       0       0       0
  1735 ;;      Totals:         6       0       0       0
  1736 ;;Total ram usage:        6 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_PulseEnable
  1742 ;;		_Lcd_Command
  1743 ;;		_Lcd_WriteChar
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747     054A                     _SetBit:	
  1748                           ;psect for function _SetBit
  1749                           
  1750     054A                     l698:	
  1751                           ;incstack = 0
  1752                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  1753                           
  1754                           
  1755                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 34:     if (value) {
  1756     054A  0873               	movf	SetBit@value,w
  1757     054B  1903               	btfsc	3,2
  1758     054C  2D4E               	goto	u521
  1759     054D  2D4F               	goto	u520
  1760     054E                     u521:
  1761     054E  2D62               	goto	l702
  1762     054F                     u520:
  1763     054F                     l700:
  1764                           
  1765                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 35:         *port |= (1 << pin);
  1766     054F  3001               	movlw	1
  1767     0550  00F4               	movwf	??_SetBit
  1768     0551  0A72               	incf	SetBit@pin,w
  1769     0552  2D55               	goto	u534
  1770     0553                     u535:
  1771     0553  1003               	clrc
  1772     0554  0DF4               	rlf	??_SetBit,f
  1773     0555                     u534:
  1774     0555  3EFF               	addlw	-1
  1775     0556  1D03               	skipz
  1776     0557  2D53               	goto	u535
  1777     0558  0874               	movf	??_SetBit,w
  1778     0559  00F5               	movwf	??_SetBit+1
  1779     055A  0870               	movf	SetBit@port,w
  1780     055B  0084               	movwf	4
  1781     055C  1783               	bsf	3,7
  1782     055D  1C71               	btfss	SetBit@port+1,0
  1783     055E  1383               	bcf	3,7
  1784     055F  0875               	movf	??_SetBit+1,w
  1785     0560  0480               	iorwf	0,f
  1786                           
  1787                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 36:     } else {
  1788     0561  2D75               	goto	l29
  1789     0562                     l702:
  1790                           
  1791                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 37:         *port &= ~(1 << pin);
  1792     0562  3001               	movlw	1
  1793     0563  00F4               	movwf	??_SetBit
  1794     0564  0A72               	incf	SetBit@pin,w
  1795     0565  2D68               	goto	u544
  1796     0566                     u545:
  1797     0566  1003               	clrc
  1798     0567  0DF4               	rlf	??_SetBit,f
  1799     0568                     u544:
  1800     0568  3EFF               	addlw	-1
  1801     0569  1D03               	skipz
  1802     056A  2D66               	goto	u545
  1803     056B  0874               	movf	??_SetBit,w
  1804     056C  3AFF               	xorlw	255
  1805     056D  00F5               	movwf	??_SetBit+1
  1806     056E  0870               	movf	SetBit@port,w
  1807     056F  0084               	movwf	4
  1808     0570  1783               	bsf	3,7
  1809     0571  1C71               	btfss	SetBit@port+1,0
  1810     0572  1383               	bcf	3,7
  1811     0573  0875               	movf	??_SetBit+1,w
  1812     0574  0580               	andwf	0,f
  1813     0575                     l29:
  1814     0575  0008               	return
  1815     0576                     __end_of_SetBit:
  1816     007E                     btemp	set	126	;btemp
  1817     007E                     wtemp0	set	126
  1818                           
  1819                           	psect	config
  1820                           
  1821                           ;Config register CONFIG @ 0x2007
  1822                           ;	Oscillator Selection bits
  1823                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1824                           ;	Watchdog Timer Enable bit
  1825                           ;	WDTE = OFF, WDT disabled
  1826                           ;	Power-up Timer Enable bit
  1827                           ;	PWRTE = OFF, PWRT disabled
  1828                           ;	RA5/MCLR/VPP Pin Function Select bit
  1829                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1830                           ;	Brown-out Detect Enable bit
  1831                           ;	BOREN = OFF, BOD disabled
  1832                           ;	Low-Voltage Programming Enable bit
  1833                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1834                           ;	Data EE Memory Code Protection bit
  1835                           ;	CPD = OFF, Data memory code protection off
  1836                           ;	Flash Program Memory Code Protection bit
  1837                           ;	CP = OFF, Code protection off
  1838     2007                     	org	8199
  1839     2007  3F38               	dw	16184

Data Sizes:
    Strings     6
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      26
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    F652$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    lcdConfig_16F628A$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   55880
                                              6 BANK0     12    12      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     2      1   10461
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10285
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11434
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22611
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11245
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11157
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteString
     _Lcd_WriteChar
       _PulseEnable
       _SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1A       3       32.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      10        0.0%
ABS                  0      0      28       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 11:29:44 2023

                      pc 0002                       l32 05A1                       l17 0548  
                     l50 04E3                       l18 0548                       l35 06EE  
                     l44 04FC                       l29 0575                       l38 07ED  
                     l47 05F0                       l58 0520           Lcd_Init@config 0024  
                     fsr 0004                      l700 054F                      l702 0562  
                    l710 05F2                      l704 0577                      l712 04D4  
                    l720 05B0                      l706 0588                      l714 04D8  
                    l730 05DA                      l722 05B6                      l708 0591  
                    l732 05E0                      l724 05C7                      l740 0501  
                    l716 06F0                      l734 05E6                      l726 05CE  
                    l718 05A5                      l750 051C                      l806 050F  
                    l742 0504                      l736 05EC                      l728 05D4  
                    l760 04E8                      l746 0507                      l738 0500  
                    l762 04EE                      l770 053A                      l748 0517  
                    l764 04F4                      l772 053C                      l758 04E7  
                    l774 0544                      l766 0521                      l768 0538  
                    l698 054A                      u520 054F                      u600 062C  
                    u521 054E                      u700 06AD                      u620 0649  
                    u701 06AB                      u621 0647                      u534 0555  
                    u710 06AE                      u630 064A                      u535 0553  
                    u615 063F                      u544 0568                      u560 060D  
                    u800 070C                      u545 0566                      u561 060B  
                    u730 06CB                      u650 0667                      u570 060E  
                    u731 06C9                      u651 0665                      u555 0603  
                    u740 06CC                      u660 0668                      u900 078E  
                    u820 0729                      u725 06C1                      u645 065D  
                    u901 078C                      u821 0727                      u670 068F  
                    u590 062B                      u910 078F                      u830 072A  
                    u671 068D                      u591 0629                      u815 071F  
                    u760 06E9                      u680 0690                      u761 06E7  
                    u585 0621                      u770 06EA                      u930 07AC  
                    u850 0747                      u755 06DF                      u931 07AA  
                    u851 0745                      u940 07AD                      u860 0748  
                    u925 07A2                      u845 073D                      u790 070B  
                    u695 06A3                      u791 0709                      u960 07CA  
                    u880 0765                      u961 07C8                      u881 0763  
                    u785 0701                      u970 07CB                      u890 0766  
                    u955 07C0                      u875 075B                      u990 07E8  
                    u991 07E6                      u985 07DE                      fsr0 0004  
       ?_Lcd_WriteString 007D                      indf 0000      __end_of_Lcd_Command 06EF  
                   STR_1 0007                     u1000 07E9                     u1010 04FC  
                   u1011 04FB                     u1020 052B                     u1037 05AB  
                   u1047 05BC                     u1057 05CB                     u1067 04DE  
                   u1077 058C       Lcd_WriteString@str 007D                     _main 0521  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006               SetBit@port 0070                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Init 05F1  
      PulseEnable@config 0078          __initialization 07EE             __end_of_main 054A  
            _Lcd_Command 05F1                   ??_main 0026    __end_of_Lcd_SetCursor 0521  
                 _SetBit 054A     Lcd_SetCursor@address 0025              SetBit@value 0073  
  __end_of_Lcd_WriteChar 07EE  __end_of__initialization 07FE            ??_PulseEnable 0076  
      __end_of_Lcd_Clear 04E4           __pcstackCOMMON 0070             __pidataBANK0 04CB  
              ?_Lcd_Init 0070                  ?_SetBit 0070               __pmaintext 0521  
    __end_of_PulseEnable 05A2               ??_Lcd_Init 0022    Lcd_WriteString@config 0021  
             __stringtab 0001        Lcd_WriteChar@data 0079             ?_Lcd_Command 0079  
                __ptext1 04E4                  __ptext2 06EF                  __ptext3 04FD  
                __ptext4 05A2                  __ptext5 04D3                  __ptext6 05F1  
                __ptext7 0576                  __ptext8 054A     end_of_initialization 07FE  
       Lcd_SetCursor@row 0020              _PulseEnable 0576        ??_Lcd_WriteString 0020  
              _Lcd_Clear 04D3           __end_of_SetBit 0576                SetBit@pin 0072  
    start_initialization 07EE                 ??_SetBit 0074               ?_Lcd_Clear 0070  
    Lcd_SetCursor@config 0024      Lcd_SetCursor@column 0021              __pdataBANK0 0032  
      Lcd_Command@config 007C      Lcd_WriteChar@config 007C                ___latbits 0000  
          __pcstackBANK0 0020            _Lcd_SetCursor 04FD                __pstrings 0001  
          _Lcd_WriteChar 06EF           ?_Lcd_SetCursor 0020             ?_PulseEnable 0070  
            ??_Lcd_Clear 0020          Lcd_Clear@config 007D              __stringbase 0006  
         ?_Lcd_WriteChar 0079                 _Lcd_Init 05A2          _Lcd_WriteString 04E4  
     __end_of__stringtab 0007          ??_Lcd_SetCursor 0022                 main@F652 0032  
        ??_Lcd_WriteChar 007A  __end_of_Lcd_WriteString 04FD                stringcode 0001  
  main@lcdConfig_16F628A 002A            ??_Lcd_Command 007A           Lcd_Command@cmd 0079  
               stringdir 0001                 stringtab 0001  
