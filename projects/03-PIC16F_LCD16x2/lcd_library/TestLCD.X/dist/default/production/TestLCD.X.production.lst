

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 11:19:04 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F628A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     008C                     	;# 
    84     008E                     	;# 
    85     0092                     	;# 
    86     0098                     	;# 
    87     0099                     	;# 
    88     009A                     	;# 
    89     009B                     	;# 
    90     009C                     	;# 
    91     009D                     	;# 
    92     009F                     	;# 
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001F                     	;# 
   117     0081                     	;# 
   118     0085                     	;# 
   119     0086                     	;# 
   120     008C                     	;# 
   121     008E                     	;# 
   122     0092                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009F                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     008C                     	;# 
   158     008E                     	;# 
   159     0092                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009F                     	;# 
   167                           
   168                           	psect	idataBANK0
   169     04CB                     __pidataBANK0:
   170                           
   171                           ;initializer for main@F652
   172     04CB  3406               	retlw	6
   173     04CC  3400               	retlw	0
   174     04CD  3400               	retlw	0
   175     04CE  3401               	retlw	1
   176     04CF  3404               	retlw	4
   177     04D0  3405               	retlw	5
   178     04D1  3406               	retlw	6
   179     04D2  3407               	retlw	7
   180     0006                     _PORTB	set	6
   181                           
   182                           	psect	strings
   183     0001                     __pstrings:
   184     0001                     stringtab:
   185     0001                     __stringtab:
   186     0001                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     0001                     stringdir:
   190     0001  3000               	movlw	high stringdir
   191     0002  008A               	movwf	10
   192     0003  0804               	movf	4,w
   193     0004  0A84               	incf	4,f
   194     0005  0782               	addwf	2,f
   195     0006                     __stringbase:
   196     0006  3400               	retlw	0
   197     0007                     __end_of__stringtab:
   198     0007                     STR_1:
   199     0007  344F               	retlw	79	;'O'
   200     0008  3469               	retlw	105	;'i'
   201     0009  3420               	retlw	32	;' '
   202     000A  344D               	retlw	77	;'M'
   203     000B  3475               	retlw	117	;'u'
   204     000C  346E               	retlw	110	;'n'
   205     000D  3464               	retlw	100	;'d'
   206     000E  346F               	retlw	111	;'o'
   207     000F  3400               	retlw	0
   208                           
   209                           	psect	cinit
   210     07EE                     start_initialization:	
   211                           ; #config settings
   212                           
   213     07EE                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK0
   216     07EE  24CB               	fcall	__pidataBANK0	;fetch initializer
   217     07EF  00B2               	movwf	__pdataBANK0& (0+127)
   218     07F0  24CC               	fcall	__pidataBANK0+1	;fetch initializer
   219     07F1  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   220     07F2  24CD               	fcall	__pidataBANK0+2	;fetch initializer
   221     07F3  00B4               	movwf	(__pdataBANK0+2)& (0+127)
   222     07F4  24CE               	fcall	__pidataBANK0+3	;fetch initializer
   223     07F5  00B5               	movwf	(__pdataBANK0+3)& (0+127)
   224     07F6  24CF               	fcall	__pidataBANK0+4	;fetch initializer
   225     07F7  00B6               	movwf	(__pdataBANK0+4)& (0+127)
   226     07F8  24D0               	fcall	__pidataBANK0+5	;fetch initializer
   227     07F9  00B7               	movwf	(__pdataBANK0+5)& (0+127)
   228     07FA  24D1               	fcall	__pidataBANK0+6	;fetch initializer
   229     07FB  00B8               	movwf	(__pdataBANK0+6)& (0+127)
   230     07FC  24D2               	fcall	__pidataBANK0+7	;fetch initializer
   231     07FD  00B9               	movwf	(__pdataBANK0+7)& (0+127)
   232     07FE                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235     07FE                     __end_of__initialization:
   236     07FE  0183               	clrf	3
   237     07FF  2D21               	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	dataBANK0
   240     0032                     __pdataBANK0:
   241     0032                     main@F652:
   242     0032                     	ds	8
   243                           
   244                           	psect	cstackCOMMON
   245     0070                     __pcstackCOMMON:
   246     0070                     ?_Lcd_Init:
   247     0070                     ?_Lcd_Clear:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?_SetBit:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     ?_PulseEnable:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     SetBit@port:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 2 bytes @ 0x0
   264     0070                     	ds	2
   265     0072                     SetBit@pin:
   266                           
   267                           ; 1 bytes @ 0x2
   268     0072                     	ds	1
   269     0073                     SetBit@value:
   270                           
   271                           ; 1 bytes @ 0x3
   272     0073                     	ds	1
   273     0074                     ??_SetBit:
   274                           
   275                           ; 1 bytes @ 0x4
   276     0074                     	ds	2
   277     0076                     ??_PulseEnable:
   278                           
   279                           ; 1 bytes @ 0x6
   280     0076                     	ds	2
   281     0078                     PulseEnable@config:
   282                           
   283                           ; 1 bytes @ 0x8
   284     0078                     	ds	1
   285     0079                     ?_Lcd_Command:
   286     0079                     ?_Lcd_WriteChar:	
   287                           ; 1 bytes @ 0x9
   288                           
   289     0079                     Lcd_Command@cmd:	
   290                           ; 1 bytes @ 0x9
   291                           
   292     0079                     Lcd_WriteChar@data:	
   293                           ; 1 bytes @ 0x9
   294                           
   295                           
   296                           ; 1 bytes @ 0x9
   297     0079                     	ds	1
   298     007A                     ??_Lcd_Command:
   299     007A                     ??_Lcd_WriteChar:	
   300                           ; 1 bytes @ 0xA
   301                           
   302                           
   303                           ; 1 bytes @ 0xA
   304     007A                     	ds	2
   305     007C                     Lcd_Command@config:
   306     007C                     Lcd_WriteChar@config:	
   307                           ; 1 bytes @ 0xC
   308                           
   309                           
   310                           ; 1 bytes @ 0xC
   311     007C                     	ds	1
   312     007D                     ?_Lcd_WriteString:
   313     007D                     Lcd_WriteString@str:	
   314                           ; 1 bytes @ 0xD
   315                           
   316     007D                     Lcd_Clear@config:	
   317                           ; 1 bytes @ 0xD
   318                           
   319                           
   320                           ; 1 bytes @ 0xD
   321     007D                     	ds	1
   322                           
   323                           	psect	cstackBANK0
   324     0020                     __pcstackBANK0:
   325     0020                     ??_Lcd_Clear:
   326     0020                     ?_Lcd_SetCursor:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0020                     ??_Lcd_WriteString:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0020                     Lcd_SetCursor@row:	
   333                           ; 1 bytes @ 0x0
   334                           
   335                           
   336                           ; 1 bytes @ 0x0
   337     0020                     	ds	1
   338     0021                     Lcd_WriteString@config:
   339     0021                     Lcd_SetCursor@column:	
   340                           ; 1 bytes @ 0x1
   341                           
   342                           
   343                           ; 1 bytes @ 0x1
   344     0021                     	ds	1
   345     0022                     ??_Lcd_Init:
   346     0022                     ??_Lcd_SetCursor:	
   347                           ; 1 bytes @ 0x2
   348                           
   349                           
   350                           ; 1 bytes @ 0x2
   351     0022                     	ds	2
   352     0024                     Lcd_Init@config:
   353     0024                     Lcd_SetCursor@config:	
   354                           ; 1 bytes @ 0x4
   355                           
   356                           
   357                           ; 1 bytes @ 0x4
   358     0024                     	ds	1
   359     0025                     Lcd_SetCursor@address:
   360                           
   361                           ; 1 bytes @ 0x5
   362     0025                     	ds	1
   363     0026                     ??_main:
   364                           
   365                           ; 1 bytes @ 0x6
   366     0026                     	ds	4
   367     002A                     main@lcdConfig_16F628A:
   368                           
   369                           ; 8 bytes @ 0xA
   370     002A                     	ds	8
   371                           
   372                           	psect	maintext
   373     0521                     __pmaintext:	
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 7 in file "LCDTST.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  lcdConfig_16    8   10[BANK0 ] struct .
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : B00/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   393 ;;      Params:         0       0       0       0
   394 ;;      Locals:         0       8       0       0
   395 ;;      Temps:          0       4       0       0
   396 ;;      Totals:         0      12       0       0
   397 ;;Total ram usage:       12 bytes
   398 ;; Hardware stack levels required when called: 5
   399 ;; This function calls:
   400 ;;		_Lcd_Clear
   401 ;;		_Lcd_Init
   402 ;;		_Lcd_SetCursor
   403 ;;		_Lcd_WriteString
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     0521                     _main:	
   410                           ;psect for function _main
   411                           
   412     0521                     l766:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   415                           
   416                           
   417                           ;LCDTST.c: 9:     Lcd_PinConfig lcdConfig_16F628A = {
   418     0521  302A               	movlw	main@lcdConfig_16F628A& (0+255)
   419     0522  0084               	movwf	4
   420     0523  3032               	movlw	low main@F652
   421     0524  1283               	bcf	3,5	;RP0=0, select bank0
   422     0525  1303               	bcf	3,6	;RP1=0, select bank0
   423     0526  00A6               	movwf	??_main
   424     0527  0804               	movf	4,w
   425     0528  00A7               	movwf	??_main+1
   426     0529  3008               	movlw	8
   427     052A  00A8               	movwf	??_main+2
   428     052B                     u1020:
   429     052B  0826               	movf	??_main,w
   430     052C  0084               	movwf	4
   431     052D  1383               	bcf	3,7	;select IRP bank0
   432     052E  0800               	movf	0,w
   433     052F  00A9               	movwf	??_main+3
   434     0530  0AA6               	incf	??_main,f
   435     0531  0827               	movf	??_main+1,w
   436     0532  0084               	movwf	4
   437     0533  0829               	movf	??_main+3,w
   438     0534  0080               	movwf	0
   439     0535  0AA7               	incf	??_main+1,f
   440     0536  0BA8               	decfsz	??_main+2,f
   441     0537  2D2B               	goto	u1020
   442     0538                     l768:
   443                           
   444                           ;LCDTST.c: 20:     Lcd_Init(&lcdConfig_16F628A);
   445     0538  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   446     0539  25A2               	fcall	_Lcd_Init
   447     053A                     l770:
   448                           
   449                           ;LCDTST.c: 21:     Lcd_Clear(&lcdConfig_16F628A);
   450     053A  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   451     053B  24D3               	fcall	_Lcd_Clear
   452     053C                     l772:
   453                           
   454                           ;LCDTST.c: 24:     Lcd_SetCursor(&lcdConfig_16F628A, 1, 1);
   455     053C  1283               	bcf	3,5	;RP0=0, select bank0
   456     053D  1303               	bcf	3,6	;RP1=0, select bank0
   457     053E  01A0               	clrf	Lcd_SetCursor@row
   458     053F  0AA0               	incf	Lcd_SetCursor@row,f
   459     0540  01A1               	clrf	Lcd_SetCursor@column
   460     0541  0AA1               	incf	Lcd_SetCursor@column,f
   461     0542  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   462     0543  24FD               	fcall	_Lcd_SetCursor
   463     0544                     l774:
   464                           
   465                           ;LCDTST.c: 25:     Lcd_WriteString(&lcdConfig_16F628A, "Oi Mundo");
   466     0544  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   467     0545  00FD               	movwf	Lcd_WriteString@str
   468     0546  302A               	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   469     0547  24E4               	fcall	_Lcd_WriteString
   470     0548                     l17:	
   471                           ;LCDTST.c: 27:     while(1) {
   472                           
   473     0548                     l18:	
   474                           ;LCDTST.c: 29:     }
   475                           
   476     0548  2D48               	goto	l17
   477     0549  2800               	ljmp	start
   478     054A                     __end_of_main:
   479                           
   480                           	psect	text1
   481     04E4                     __ptext1:	
   482 ;; *************** function _Lcd_WriteString *****************
   483 ;; Defined at:
   484 ;;		line 112 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  config          1    wreg     PTR struct .
   487 ;;		 -> main@lcdConfig_16F628A(8), 
   488 ;;  str             1   13[COMMON] PTR unsigned char 
   489 ;;		 -> STR_1(9), 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  config          1    1[BANK0 ] PTR struct .
   492 ;;		 -> main@lcdConfig_16F628A(8), 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   502 ;;      Params:         1       0       0       0
   503 ;;      Locals:         0       1       0       0
   504 ;;      Temps:          0       1       0       0
   505 ;;      Totals:         1       2       0       0
   506 ;;Total ram usage:        3 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 3
   509 ;; This function calls:
   510 ;;		_Lcd_WriteChar
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516     04E4                     _Lcd_WriteString:	
   517                           ;psect for function _Lcd_WriteString
   518                           
   519                           
   520                           ;incstack = 0
   521                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   522                           ;Lcd_WriteString@config stored from wreg
   523     04E4  1283               	bcf	3,5	;RP0=0, select bank0
   524     04E5  1303               	bcf	3,6	;RP1=0, select bank0
   525     04E6  00A1               	movwf	Lcd_WriteString@config
   526     04E7                     l758:
   527                           
   528                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 113:     while(*str != '\0') {
   529     04E7  2CF4               	goto	l764
   530     04E8                     l760:
   531                           
   532                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 114:         Lcd_WriteChar(config, (unsigned char)(*str));
   533     04E8  087D               	movf	Lcd_WriteString@str,w
   534     04E9  0084               	movwf	4
   535     04EA  2001               	fcall	stringdir
   536     04EB  00F9               	movwf	Lcd_WriteChar@data
   537     04EC  0821               	movf	Lcd_WriteString@config,w
   538     04ED  26EF               	fcall	_Lcd_WriteChar
   539     04EE                     l762:
   540                           
   541                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 115:         str++;
   542     04EE  3001               	movlw	1
   543     04EF  1283               	bcf	3,5	;RP0=0, select bank0
   544     04F0  1303               	bcf	3,6	;RP1=0, select bank0
   545     04F1  00A0               	movwf	??_Lcd_WriteString
   546     04F2  0820               	movf	??_Lcd_WriteString,w
   547     04F3  07FD               	addwf	Lcd_WriteString@str,f
   548     04F4                     l764:
   549                           
   550                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 113:     while(*str != '\0') {
   551     04F4  087D               	movf	Lcd_WriteString@str,w
   552     04F5  0084               	movwf	4
   553     04F6  2001               	fcall	stringdir
   554     04F7  3A00               	xorlw	0
   555     04F8  1D03               	skipz
   556     04F9  2CFB               	goto	u1011
   557     04FA  2CFC               	goto	u1010
   558     04FB                     u1011:
   559     04FB  2CE8               	goto	l760
   560     04FC                     u1010:
   561     04FC                     l44:
   562     04FC  0008               	return
   563     04FD                     __end_of_Lcd_WriteString:
   564                           
   565                           	psect	text2
   566     06EF                     __ptext2:	
   567 ;; *************** function _Lcd_WriteChar *****************
   568 ;; Defined at:
   569 ;;		line 87 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  config          1    wreg     PTR struct .
   572 ;;		 -> main@lcdConfig_16F628A(8), 
   573 ;;  data            1    9[COMMON] unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  config          1   12[COMMON] PTR struct .
   576 ;;		 -> main@lcdConfig_16F628A(8), 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   586 ;;      Params:         1       0       0       0
   587 ;;      Locals:         1       0       0       0
   588 ;;      Temps:          2       0       0       0
   589 ;;      Totals:         4       0       0       0
   590 ;;Total ram usage:        4 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 2
   593 ;; This function calls:
   594 ;;		_PulseEnable
   595 ;;		_SetBit
   596 ;; This function is called by:
   597 ;;		_Lcd_WriteString
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     06EF                     _Lcd_WriteChar:	
   602                           ;psect for function _Lcd_WriteChar
   603                           
   604                           
   605                           ;incstack = 0
   606                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   607                           ;Lcd_WriteChar@config stored from wreg
   608     06EF  00FC               	movwf	Lcd_WriteChar@config
   609     06F0                     l716:
   610                           
   611                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 89:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
   612     06F0  087C               	movf	Lcd_WriteChar@config,w
   613     06F1  0084               	movwf	4
   614     06F2  1383               	bcf	3,7	;select IRP bank0
   615     06F3  0800               	movf	0,w
   616     06F4  00F0               	movwf	SetBit@port
   617     06F5  0A84               	incf	4,f
   618     06F6  0800               	movf	0,w
   619     06F7  0384               	decf	4,f
   620     06F8  00F1               	movwf	SetBit@port+1
   621     06F9  087C               	movf	Lcd_WriteChar@config,w
   622     06FA  3E04               	addlw	4
   623     06FB  0084               	movwf	4
   624     06FC  0800               	movf	0,w
   625     06FD  00F2               	movwf	SetBit@pin
   626     06FE  0879               	movf	Lcd_WriteChar@data,w
   627     06FF  00FB               	movwf	??_Lcd_WriteChar+1
   628     0700  3004               	movlw	4
   629     0701                     u785:
   630     0701  1003               	clrc
   631     0702  0CFB               	rrf	??_Lcd_WriteChar+1,f
   632     0703  3EFF               	addlw	-1
   633     0704  1D03               	skipz
   634     0705  2F01               	goto	u785
   635     0706  187B               	btfsc	??_Lcd_WriteChar+1,0
   636     0707  2F09               	goto	u791
   637     0708  2F0B               	goto	u790
   638     0709                     u791:
   639     0709  3001               	movlw	1
   640     070A  2F0C               	goto	u800
   641     070B                     u790:
   642     070B  3000               	movlw	0
   643     070C                     u800:
   644     070C  00F3               	movwf	SetBit@value
   645     070D  254A               	fcall	_SetBit
   646                           
   647                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 90:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
   648     070E  087C               	movf	Lcd_WriteChar@config,w
   649     070F  0084               	movwf	4
   650     0710  1383               	bcf	3,7	;select IRP bank0
   651     0711  0800               	movf	0,w
   652     0712  00F0               	movwf	SetBit@port
   653     0713  0A84               	incf	4,f
   654     0714  0800               	movf	0,w
   655     0715  0384               	decf	4,f
   656     0716  00F1               	movwf	SetBit@port+1
   657     0717  087C               	movf	Lcd_WriteChar@config,w
   658     0718  3E05               	addlw	5
   659     0719  0084               	movwf	4
   660     071A  0800               	movf	0,w
   661     071B  00F2               	movwf	SetBit@pin
   662     071C  0879               	movf	Lcd_WriteChar@data,w
   663     071D  00FB               	movwf	??_Lcd_WriteChar+1
   664     071E  3005               	movlw	5
   665     071F                     u815:
   666     071F  1003               	clrc
   667     0720  0CFB               	rrf	??_Lcd_WriteChar+1,f
   668     0721  3EFF               	addlw	-1
   669     0722  1D03               	skipz
   670     0723  2F1F               	goto	u815
   671     0724  187B               	btfsc	??_Lcd_WriteChar+1,0
   672     0725  2F27               	goto	u821
   673     0726  2F29               	goto	u820
   674     0727                     u821:
   675     0727  3001               	movlw	1
   676     0728  2F2A               	goto	u830
   677     0729                     u820:
   678     0729  3000               	movlw	0
   679     072A                     u830:
   680     072A  00F3               	movwf	SetBit@value
   681     072B  254A               	fcall	_SetBit
   682                           
   683                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 91:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
   684     072C  087C               	movf	Lcd_WriteChar@config,w
   685     072D  0084               	movwf	4
   686     072E  1383               	bcf	3,7	;select IRP bank0
   687     072F  0800               	movf	0,w
   688     0730  00F0               	movwf	SetBit@port
   689     0731  0A84               	incf	4,f
   690     0732  0800               	movf	0,w
   691     0733  0384               	decf	4,f
   692     0734  00F1               	movwf	SetBit@port+1
   693     0735  087C               	movf	Lcd_WriteChar@config,w
   694     0736  3E06               	addlw	6
   695     0737  0084               	movwf	4
   696     0738  0800               	movf	0,w
   697     0739  00F2               	movwf	SetBit@pin
   698     073A  0879               	movf	Lcd_WriteChar@data,w
   699     073B  00FB               	movwf	??_Lcd_WriteChar+1
   700     073C  3006               	movlw	6
   701     073D                     u845:
   702     073D  1003               	clrc
   703     073E  0CFB               	rrf	??_Lcd_WriteChar+1,f
   704     073F  3EFF               	addlw	-1
   705     0740  1D03               	skipz
   706     0741  2F3D               	goto	u845
   707     0742  187B               	btfsc	??_Lcd_WriteChar+1,0
   708     0743  2F45               	goto	u851
   709     0744  2F47               	goto	u850
   710     0745                     u851:
   711     0745  3001               	movlw	1
   712     0746  2F48               	goto	u860
   713     0747                     u850:
   714     0747  3000               	movlw	0
   715     0748                     u860:
   716     0748  00F3               	movwf	SetBit@value
   717     0749  254A               	fcall	_SetBit
   718                           
   719                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 92:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
   720     074A  087C               	movf	Lcd_WriteChar@config,w
   721     074B  0084               	movwf	4
   722     074C  1383               	bcf	3,7	;select IRP bank0
   723     074D  0800               	movf	0,w
   724     074E  00F0               	movwf	SetBit@port
   725     074F  0A84               	incf	4,f
   726     0750  0800               	movf	0,w
   727     0751  0384               	decf	4,f
   728     0752  00F1               	movwf	SetBit@port+1
   729     0753  087C               	movf	Lcd_WriteChar@config,w
   730     0754  3E07               	addlw	7
   731     0755  0084               	movwf	4
   732     0756  0800               	movf	0,w
   733     0757  00F2               	movwf	SetBit@pin
   734     0758  0879               	movf	Lcd_WriteChar@data,w
   735     0759  00FB               	movwf	??_Lcd_WriteChar+1
   736     075A  3007               	movlw	7
   737     075B                     u875:
   738     075B  1003               	clrc
   739     075C  0CFB               	rrf	??_Lcd_WriteChar+1,f
   740     075D  3EFF               	addlw	-1
   741     075E  1D03               	skipz
   742     075F  2F5B               	goto	u875
   743     0760  187B               	btfsc	??_Lcd_WriteChar+1,0
   744     0761  2F63               	goto	u881
   745     0762  2F65               	goto	u880
   746     0763                     u881:
   747     0763  3001               	movlw	1
   748     0764  2F66               	goto	u890
   749     0765                     u880:
   750     0765  3000               	movlw	0
   751     0766                     u890:
   752     0766  00F3               	movwf	SetBit@value
   753     0767  254A               	fcall	_SetBit
   754                           
   755                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 94:     SetBit(config->port, config->rs_pin, 1);
   756     0768  087C               	movf	Lcd_WriteChar@config,w
   757     0769  0084               	movwf	4
   758     076A  1383               	bcf	3,7	;select IRP bank0
   759     076B  0800               	movf	0,w
   760     076C  00F0               	movwf	SetBit@port
   761     076D  0A84               	incf	4,f
   762     076E  0800               	movf	0,w
   763     076F  0384               	decf	4,f
   764     0770  00F1               	movwf	SetBit@port+1
   765     0771  087C               	movf	Lcd_WriteChar@config,w
   766     0772  3E02               	addlw	2
   767     0773  0084               	movwf	4
   768     0774  0800               	movf	0,w
   769     0775  00F2               	movwf	SetBit@pin
   770     0776  01F3               	clrf	SetBit@value
   771     0777  0AF3               	incf	SetBit@value,f
   772     0778  254A               	fcall	_SetBit
   773                           
   774                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 95:     PulseEnable(config);
   775     0779  087C               	movf	Lcd_WriteChar@config,w
   776     077A  2576               	fcall	_PulseEnable
   777                           
   778                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 98:     SetBit(config->port, config->d4_pin, data & 0x01);
   779     077B  087C               	movf	Lcd_WriteChar@config,w
   780     077C  0084               	movwf	4
   781     077D  1383               	bcf	3,7	;select IRP bank0
   782     077E  0800               	movf	0,w
   783     077F  00F0               	movwf	SetBit@port
   784     0780  0A84               	incf	4,f
   785     0781  0800               	movf	0,w
   786     0782  0384               	decf	4,f
   787     0783  00F1               	movwf	SetBit@port+1
   788     0784  087C               	movf	Lcd_WriteChar@config,w
   789     0785  3E04               	addlw	4
   790     0786  0084               	movwf	4
   791     0787  0800               	movf	0,w
   792     0788  00F2               	movwf	SetBit@pin
   793     0789  1879               	btfsc	Lcd_WriteChar@data,0
   794     078A  2F8C               	goto	u901
   795     078B  2F8E               	goto	u900
   796     078C                     u901:
   797     078C  3001               	movlw	1
   798     078D  2F8F               	goto	u910
   799     078E                     u900:
   800     078E  3000               	movlw	0
   801     078F                     u910:
   802     078F  00F3               	movwf	SetBit@value
   803     0790  254A               	fcall	_SetBit
   804                           
   805                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 99:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
   806     0791  087C               	movf	Lcd_WriteChar@config,w
   807     0792  0084               	movwf	4
   808     0793  1383               	bcf	3,7	;select IRP bank0
   809     0794  0800               	movf	0,w
   810     0795  00F0               	movwf	SetBit@port
   811     0796  0A84               	incf	4,f
   812     0797  0800               	movf	0,w
   813     0798  0384               	decf	4,f
   814     0799  00F1               	movwf	SetBit@port+1
   815     079A  087C               	movf	Lcd_WriteChar@config,w
   816     079B  3E05               	addlw	5
   817     079C  0084               	movwf	4
   818     079D  0800               	movf	0,w
   819     079E  00F2               	movwf	SetBit@pin
   820     079F  0879               	movf	Lcd_WriteChar@data,w
   821     07A0  00FB               	movwf	??_Lcd_WriteChar+1
   822     07A1  3001               	movlw	1
   823     07A2                     u925:
   824     07A2  1003               	clrc
   825     07A3  0CFB               	rrf	??_Lcd_WriteChar+1,f
   826     07A4  3EFF               	addlw	-1
   827     07A5  1D03               	skipz
   828     07A6  2FA2               	goto	u925
   829     07A7  187B               	btfsc	??_Lcd_WriteChar+1,0
   830     07A8  2FAA               	goto	u931
   831     07A9  2FAC               	goto	u930
   832     07AA                     u931:
   833     07AA  3001               	movlw	1
   834     07AB  2FAD               	goto	u940
   835     07AC                     u930:
   836     07AC  3000               	movlw	0
   837     07AD                     u940:
   838     07AD  00F3               	movwf	SetBit@value
   839     07AE  254A               	fcall	_SetBit
   840                           
   841                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 100:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
   842     07AF  087C               	movf	Lcd_WriteChar@config,w
   843     07B0  0084               	movwf	4
   844     07B1  1383               	bcf	3,7	;select IRP bank0
   845     07B2  0800               	movf	0,w
   846     07B3  00F0               	movwf	SetBit@port
   847     07B4  0A84               	incf	4,f
   848     07B5  0800               	movf	0,w
   849     07B6  0384               	decf	4,f
   850     07B7  00F1               	movwf	SetBit@port+1
   851     07B8  087C               	movf	Lcd_WriteChar@config,w
   852     07B9  3E06               	addlw	6
   853     07BA  0084               	movwf	4
   854     07BB  0800               	movf	0,w
   855     07BC  00F2               	movwf	SetBit@pin
   856     07BD  0879               	movf	Lcd_WriteChar@data,w
   857     07BE  00FB               	movwf	??_Lcd_WriteChar+1
   858     07BF  3002               	movlw	2
   859     07C0                     u955:
   860     07C0  1003               	clrc
   861     07C1  0CFB               	rrf	??_Lcd_WriteChar+1,f
   862     07C2  3EFF               	addlw	-1
   863     07C3  1D03               	skipz
   864     07C4  2FC0               	goto	u955
   865     07C5  187B               	btfsc	??_Lcd_WriteChar+1,0
   866     07C6  2FC8               	goto	u961
   867     07C7  2FCA               	goto	u960
   868     07C8                     u961:
   869     07C8  3001               	movlw	1
   870     07C9  2FCB               	goto	u970
   871     07CA                     u960:
   872     07CA  3000               	movlw	0
   873     07CB                     u970:
   874     07CB  00F3               	movwf	SetBit@value
   875     07CC  254A               	fcall	_SetBit
   876                           
   877                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 101:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
   878     07CD  087C               	movf	Lcd_WriteChar@config,w
   879     07CE  0084               	movwf	4
   880     07CF  1383               	bcf	3,7	;select IRP bank0
   881     07D0  0800               	movf	0,w
   882     07D1  00F0               	movwf	SetBit@port
   883     07D2  0A84               	incf	4,f
   884     07D3  0800               	movf	0,w
   885     07D4  0384               	decf	4,f
   886     07D5  00F1               	movwf	SetBit@port+1
   887     07D6  087C               	movf	Lcd_WriteChar@config,w
   888     07D7  3E07               	addlw	7
   889     07D8  0084               	movwf	4
   890     07D9  0800               	movf	0,w
   891     07DA  00F2               	movwf	SetBit@pin
   892     07DB  0879               	movf	Lcd_WriteChar@data,w
   893     07DC  00FB               	movwf	??_Lcd_WriteChar+1
   894     07DD  3003               	movlw	3
   895     07DE                     u985:
   896     07DE  1003               	clrc
   897     07DF  0CFB               	rrf	??_Lcd_WriteChar+1,f
   898     07E0  3EFF               	addlw	-1
   899     07E1  1D03               	skipz
   900     07E2  2FDE               	goto	u985
   901     07E3  187B               	btfsc	??_Lcd_WriteChar+1,0
   902     07E4  2FE6               	goto	u991
   903     07E5  2FE8               	goto	u990
   904     07E6                     u991:
   905     07E6  3001               	movlw	1
   906     07E7  2FE9               	goto	u1000
   907     07E8                     u990:
   908     07E8  3000               	movlw	0
   909     07E9                     u1000:
   910     07E9  00F3               	movwf	SetBit@value
   911     07EA  254A               	fcall	_SetBit
   912                           
   913                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 103:     PulseEnable(config);
   914     07EB  087C               	movf	Lcd_WriteChar@config,w
   915     07EC  2576               	fcall	_PulseEnable
   916     07ED                     l38:
   917     07ED  0008               	return
   918     07EE                     __end_of_Lcd_WriteChar:
   919                           
   920                           	psect	text3
   921     04FD                     __ptext3:	
   922 ;; *************** function _Lcd_SetCursor *****************
   923 ;; Defined at:
   924 ;;		line 160 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  config          1    wreg     PTR struct .
   927 ;;		 -> main@lcdConfig_16F628A(8), 
   928 ;;  row             1    0[BANK0 ] unsigned char 
   929 ;;  column          1    1[BANK0 ] unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  config          1    4[BANK0 ] PTR struct .
   932 ;;		 -> main@lcdConfig_16F628A(8), 
   933 ;;  address         1    5[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   943 ;;      Params:         0       2       0       0
   944 ;;      Locals:         0       2       0       0
   945 ;;      Temps:          0       2       0       0
   946 ;;      Totals:         0       6       0       0
   947 ;;Total ram usage:        6 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 3
   950 ;; This function calls:
   951 ;;		_Lcd_Command
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957     04FD                     _Lcd_SetCursor:	
   958                           ;psect for function _Lcd_SetCursor
   959                           
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   963                           ;Lcd_SetCursor@config stored from wreg
   964     04FD  1283               	bcf	3,5	;RP0=0, select bank0
   965     04FE  1303               	bcf	3,6	;RP1=0, select bank0
   966     04FF  00A4               	movwf	Lcd_SetCursor@config
   967     0500                     l738:
   968                           
   969                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 161:     unsigned char address;;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F
      +                          /projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c: 164:     switch(row) {
   970     0500  2D07               	goto	l746
   971     0501                     l740:
   972                           
   973                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 166:             address = 0x80;
   974     0501  3080               	movlw	128
   975     0502  00A5               	movwf	Lcd_SetCursor@address
   976                           
   977                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 167:             break;
   978     0503  2D17               	goto	l748
   979     0504                     l742:
   980                           
   981                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 169:             address = 0xC0;
   982     0504  30C0               	movlw	192
   983     0505  00A5               	movwf	Lcd_SetCursor@address
   984                           
   985                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 170:             break;
   986     0506  2D17               	goto	l748
   987     0507                     l746:
   988     0507  0820               	movf	Lcd_SetCursor@row,w
   989     0508  00A2               	movwf	??_Lcd_SetCursor
   990     0509  01A3               	clrf	??_Lcd_SetCursor+1
   991                           
   992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   993                           ; Switch size 1, requested type "simple"
   994                           ; Number of cases is 1, Range of values is 0 to 0
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte            4     3 (average)
   998                           ; direct_byte            7     6 (fixed)
   999                           ; jumptable            260     6 (fixed)
  1000                           ;	Chosen strategy is simple_byte
  1001     050A  0823               	movf	??_Lcd_SetCursor+1,w
  1002     050B  3A00               	xorlw	0	; case 0
  1003     050C  1903               	skipnz
  1004     050D  2D0F               	goto	l806
  1005     050E  2D01               	goto	l740
  1006     050F                     l806:
  1007                           
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 2, Range of values is 1 to 2
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            7     4 (average)
  1013                           ; direct_byte           11     9 (fixed)
  1014                           ; jumptable            263     9 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016     050F  0822               	movf	??_Lcd_SetCursor,w
  1017     0510  3A01               	xorlw	1	; case 1
  1018     0511  1903               	skipnz
  1019     0512  2D01               	goto	l740
  1020     0513  3A03               	xorlw	3	; case 2
  1021     0514  1903               	skipnz
  1022     0515  2D04               	goto	l742
  1023     0516  2D01               	goto	l740
  1024     0517                     l748:
  1025                           
  1026                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 176:     address += (column - 1);
  1027     0517  0821               	movf	Lcd_SetCursor@column,w
  1028     0518  3EFF               	addlw	255
  1029     0519  00A2               	movwf	??_Lcd_SetCursor
  1030     051A  0822               	movf	??_Lcd_SetCursor,w
  1031     051B  07A5               	addwf	Lcd_SetCursor@address,f
  1032     051C                     l750:
  1033                           
  1034                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 179:     Lcd_Command(config, address);
  1035     051C  0825               	movf	Lcd_SetCursor@address,w
  1036     051D  00F9               	movwf	Lcd_Command@cmd
  1037     051E  0824               	movf	Lcd_SetCursor@config,w
  1038     051F  25F1               	fcall	_Lcd_Command
  1039     0520                     l58:
  1040     0520  0008               	return
  1041     0521                     __end_of_Lcd_SetCursor:
  1042                           
  1043                           	psect	text4
  1044     05A2                     __ptext4:	
  1045 ;; *************** function _Lcd_Init *****************
  1046 ;; Defined at:
  1047 ;;		line 123 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  config          1    wreg     PTR struct .
  1050 ;;		 -> main@lcdConfig_16F628A(8), 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  config          1    4[BANK0 ] PTR struct .
  1053 ;;		 -> main@lcdConfig_16F628A(8), 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1063 ;;      Params:         0       0       0       0
  1064 ;;      Locals:         0       1       0       0
  1065 ;;      Temps:          0       2       0       0
  1066 ;;      Totals:         0       3       0       0
  1067 ;;Total ram usage:        3 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 4
  1070 ;; This function calls:
  1071 ;;		_Lcd_Clear
  1072 ;;		_Lcd_Command
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078     05A2                     _Lcd_Init:	
  1079                           ;psect for function _Lcd_Init
  1080                           
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1084                           ;Lcd_Init@config stored from wreg
  1085     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1086     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1087     05A4  00A4               	movwf	Lcd_Init@config
  1088     05A5                     l718:
  1089                           
  1090                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 128:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1091     05A5  3014               	movlw	20
  1092     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1093     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1094     05A8  00A3               	movwf	??_Lcd_Init+1
  1095     05A9  3079               	movlw	121
  1096     05AA  00A2               	movwf	??_Lcd_Init
  1097     05AB                     u1037:
  1098     05AB  0BA2               	decfsz	??_Lcd_Init,f
  1099     05AC  2DAB               	goto	u1037
  1100     05AD  0BA3               	decfsz	??_Lcd_Init+1,f
  1101     05AE  2DAB               	goto	u1037
  1102     05AF  0000               	nop
  1103     05B0                     l720:
  1104                           
  1105                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 129:     Lcd_Command(config, 0x03);
  1106     05B0  3003               	movlw	3
  1107     05B1  00F9               	movwf	Lcd_Command@cmd
  1108     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1109     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1110     05B4  0824               	movf	Lcd_Init@config,w
  1111     05B5  25F1               	fcall	_Lcd_Command
  1112     05B6                     l722:
  1113                           
  1114                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 130:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1115     05B6  3007               	movlw	7
  1116     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1117     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1118     05B9  00A3               	movwf	??_Lcd_Init+1
  1119     05BA  307C               	movlw	124
  1120     05BB  00A2               	movwf	??_Lcd_Init
  1121     05BC                     u1047:
  1122     05BC  0BA2               	decfsz	??_Lcd_Init,f
  1123     05BD  2DBC               	goto	u1047
  1124     05BE  0BA3               	decfsz	??_Lcd_Init+1,f
  1125     05BF  2DBC               	goto	u1047
  1126     05C0  2DC1               	nop2
  1127                           
  1128                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 131:     Lcd_Command(config, 0x03);
  1129     05C1  3003               	movlw	3
  1130     05C2  00F9               	movwf	Lcd_Command@cmd
  1131     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1132     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1133     05C5  0824               	movf	Lcd_Init@config,w
  1134     05C6  25F1               	fcall	_Lcd_Command
  1135     05C7                     l724:
  1136                           
  1137                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 132:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1138     05C7  3020               	movlw	32
  1139     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1140     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1141     05CA  00A2               	movwf	??_Lcd_Init
  1142     05CB                     u1057:
  1143     05CB  0BA2               	decfsz	??_Lcd_Init,f
  1144     05CC  2DCB               	goto	u1057
  1145     05CD  2DCE               	nop2
  1146     05CE                     l726:
  1147                           
  1148                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 133:     Lcd_Command(config, 0x03);
  1149     05CE  3003               	movlw	3
  1150     05CF  00F9               	movwf	Lcd_Command@cmd
  1151     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1152     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1153     05D2  0824               	movf	Lcd_Init@config,w
  1154     05D3  25F1               	fcall	_Lcd_Command
  1155     05D4                     l728:
  1156                           
  1157                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 134:     Lcd_Command(config, 0x02);
  1158     05D4  3002               	movlw	2
  1159     05D5  00F9               	movwf	Lcd_Command@cmd
  1160     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1161     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1162     05D8  0824               	movf	Lcd_Init@config,w
  1163     05D9  25F1               	fcall	_Lcd_Command
  1164     05DA                     l730:
  1165                           
  1166                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 136:     Lcd_Command(config, 0x28);
  1167     05DA  3028               	movlw	40
  1168     05DB  00F9               	movwf	Lcd_Command@cmd
  1169     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1170     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1171     05DE  0824               	movf	Lcd_Init@config,w
  1172     05DF  25F1               	fcall	_Lcd_Command
  1173     05E0                     l732:
  1174                           
  1175                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 137:     Lcd_Command(config, 0x0C);
  1176     05E0  300C               	movlw	12
  1177     05E1  00F9               	movwf	Lcd_Command@cmd
  1178     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1179     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1180     05E4  0824               	movf	Lcd_Init@config,w
  1181     05E5  25F1               	fcall	_Lcd_Command
  1182     05E6                     l734:
  1183                           
  1184                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 138:     Lcd_Command(config, 0x06);
  1185     05E6  3006               	movlw	6
  1186     05E7  00F9               	movwf	Lcd_Command@cmd
  1187     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1188     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1189     05EA  0824               	movf	Lcd_Init@config,w
  1190     05EB  25F1               	fcall	_Lcd_Command
  1191     05EC                     l736:
  1192                           
  1193                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 139:     Lcd_Clear(config);
  1194     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1195     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1196     05EE  0824               	movf	Lcd_Init@config,w
  1197     05EF  24D3               	fcall	_Lcd_Clear
  1198     05F0                     l47:
  1199     05F0  0008               	return
  1200     05F1                     __end_of_Lcd_Init:
  1201                           
  1202                           	psect	text5
  1203     04D3                     __ptext5:	
  1204 ;; *************** function _Lcd_Clear *****************
  1205 ;; Defined at:
  1206 ;;		line 147 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  config          1    wreg     PTR struct .
  1209 ;;		 -> main@lcdConfig_16F628A(8), 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  config          1   13[COMMON] PTR struct .
  1212 ;;		 -> main@lcdConfig_16F628A(8), 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1222 ;;      Params:         0       0       0       0
  1223 ;;      Locals:         1       0       0       0
  1224 ;;      Temps:          0       2       0       0
  1225 ;;      Totals:         1       2       0       0
  1226 ;;Total ram usage:        3 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 3
  1229 ;; This function calls:
  1230 ;;		_Lcd_Command
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;;		_Lcd_Init
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237     04D3                     _Lcd_Clear:	
  1238                           ;psect for function _Lcd_Clear
  1239                           
  1240                           
  1241                           ;incstack = 0
  1242                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1243                           ;Lcd_Clear@config stored from wreg
  1244     04D3  00FD               	movwf	Lcd_Clear@config
  1245     04D4                     l712:
  1246                           
  1247                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 148:     Lcd_Command(config, 0x01);
  1248     04D4  01F9               	clrf	Lcd_Command@cmd
  1249     04D5  0AF9               	incf	Lcd_Command@cmd,f
  1250     04D6  087D               	movf	Lcd_Clear@config,w
  1251     04D7  25F1               	fcall	_Lcd_Command
  1252     04D8                     l714:
  1253                           
  1254                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 149:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1255     04D8  3003               	movlw	3
  1256     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1257     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1258     04DB  00A1               	movwf	??_Lcd_Clear+1
  1259     04DC  3097               	movlw	151
  1260     04DD  00A0               	movwf	??_Lcd_Clear
  1261     04DE                     u1067:
  1262     04DE  0BA0               	decfsz	??_Lcd_Clear,f
  1263     04DF  2CDE               	goto	u1067
  1264     04E0  0BA1               	decfsz	??_Lcd_Clear+1,f
  1265     04E1  2CDE               	goto	u1067
  1266     04E2  0000               	nop
  1267     04E3                     l50:
  1268     04E3  0008               	return
  1269     04E4                     __end_of_Lcd_Clear:
  1270                           
  1271                           	psect	text6
  1272     05F1                     __ptext6:	
  1273 ;; *************** function _Lcd_Command *****************
  1274 ;; Defined at:
  1275 ;;		line 61 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  config          1    wreg     PTR struct .
  1278 ;;		 -> main@lcdConfig_16F628A(8), 
  1279 ;;  cmd             1    9[COMMON] unsigned char 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  config          1   12[COMMON] PTR struct .
  1282 ;;		 -> main@lcdConfig_16F628A(8), 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1292 ;;      Params:         1       0       0       0
  1293 ;;      Locals:         1       0       0       0
  1294 ;;      Temps:          2       0       0       0
  1295 ;;      Totals:         4       0       0       0
  1296 ;;Total ram usage:        4 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 2
  1299 ;; This function calls:
  1300 ;;		_PulseEnable
  1301 ;;		_SetBit
  1302 ;; This function is called by:
  1303 ;;		_Lcd_Init
  1304 ;;		_Lcd_Clear
  1305 ;;		_Lcd_SetCursor
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309     05F1                     _Lcd_Command:	
  1310                           ;psect for function _Lcd_Command
  1311                           
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1315                           ;Lcd_Command@config stored from wreg
  1316     05F1  00FC               	movwf	Lcd_Command@config
  1317     05F2                     l710:
  1318                           
  1319                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 63:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1320     05F2  087C               	movf	Lcd_Command@config,w
  1321     05F3  0084               	movwf	4
  1322     05F4  1383               	bcf	3,7	;select IRP bank0
  1323     05F5  0800               	movf	0,w
  1324     05F6  00F0               	movwf	SetBit@port
  1325     05F7  0A84               	incf	4,f
  1326     05F8  0800               	movf	0,w
  1327     05F9  0384               	decf	4,f
  1328     05FA  00F1               	movwf	SetBit@port+1
  1329     05FB  087C               	movf	Lcd_Command@config,w
  1330     05FC  3E04               	addlw	4
  1331     05FD  0084               	movwf	4
  1332     05FE  0800               	movf	0,w
  1333     05FF  00F2               	movwf	SetBit@pin
  1334     0600  0879               	movf	Lcd_Command@cmd,w
  1335     0601  00FB               	movwf	??_Lcd_Command+1
  1336     0602  3004               	movlw	4
  1337     0603                     u555:
  1338     0603  1003               	clrc
  1339     0604  0CFB               	rrf	??_Lcd_Command+1,f
  1340     0605  3EFF               	addlw	-1
  1341     0606  1D03               	skipz
  1342     0607  2E03               	goto	u555
  1343     0608  187B               	btfsc	??_Lcd_Command+1,0
  1344     0609  2E0B               	goto	u561
  1345     060A  2E0D               	goto	u560
  1346     060B                     u561:
  1347     060B  3001               	movlw	1
  1348     060C  2E0E               	goto	u570
  1349     060D                     u560:
  1350     060D  3000               	movlw	0
  1351     060E                     u570:
  1352     060E  00F3               	movwf	SetBit@value
  1353     060F  254A               	fcall	_SetBit
  1354                           
  1355                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 64:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1356     0610  087C               	movf	Lcd_Command@config,w
  1357     0611  0084               	movwf	4
  1358     0612  1383               	bcf	3,7	;select IRP bank0
  1359     0613  0800               	movf	0,w
  1360     0614  00F0               	movwf	SetBit@port
  1361     0615  0A84               	incf	4,f
  1362     0616  0800               	movf	0,w
  1363     0617  0384               	decf	4,f
  1364     0618  00F1               	movwf	SetBit@port+1
  1365     0619  087C               	movf	Lcd_Command@config,w
  1366     061A  3E05               	addlw	5
  1367     061B  0084               	movwf	4
  1368     061C  0800               	movf	0,w
  1369     061D  00F2               	movwf	SetBit@pin
  1370     061E  0879               	movf	Lcd_Command@cmd,w
  1371     061F  00FB               	movwf	??_Lcd_Command+1
  1372     0620  3005               	movlw	5
  1373     0621                     u585:
  1374     0621  1003               	clrc
  1375     0622  0CFB               	rrf	??_Lcd_Command+1,f
  1376     0623  3EFF               	addlw	-1
  1377     0624  1D03               	skipz
  1378     0625  2E21               	goto	u585
  1379     0626  187B               	btfsc	??_Lcd_Command+1,0
  1380     0627  2E29               	goto	u591
  1381     0628  2E2B               	goto	u590
  1382     0629                     u591:
  1383     0629  3001               	movlw	1
  1384     062A  2E2C               	goto	u600
  1385     062B                     u590:
  1386     062B  3000               	movlw	0
  1387     062C                     u600:
  1388     062C  00F3               	movwf	SetBit@value
  1389     062D  254A               	fcall	_SetBit
  1390                           
  1391                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 65:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  1392     062E  087C               	movf	Lcd_Command@config,w
  1393     062F  0084               	movwf	4
  1394     0630  1383               	bcf	3,7	;select IRP bank0
  1395     0631  0800               	movf	0,w
  1396     0632  00F0               	movwf	SetBit@port
  1397     0633  0A84               	incf	4,f
  1398     0634  0800               	movf	0,w
  1399     0635  0384               	decf	4,f
  1400     0636  00F1               	movwf	SetBit@port+1
  1401     0637  087C               	movf	Lcd_Command@config,w
  1402     0638  3E06               	addlw	6
  1403     0639  0084               	movwf	4
  1404     063A  0800               	movf	0,w
  1405     063B  00F2               	movwf	SetBit@pin
  1406     063C  0879               	movf	Lcd_Command@cmd,w
  1407     063D  00FB               	movwf	??_Lcd_Command+1
  1408     063E  3006               	movlw	6
  1409     063F                     u615:
  1410     063F  1003               	clrc
  1411     0640  0CFB               	rrf	??_Lcd_Command+1,f
  1412     0641  3EFF               	addlw	-1
  1413     0642  1D03               	skipz
  1414     0643  2E3F               	goto	u615
  1415     0644  187B               	btfsc	??_Lcd_Command+1,0
  1416     0645  2E47               	goto	u621
  1417     0646  2E49               	goto	u620
  1418     0647                     u621:
  1419     0647  3001               	movlw	1
  1420     0648  2E4A               	goto	u630
  1421     0649                     u620:
  1422     0649  3000               	movlw	0
  1423     064A                     u630:
  1424     064A  00F3               	movwf	SetBit@value
  1425     064B  254A               	fcall	_SetBit
  1426                           
  1427                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 66:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  1428     064C  087C               	movf	Lcd_Command@config,w
  1429     064D  0084               	movwf	4
  1430     064E  1383               	bcf	3,7	;select IRP bank0
  1431     064F  0800               	movf	0,w
  1432     0650  00F0               	movwf	SetBit@port
  1433     0651  0A84               	incf	4,f
  1434     0652  0800               	movf	0,w
  1435     0653  0384               	decf	4,f
  1436     0654  00F1               	movwf	SetBit@port+1
  1437     0655  087C               	movf	Lcd_Command@config,w
  1438     0656  3E07               	addlw	7
  1439     0657  0084               	movwf	4
  1440     0658  0800               	movf	0,w
  1441     0659  00F2               	movwf	SetBit@pin
  1442     065A  0879               	movf	Lcd_Command@cmd,w
  1443     065B  00FB               	movwf	??_Lcd_Command+1
  1444     065C  3007               	movlw	7
  1445     065D                     u645:
  1446     065D  1003               	clrc
  1447     065E  0CFB               	rrf	??_Lcd_Command+1,f
  1448     065F  3EFF               	addlw	-1
  1449     0660  1D03               	skipz
  1450     0661  2E5D               	goto	u645
  1451     0662  187B               	btfsc	??_Lcd_Command+1,0
  1452     0663  2E65               	goto	u651
  1453     0664  2E67               	goto	u650
  1454     0665                     u651:
  1455     0665  3001               	movlw	1
  1456     0666  2E68               	goto	u660
  1457     0667                     u650:
  1458     0667  3000               	movlw	0
  1459     0668                     u660:
  1460     0668  00F3               	movwf	SetBit@value
  1461     0669  254A               	fcall	_SetBit
  1462                           
  1463                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 68:     SetBit(config->port, config->rs_pin, 0);
  1464     066A  087C               	movf	Lcd_Command@config,w
  1465     066B  0084               	movwf	4
  1466     066C  1383               	bcf	3,7	;select IRP bank0
  1467     066D  0800               	movf	0,w
  1468     066E  00F0               	movwf	SetBit@port
  1469     066F  0A84               	incf	4,f
  1470     0670  0800               	movf	0,w
  1471     0671  0384               	decf	4,f
  1472     0672  00F1               	movwf	SetBit@port+1
  1473     0673  087C               	movf	Lcd_Command@config,w
  1474     0674  3E02               	addlw	2
  1475     0675  0084               	movwf	4
  1476     0676  0800               	movf	0,w
  1477     0677  00F2               	movwf	SetBit@pin
  1478     0678  01F3               	clrf	SetBit@value
  1479     0679  254A               	fcall	_SetBit
  1480                           
  1481                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 69:     PulseEnable(config);
  1482     067A  087C               	movf	Lcd_Command@config,w
  1483     067B  2576               	fcall	_PulseEnable
  1484                           
  1485                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 72:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  1486     067C  087C               	movf	Lcd_Command@config,w
  1487     067D  0084               	movwf	4
  1488     067E  1383               	bcf	3,7	;select IRP bank0
  1489     067F  0800               	movf	0,w
  1490     0680  00F0               	movwf	SetBit@port
  1491     0681  0A84               	incf	4,f
  1492     0682  0800               	movf	0,w
  1493     0683  0384               	decf	4,f
  1494     0684  00F1               	movwf	SetBit@port+1
  1495     0685  087C               	movf	Lcd_Command@config,w
  1496     0686  3E04               	addlw	4
  1497     0687  0084               	movwf	4
  1498     0688  0800               	movf	0,w
  1499     0689  00F2               	movwf	SetBit@pin
  1500     068A  1879               	btfsc	Lcd_Command@cmd,0
  1501     068B  2E8D               	goto	u671
  1502     068C  2E8F               	goto	u670
  1503     068D                     u671:
  1504     068D  3001               	movlw	1
  1505     068E  2E90               	goto	u680
  1506     068F                     u670:
  1507     068F  3000               	movlw	0
  1508     0690                     u680:
  1509     0690  00F3               	movwf	SetBit@value
  1510     0691  254A               	fcall	_SetBit
  1511                           
  1512                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 73:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  1513     0692  087C               	movf	Lcd_Command@config,w
  1514     0693  0084               	movwf	4
  1515     0694  1383               	bcf	3,7	;select IRP bank0
  1516     0695  0800               	movf	0,w
  1517     0696  00F0               	movwf	SetBit@port
  1518     0697  0A84               	incf	4,f
  1519     0698  0800               	movf	0,w
  1520     0699  0384               	decf	4,f
  1521     069A  00F1               	movwf	SetBit@port+1
  1522     069B  087C               	movf	Lcd_Command@config,w
  1523     069C  3E05               	addlw	5
  1524     069D  0084               	movwf	4
  1525     069E  0800               	movf	0,w
  1526     069F  00F2               	movwf	SetBit@pin
  1527     06A0  0879               	movf	Lcd_Command@cmd,w
  1528     06A1  00FB               	movwf	??_Lcd_Command+1
  1529     06A2  3001               	movlw	1
  1530     06A3                     u695:
  1531     06A3  1003               	clrc
  1532     06A4  0CFB               	rrf	??_Lcd_Command+1,f
  1533     06A5  3EFF               	addlw	-1
  1534     06A6  1D03               	skipz
  1535     06A7  2EA3               	goto	u695
  1536     06A8  187B               	btfsc	??_Lcd_Command+1,0
  1537     06A9  2EAB               	goto	u701
  1538     06AA  2EAD               	goto	u700
  1539     06AB                     u701:
  1540     06AB  3001               	movlw	1
  1541     06AC  2EAE               	goto	u710
  1542     06AD                     u700:
  1543     06AD  3000               	movlw	0
  1544     06AE                     u710:
  1545     06AE  00F3               	movwf	SetBit@value
  1546     06AF  254A               	fcall	_SetBit
  1547                           
  1548                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 74:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  1549     06B0  087C               	movf	Lcd_Command@config,w
  1550     06B1  0084               	movwf	4
  1551     06B2  1383               	bcf	3,7	;select IRP bank0
  1552     06B3  0800               	movf	0,w
  1553     06B4  00F0               	movwf	SetBit@port
  1554     06B5  0A84               	incf	4,f
  1555     06B6  0800               	movf	0,w
  1556     06B7  0384               	decf	4,f
  1557     06B8  00F1               	movwf	SetBit@port+1
  1558     06B9  087C               	movf	Lcd_Command@config,w
  1559     06BA  3E06               	addlw	6
  1560     06BB  0084               	movwf	4
  1561     06BC  0800               	movf	0,w
  1562     06BD  00F2               	movwf	SetBit@pin
  1563     06BE  0879               	movf	Lcd_Command@cmd,w
  1564     06BF  00FB               	movwf	??_Lcd_Command+1
  1565     06C0  3002               	movlw	2
  1566     06C1                     u725:
  1567     06C1  1003               	clrc
  1568     06C2  0CFB               	rrf	??_Lcd_Command+1,f
  1569     06C3  3EFF               	addlw	-1
  1570     06C4  1D03               	skipz
  1571     06C5  2EC1               	goto	u725
  1572     06C6  187B               	btfsc	??_Lcd_Command+1,0
  1573     06C7  2EC9               	goto	u731
  1574     06C8  2ECB               	goto	u730
  1575     06C9                     u731:
  1576     06C9  3001               	movlw	1
  1577     06CA  2ECC               	goto	u740
  1578     06CB                     u730:
  1579     06CB  3000               	movlw	0
  1580     06CC                     u740:
  1581     06CC  00F3               	movwf	SetBit@value
  1582     06CD  254A               	fcall	_SetBit
  1583                           
  1584                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 75:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  1585     06CE  087C               	movf	Lcd_Command@config,w
  1586     06CF  0084               	movwf	4
  1587     06D0  1383               	bcf	3,7	;select IRP bank0
  1588     06D1  0800               	movf	0,w
  1589     06D2  00F0               	movwf	SetBit@port
  1590     06D3  0A84               	incf	4,f
  1591     06D4  0800               	movf	0,w
  1592     06D5  0384               	decf	4,f
  1593     06D6  00F1               	movwf	SetBit@port+1
  1594     06D7  087C               	movf	Lcd_Command@config,w
  1595     06D8  3E07               	addlw	7
  1596     06D9  0084               	movwf	4
  1597     06DA  0800               	movf	0,w
  1598     06DB  00F2               	movwf	SetBit@pin
  1599     06DC  0879               	movf	Lcd_Command@cmd,w
  1600     06DD  00FB               	movwf	??_Lcd_Command+1
  1601     06DE  3003               	movlw	3
  1602     06DF                     u755:
  1603     06DF  1003               	clrc
  1604     06E0  0CFB               	rrf	??_Lcd_Command+1,f
  1605     06E1  3EFF               	addlw	-1
  1606     06E2  1D03               	skipz
  1607     06E3  2EDF               	goto	u755
  1608     06E4  187B               	btfsc	??_Lcd_Command+1,0
  1609     06E5  2EE7               	goto	u761
  1610     06E6  2EE9               	goto	u760
  1611     06E7                     u761:
  1612     06E7  3001               	movlw	1
  1613     06E8  2EEA               	goto	u770
  1614     06E9                     u760:
  1615     06E9  3000               	movlw	0
  1616     06EA                     u770:
  1617     06EA  00F3               	movwf	SetBit@value
  1618     06EB  254A               	fcall	_SetBit
  1619                           
  1620                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 77:     PulseEnable(config);
  1621     06EC  087C               	movf	Lcd_Command@config,w
  1622     06ED  2576               	fcall	_PulseEnable
  1623     06EE                     l35:
  1624     06EE  0008               	return
  1625     06EF                     __end_of_Lcd_Command:
  1626                           
  1627                           	psect	text7
  1628     0576                     __ptext7:	
  1629 ;; *************** function _PulseEnable *****************
  1630 ;; Defined at:
  1631 ;;		line 47 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  config          1    wreg     PTR struct .
  1634 ;;		 -> main@lcdConfig_16F628A(8), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  config          1    8[COMMON] PTR struct .
  1637 ;;		 -> main@lcdConfig_16F628A(8), 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1647 ;;      Params:         0       0       0       0
  1648 ;;      Locals:         1       0       0       0
  1649 ;;      Temps:          2       0       0       0
  1650 ;;      Totals:         3       0       0       0
  1651 ;;Total ram usage:        3 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 1
  1654 ;; This function calls:
  1655 ;;		_SetBit
  1656 ;; This function is called by:
  1657 ;;		_Lcd_Command
  1658 ;;		_Lcd_WriteChar
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662     0576                     _PulseEnable:	
  1663                           ;psect for function _PulseEnable
  1664                           
  1665                           
  1666                           ;incstack = 0
  1667                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1668                           ;PulseEnable@config stored from wreg
  1669     0576  00F8               	movwf	PulseEnable@config
  1670     0577                     l704:
  1671                           
  1672                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 48:     SetBit(config->port, config->en_pin, 1);
  1673     0577  0878               	movf	PulseEnable@config,w
  1674     0578  0084               	movwf	4
  1675     0579  1383               	bcf	3,7	;select IRP bank0
  1676     057A  0800               	movf	0,w
  1677     057B  00F0               	movwf	SetBit@port
  1678     057C  0A84               	incf	4,f
  1679     057D  0800               	movf	0,w
  1680     057E  0384               	decf	4,f
  1681     057F  00F1               	movwf	SetBit@port+1
  1682     0580  0878               	movf	PulseEnable@config,w
  1683     0581  3E03               	addlw	3
  1684     0582  0084               	movwf	4
  1685     0583  0800               	movf	0,w
  1686     0584  00F2               	movwf	SetBit@pin
  1687     0585  01F3               	clrf	SetBit@value
  1688     0586  0AF3               	incf	SetBit@value,f
  1689     0587  254A               	fcall	_SetBit
  1690     0588                     l706:
  1691                           
  1692                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1693     0588  3003               	movlw	3
  1694     0589  00F7               	movwf	??_PulseEnable+1
  1695     058A  3097               	movlw	151
  1696     058B  00F6               	movwf	??_PulseEnable
  1697     058C                     u1077:
  1698     058C  0BF6               	decfsz	??_PulseEnable,f
  1699     058D  2D8C               	goto	u1077
  1700     058E  0BF7               	decfsz	??_PulseEnable+1,f
  1701     058F  2D8C               	goto	u1077
  1702     0590  2D91               	nop2
  1703     0591                     l708:
  1704                           
  1705                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 50:     SetBit(config->port, config->en_pin, 0);
  1706     0591  0878               	movf	PulseEnable@config,w
  1707     0592  0084               	movwf	4
  1708     0593  1383               	bcf	3,7	;select IRP bank0
  1709     0594  0800               	movf	0,w
  1710     0595  00F0               	movwf	SetBit@port
  1711     0596  0A84               	incf	4,f
  1712     0597  0800               	movf	0,w
  1713     0598  0384               	decf	4,f
  1714     0599  00F1               	movwf	SetBit@port+1
  1715     059A  0878               	movf	PulseEnable@config,w
  1716     059B  3E03               	addlw	3
  1717     059C  0084               	movwf	4
  1718     059D  0800               	movf	0,w
  1719     059E  00F2               	movwf	SetBit@pin
  1720     059F  01F3               	clrf	SetBit@value
  1721     05A0  254A               	fcall	_SetBit
  1722     05A1                     l32:
  1723     05A1  0008               	return
  1724     05A2                     __end_of_PulseEnable:
  1725                           
  1726                           	psect	text8
  1727     054A                     __ptext8:	
  1728 ;; *************** function _SetBit *****************
  1729 ;; Defined at:
  1730 ;;		line 33 in file "/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pic16flcd.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  1733 ;;		 -> PORTB(1), 
  1734 ;;  pin             1    2[COMMON] unsigned char 
  1735 ;;  value           1    3[COMMON] _Bool 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1747 ;;      Params:         4       0       0       0
  1748 ;;      Locals:         0       0       0       0
  1749 ;;      Temps:          2       0       0       0
  1750 ;;      Totals:         6       0       0       0
  1751 ;;Total ram usage:        6 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_PulseEnable
  1757 ;;		_Lcd_Command
  1758 ;;		_Lcd_WriteChar
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762     054A                     _SetBit:	
  1763                           ;psect for function _SetBit
  1764                           
  1765     054A                     l698:	
  1766                           ;incstack = 0
  1767                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  1768                           
  1769                           
  1770                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 34:     if (value) {
  1771     054A  0873               	movf	SetBit@value,w
  1772     054B  1903               	btfsc	3,2
  1773     054C  2D4E               	goto	u521
  1774     054D  2D4F               	goto	u520
  1775     054E                     u521:
  1776     054E  2D62               	goto	l702
  1777     054F                     u520:
  1778     054F                     l700:
  1779                           
  1780                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 35:         *port |= (1 << pin);
  1781     054F  3001               	movlw	1
  1782     0550  00F4               	movwf	??_SetBit
  1783     0551  0A72               	incf	SetBit@pin,w
  1784     0552  2D55               	goto	u534
  1785     0553                     u535:
  1786     0553  1003               	clrc
  1787     0554  0DF4               	rlf	??_SetBit,f
  1788     0555                     u534:
  1789     0555  3EFF               	addlw	-1
  1790     0556  1D03               	skipz
  1791     0557  2D53               	goto	u535
  1792     0558  0874               	movf	??_SetBit,w
  1793     0559  00F5               	movwf	??_SetBit+1
  1794     055A  0870               	movf	SetBit@port,w
  1795     055B  0084               	movwf	4
  1796     055C  1783               	bsf	3,7
  1797     055D  1C71               	btfss	SetBit@port+1,0
  1798     055E  1383               	bcf	3,7
  1799     055F  0875               	movf	??_SetBit+1,w
  1800     0560  0480               	iorwf	0,f
  1801                           
  1802                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 36:     } else {
  1803     0561  2D75               	goto	l29
  1804     0562                     l702:
  1805                           
  1806                           ;/Users/rcaratti/Desenvolvimento/eu/PIC/PIC16F/projects/03-PIC16F_LCD16x2/lcd_library/pi
      +                          c16flcd.c: 37:         *port &= ~(1 << pin);
  1807     0562  3001               	movlw	1
  1808     0563  00F4               	movwf	??_SetBit
  1809     0564  0A72               	incf	SetBit@pin,w
  1810     0565  2D68               	goto	u544
  1811     0566                     u545:
  1812     0566  1003               	clrc
  1813     0567  0DF4               	rlf	??_SetBit,f
  1814     0568                     u544:
  1815     0568  3EFF               	addlw	-1
  1816     0569  1D03               	skipz
  1817     056A  2D66               	goto	u545
  1818     056B  0874               	movf	??_SetBit,w
  1819     056C  3AFF               	xorlw	255
  1820     056D  00F5               	movwf	??_SetBit+1
  1821     056E  0870               	movf	SetBit@port,w
  1822     056F  0084               	movwf	4
  1823     0570  1783               	bsf	3,7
  1824     0571  1C71               	btfss	SetBit@port+1,0
  1825     0572  1383               	bcf	3,7
  1826     0573  0875               	movf	??_SetBit+1,w
  1827     0574  0580               	andwf	0,f
  1828     0575                     l29:
  1829     0575  0008               	return
  1830     0576                     __end_of_SetBit:
  1831     007E                     btemp	set	126	;btemp
  1832     007E                     wtemp0	set	126
  1833                           
  1834                           	psect	config
  1835                           
  1836                           ;Config register CONFIG @ 0x2007
  1837                           ;	Oscillator Selection bits
  1838                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1839                           ;	Watchdog Timer Enable bit
  1840                           ;	WDTE = OFF, WDT disabled
  1841                           ;	Power-up Timer Enable bit
  1842                           ;	PWRTE = OFF, PWRT disabled
  1843                           ;	RA5/MCLR/VPP Pin Function Select bit
  1844                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1845                           ;	Brown-out Detect Enable bit
  1846                           ;	BOREN = OFF, BOD disabled
  1847                           ;	Low-Voltage Programming Enable bit
  1848                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1849                           ;	Data EE Memory Code Protection bit
  1850                           ;	CPD = OFF, Data memory code protection off
  1851                           ;	Flash Program Memory Code Protection bit
  1852                           ;	CP = OFF, Code protection off
  1853     2007                     	org	8199
  1854     2007  3F38               	dw	16184

Data Sizes:
    Strings     9
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      26
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    F652$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    lcdConfig_16F628A$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   55880
                                              6 BANK0     12    12      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     2      1   10461
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10285
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11434
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22611
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11245
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11157
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteString
     _Lcd_WriteChar
       _PulseEnable
       _SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1A       3       32.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      10        0.0%
ABS                  0      0      28       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 11:19:04 2023

                      pc 0002                       l32 05A1                       l17 0548  
                     l50 04E3                       l18 0548                       l35 06EE  
                     l44 04FC                       l29 0575                       l38 07ED  
                     l47 05F0                       l58 0520           Lcd_Init@config 0024  
                     fsr 0004                      l700 054F                      l702 0562  
                    l710 05F2                      l704 0577                      l712 04D4  
                    l720 05B0                      l706 0588                      l714 04D8  
                    l730 05DA                      l722 05B6                      l708 0591  
                    l732 05E0                      l724 05C7                      l740 0501  
                    l716 06F0                      l734 05E6                      l726 05CE  
                    l718 05A5                      l750 051C                      l806 050F  
                    l742 0504                      l736 05EC                      l728 05D4  
                    l760 04E8                      l746 0507                      l738 0500  
                    l762 04EE                      l770 053A                      l748 0517  
                    l764 04F4                      l772 053C                      l758 04E7  
                    l774 0544                      l766 0521                      l768 0538  
                    l698 054A                      u520 054F                      u600 062C  
                    u521 054E                      u700 06AD                      u620 0649  
                    u701 06AB                      u621 0647                      u534 0555  
                    u710 06AE                      u630 064A                      u535 0553  
                    u615 063F                      u544 0568                      u560 060D  
                    u800 070C                      u545 0566                      u561 060B  
                    u730 06CB                      u650 0667                      u570 060E  
                    u731 06C9                      u651 0665                      u555 0603  
                    u740 06CC                      u660 0668                      u900 078E  
                    u820 0729                      u725 06C1                      u645 065D  
                    u901 078C                      u821 0727                      u670 068F  
                    u590 062B                      u910 078F                      u830 072A  
                    u671 068D                      u591 0629                      u815 071F  
                    u760 06E9                      u680 0690                      u761 06E7  
                    u585 0621                      u770 06EA                      u930 07AC  
                    u850 0747                      u755 06DF                      u931 07AA  
                    u851 0745                      u940 07AD                      u860 0748  
                    u925 07A2                      u845 073D                      u790 070B  
                    u695 06A3                      u791 0709                      u960 07CA  
                    u880 0765                      u961 07C8                      u881 0763  
                    u785 0701                      u970 07CB                      u890 0766  
                    u955 07C0                      u875 075B                      u990 07E8  
                    u991 07E6                      u985 07DE                      fsr0 0004  
       ?_Lcd_WriteString 007D                      indf 0000      __end_of_Lcd_Command 06EF  
                   STR_1 0007                     u1000 07E9                     u1010 04FC  
                   u1011 04FB                     u1020 052B                     u1037 05AB  
                   u1047 05BC                     u1057 05CB                     u1067 04DE  
                   u1077 058C       Lcd_WriteString@str 007D                     _main 0521  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006               SetBit@port 0070                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Init 05F1  
      PulseEnable@config 0078          __initialization 07EE             __end_of_main 054A  
            _Lcd_Command 05F1                   ??_main 0026    __end_of_Lcd_SetCursor 0521  
                 _SetBit 054A     Lcd_SetCursor@address 0025              SetBit@value 0073  
  __end_of_Lcd_WriteChar 07EE  __end_of__initialization 07FE            ??_PulseEnable 0076  
      __end_of_Lcd_Clear 04E4           __pcstackCOMMON 0070             __pidataBANK0 04CB  
              ?_Lcd_Init 0070                  ?_SetBit 0070               __pmaintext 0521  
    __end_of_PulseEnable 05A2               ??_Lcd_Init 0022    Lcd_WriteString@config 0021  
             __stringtab 0001        Lcd_WriteChar@data 0079             ?_Lcd_Command 0079  
                __ptext1 04E4                  __ptext2 06EF                  __ptext3 04FD  
                __ptext4 05A2                  __ptext5 04D3                  __ptext6 05F1  
                __ptext7 0576                  __ptext8 054A     end_of_initialization 07FE  
       Lcd_SetCursor@row 0020              _PulseEnable 0576        ??_Lcd_WriteString 0020  
              _Lcd_Clear 04D3           __end_of_SetBit 0576                SetBit@pin 0072  
    start_initialization 07EE                 ??_SetBit 0074               ?_Lcd_Clear 0070  
    Lcd_SetCursor@config 0024      Lcd_SetCursor@column 0021              __pdataBANK0 0032  
      Lcd_Command@config 007C      Lcd_WriteChar@config 007C                ___latbits 0000  
          __pcstackBANK0 0020            _Lcd_SetCursor 04FD                __pstrings 0001  
          _Lcd_WriteChar 06EF           ?_Lcd_SetCursor 0020             ?_PulseEnable 0070  
            ??_Lcd_Clear 0020          Lcd_Clear@config 007D              __stringbase 0006  
         ?_Lcd_WriteChar 0079                 _Lcd_Init 05A2          _Lcd_WriteString 04E4  
     __end_of__stringtab 0007          ??_Lcd_SetCursor 0022                 main@F652 0032  
        ??_Lcd_WriteChar 007A  __end_of_Lcd_WriteString 04FD                stringcode 0001  
  main@lcdConfig_16F628A 002A            ??_Lcd_Command 007A           Lcd_Command@cmd 0079  
               stringdir 0001                 stringtab 0001  
