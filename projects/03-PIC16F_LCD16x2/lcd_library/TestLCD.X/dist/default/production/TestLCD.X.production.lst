

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 10:39:02 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F628A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  008C                     	;# 
    74  008E                     	;# 
    75  0092                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0092                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009F                     	;# 
   120                           
   121                           	psect	idataBANK0
   122  0000'                    __pidataBANK0:
   123                           
   124                           ;initializer for main@F652
   125  0000' 3406               	retlw	6
   126  0001' 3400               	retlw	0
   127  0002' 3400               	retlw	0
   128  0003' 3401               	retlw	1
   129  0004' 3404               	retlw	4
   130  0005' 3405               	retlw	5
   131  0006' 3406               	retlw	6
   132  0007' 3407               	retlw	7
   133                           
   134                           	psect	strings
   135  0000'                    __pstrings:
   136  0000'                    stringtab:
   137  0000'                    __stringtab:
   138  0000'                    stringcode:	
   139                           ;	String table - string pointers are 1 byte each
   140                           
   141  0000'                    stringdir:
   142  0000' 3000'              	movlw	high stringdir
   143  0001' 008A               	movwf	10
   144  0002' 0804               	movf	4,w
   145  0003' 0A84               	incf	4,f
   146  0004' 0782               	addwf	2,f
   147  0005'                    __stringbase:
   148  0005' 3400               	retlw	0
   149  0006'                    __end_of__stringtab:
   150  0006'                    STR_1:
   151  0006' 344F               	retlw	79	;'O'
   152  0007' 3469               	retlw	105	;'i'
   153  0008' 3420               	retlw	32	;' '
   154  0009' 344D               	retlw	77	;'M'
   155  000A' 3475               	retlw	117	;'u'
   156  000B' 346E               	retlw	110	;'n'
   157  000C' 3464               	retlw	100	;'d'
   158  000D' 346F               	retlw	111	;'o'
   159  000E' 3400               	retlw	0
   160                           
   161                           	psect	cinit
   162  0000'                    start_initialization:	
   163                           ; #config settings
   164                           
   165  0000'                    __initialization:
   166                           
   167                           ; Initialize objects allocated to BANK0
   168  0000' 2000'              	fcall	__pidataBANK0	;fetch initializer
   169  0001' 0080'              	movwf	__pdataBANK0& (0+127)
   170  0002' 2000'              	fcall	__pidataBANK0+1	;fetch initializer
   171  0003' 0080'              	movwf	(__pdataBANK0+1)& (0+127)
   172  0004' 2000'              	fcall	__pidataBANK0+2	;fetch initializer
   173  0005' 0080'              	movwf	(__pdataBANK0+2)& (0+127)
   174  0006' 2000'              	fcall	__pidataBANK0+3	;fetch initializer
   175  0007' 0080'              	movwf	(__pdataBANK0+3)& (0+127)
   176  0008' 2000'              	fcall	__pidataBANK0+4	;fetch initializer
   177  0009' 0080'              	movwf	(__pdataBANK0+4)& (0+127)
   178  000A' 2000'              	fcall	__pidataBANK0+5	;fetch initializer
   179  000B' 0080'              	movwf	(__pdataBANK0+5)& (0+127)
   180  000C' 2000'              	fcall	__pidataBANK0+6	;fetch initializer
   181  000D' 0080'              	movwf	(__pdataBANK0+6)& (0+127)
   182  000E' 2000'              	fcall	__pidataBANK0+7	;fetch initializer
   183  000F' 0080'              	movwf	(__pdataBANK0+7)& (0+127)
   184  0010'                    end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  0010'                    __end_of__initialization:
   188  0010' 0183               	clrf	3
   189  0011' 2800'              	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	dataBANK0
   192  0000'                    __pdataBANK0:
   193  0000'                    main@F652:
   194  0000'                    	ds	8
   195                           
   196                           	psect	cstackCOMMON
   197  0000'                    __pcstackCOMMON:
   198  0000'                    ?_Lcd_Init:
   199  0000'                    ??_Lcd_Init:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0000'                    ?_Lcd_Clear:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0000'                    ??_Lcd_Clear:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0000'                    ?_Lcd_SetCursor:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0000'                    ??_Lcd_SetCursor:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0000'                    ?_Lcd_WriteString:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0000'                    ??_Lcd_WriteString:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0000'                    ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0000'                    ??_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0000'                    _Lcd_Init$0:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0000'                    _Lcd_Clear$0:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0000'                    _Lcd_SetCursor$0:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0000'                    _Lcd_SetCursor$1:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0000'                    _Lcd_WriteString$0:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0000'                    _Lcd_WriteString$1:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246  0000'                    	ds	1
   247  0001'                    _Lcd_SetCursor$2:
   248                           
   249                           ; 1 bytes @ 0x1
   250  0001'                    	ds	3
   251  0004'                    main@lcdConfig_16F628A:
   252                           
   253                           ; 8 bytes @ 0x4
   254  0004'                    	ds	8
   255                           
   256                           	psect	maintext
   257  0000'                    __pmaintext:	
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 6 in file "LCDTST.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  lcdConfig_16    8    4[COMMON] struct .
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : B00/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   277 ;;      Params:         0       0       0       0
   278 ;;      Locals:         8       0       0       0
   279 ;;      Temps:          4       0       0       0
   280 ;;      Totals:        12       0       0       0
   281 ;;Total ram usage:       12 bytes
   282 ;; Hardware stack levels required when called: 1
   283 ;; This function calls:
   284 ;;		_Lcd_Clear
   285 ;;		_Lcd_Init
   286 ;;		_Lcd_SetCursor
   287 ;;		_Lcd_WriteString
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293  0000'                    _main:	
   294                           ;psect for function _main
   295                           
   296  0000'                    l574:	
   297                           ;incstack = 0
   298                           ; Regs used in _main: [allreg]
   299                           
   300                           
   301                           ;LCDTST.c: 8:     Lcd_PinConfig lcdConfig_16F628A = {
   302  0000' 3000'              	movlw	main@lcdConfig_16F628A& (0+255)
   303  0001' 0084               	movwf	4
   304  0002' 3000'              	movlw	low main@F652
   305  0003' 0080'              	movwf	??_main
   306  0004' 0804               	movf	4,w
   307  0005' 0081'              	movwf	??_main+1
   308  0006' 3008               	movlw	8
   309  0007' 0082'              	movwf	??_main+2
   310  0008'                    u20:
   311  0008' 0800'              	movf	??_main,w
   312  0009' 0084               	movwf	4
   313  000A' 1383               	bcf	3,7	;select IRP bank0
   314  000B' 0800               	movf	0,w
   315  000C' 0083'              	movwf	??_main+3
   316  000D' 0A80'              	incf	??_main,f
   317  000E' 0801'              	movf	??_main+1,w
   318  000F' 0084               	movwf	4
   319  0010' 0803'              	movf	??_main+3,w
   320  0011' 0080               	movwf	0
   321  0012' 0A81'              	incf	??_main+1,f
   322  0013' 0B82'              	decfsz	??_main+2,f
   323  0014' 2808'              	goto	u20
   324  0015'                    l576:
   325                           
   326                           ;LCDTST.c: 19:     Lcd_Init(&lcdConfig_16F628A);
   327  0015' 3000'              	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   328  0016' 2000'              	fcall	_Lcd_Init
   329  0017'                    l578:
   330                           
   331                           ;LCDTST.c: 20:     Lcd_Clear(&lcdConfig_16F628A);
   332  0017' 3000'              	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   333  0018' 2000'              	fcall	_Lcd_Clear
   334  0019'                    l580:
   335                           
   336                           ;LCDTST.c: 23:     Lcd_SetCursor(&lcdConfig_16F628A, 1, 1);
   337  0019' 0180'              	clrf	_Lcd_SetCursor$1
   338  001A' 0A80'              	incf	_Lcd_SetCursor$1,f
   339  001B' 0181'              	clrf	_Lcd_SetCursor$2
   340  001C' 0A81'              	incf	_Lcd_SetCursor$2,f
   341  001D' 3000'              	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   342  001E' 2000'              	fcall	_Lcd_SetCursor
   343  001F'                    l582:
   344                           
   345                           ;LCDTST.c: 24:     Lcd_WriteString(&lcdConfig_16F628A, "Oi Mundo");
   346  001F' 3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   347  0020' 0080'              	movwf	_Lcd_WriteString$1
   348  0021' 3000'              	movlw	(low (main@lcdConfig_16F628A| 0))& (0+255)
   349  0022' 2000'              	fcall	_Lcd_WriteString
   350  0023'                    l17:	
   351                           ;LCDTST.c: 26:     while(1) {
   352                           
   353  0023'                    l18:	
   354                           ;LCDTST.c: 28:     }
   355                           
   356  0023' 2823'              	goto	l17
   357  0024' 2800'              	ljmp	start
   358  0025'                    __end_of_main:
   359  007E                     btemp	set	126	;btemp
   360  007E                     wtemp0	set	126

Data Sizes:
    Strings     9
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       8
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    F652$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    Lcd_Clear$0	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(COMMON[8]), 

    Lcd_Init$0	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(COMMON[8]), 

    Lcd_SetCursor$0	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(COMMON[8]), 

    Lcd_WriteString$0	PTR struct . size(1) Largest target is 8
		 -> main@lcdConfig_16F628A(COMMON[8]), 

    Lcd_WriteString$1	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    lcdConfig_16F628A$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     161
                                              0 COMMON    12    12      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      1     0      1      21
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        2     0      2      33
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0       9
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0       9
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
   _Lcd_Init
   _Lcd_SetCursor
   _Lcd_WriteString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       8       3       10.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      10        0.0%
ABS                  0      0      14       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 10:39:02 2023

                      pc 0002                       l17 0023                       l18 0023  
                     u20 0008                       fsr 0004                      l580 0019  
                    l582 001F                      l574 0000                      l576 0015  
                    l578 0017                      fsr0 0004         ?_Lcd_WriteString 0000  
                    indf 0000                     STR_1 0006                     _main 0000  
                   btemp 007E                     start 0000*              _Lcd_Init$0 0000  
                  ?_main 0000        _Lcd_WriteString$0 0000        _Lcd_WriteString$1 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0000             __end_of_main 0025              _Lcd_Clear$0 0000  
                 ??_main 0000  __end_of__initialization 0010           __pcstackCOMMON 0000  
           __pidataBANK0 0000                ?_Lcd_Init 0000               __pmaintext 0000  
             ??_Lcd_Init 0000               __stringtab 0000     end_of_initialization 0010  
      ??_Lcd_WriteString 0000                _Lcd_Clear 0000*     start_initialization 0000  
        _Lcd_SetCursor$0 0000          _Lcd_SetCursor$1 0000          _Lcd_SetCursor$2 0001  
             ?_Lcd_Clear 0000              __pdataBANK0 0000                ___latbits 0000  
          _Lcd_SetCursor 0000*               __pstrings 0000           ?_Lcd_SetCursor 0000  
            ??_Lcd_Clear 0000              __stringbase 0005                 _Lcd_Init 0000* 
        _Lcd_WriteString 0000*      __end_of__stringtab 0006          ??_Lcd_SetCursor 0000  
               main@F652 0000                stringcode 0000    main@lcdConfig_16F628A 0004  
               stringdir 0000                 stringtab 0000  
