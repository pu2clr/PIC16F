

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan  1 14:10:02 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 18/08/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F876A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     0091                     	;# 
   212     0092                     	;# 
   213     0093                     	;# 
   214     0094                     	;# 
   215     0098                     	;# 
   216     0099                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     009F                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227                           
   228                           	psect	idataBANK0
   229     02A0                     __pidataBANK0:
   230                           
   231                           ;initializer for main@F962
   232     02A0  3407               	retlw	7
   233     02A1  3400               	retlw	0
   234     02A2  3402               	retlw	2
   235     02A3  3403               	retlw	3
   236     02A4  3404               	retlw	4
   237     02A5  3405               	retlw	5
   238     02A6  3406               	retlw	6
   239     02A7  3407               	retlw	7
   240                           
   241                           ;initializer for _smiley
   242     02A8  3400               	retlw	0
   243     02A9  340A               	retlw	10
   244     02AA  340A               	retlw	10
   245     02AB  3400               	retlw	0
   246     02AC  3411               	retlw	17
   247     02AD  340E               	retlw	14
   248     02AE  3400               	retlw	0
   249     02AF  3400               	retlw	0
   250     0007                     _PORTC	set	7
   251     0087                     _TRISC	set	135
   252                           
   253                           	psect	strings
   254     0003                     __pstrings:
   255     0003                     stringtab:
   256     0003                     __stringtab:
   257     0003                     stringcode:	
   258                           ;	String table - string pointers are 1 byte each
   259                           
   260     0003                     stringdir:
   261     0003  3000               	movlw	high stringdir
   262     0004  008A               	movwf	10
   263     0005  0804               	movf	4,w
   264     0006  0A84               	incf	4,f
   265     0007  0782               	addwf	2,f
   266     0008                     __stringbase:
   267     0008  3400               	retlw	0
   268     0009                     __end_of__stringtab:
   269     0009                     STR_2:
   270     0009  3457               	retlw	87	;'W'
   271     000A  346F               	retlw	111	;'o'
   272     000B  3472               	retlw	114	;'r'
   273     000C  346C               	retlw	108	;'l'
   274     000D  3464               	retlw	100	;'d'
   275     000E  3400               	retlw	0
   276     000F                     STR_1:
   277     000F  3448               	retlw	72	;'H'
   278     0010  3465               	retlw	101	;'e'
   279     0011  346C               	retlw	108	;'l'
   280     0012  346C               	retlw	108	;'l'
   281     0013  346F               	retlw	111	;'o'
   282     0014  3400               	retlw	0
   283                           
   284                           	psect	cinit
   285     07EE                     start_initialization:	
   286                           ; #config settings
   287                           
   288     07EE                     __initialization:
   289                           
   290                           ; Initialize objects allocated to BANK0
   291     07EE  1383               	bcf	3,7	;select IRP bank0
   292     07EF  3043               	movlw	low (__pdataBANK0+16)
   293     07F0  00FD               	movwf	btemp+-1
   294     07F1  3002               	movlw	high __pidataBANK0
   295     07F2  00FE               	movwf	btemp
   296     07F3  30A0               	movlw	low __pidataBANK0
   297     07F4  00FF               	movwf	btemp+1
   298     07F5  3033               	movlw	low __pdataBANK0
   299     07F6  0084               	movwf	4
   300     07F7  120A  118A  22B4  120A  118A  	fcall	init_ram0
   301     07FC                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304     07FC                     __end_of__initialization:
   305     07FC  0183               	clrf	3
   306     07FD  120A  118A  2E80   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	dataBANK0
   309     0033                     __pdataBANK0:
   310     0033                     main@F962:
   311     0033                     	ds	8
   312     003B                     _smiley:
   313     003B                     	ds	8
   314                           
   315                           	psect	inittext
   316     02B0                     init_fetch0:	
   317                           ;	Called with low address in FSR and high address in W
   318                           
   319     02B0  087E               	movf	btemp,w
   320     02B1  008A               	movwf	10
   321     02B2  087F               	movf	btemp+1,w
   322     02B3  0082               	movwf	2
   323     02B4                     init_ram0:	
   324                           ;Called with:
   325                           ;	high address of idata address in btemp 
   326                           ;	low address of idata address in btemp+1 
   327                           ;	low address of data in FSR
   328                           ;	high address + 1 of data in btemp-1
   329                           
   330     02B4  120A  118A  22B0  120A  118A  	fcall	init_fetch0
   331     02B9  0080               	movwf	0
   332     02BA  0A84               	incf	4,f
   333     02BB  0804               	movf	4,w
   334     02BC  067D               	xorwf	btemp+-1,w
   335     02BD  1903               	btfsc	3,2
   336     02BE  3400               	retlw	0
   337     02BF  0AFF               	incf	btemp+1,f
   338     02C0  1903               	btfsc	3,2
   339     02C1  0AFE               	incf	btemp,f
   340     02C2  2AB4               	goto	init_ram0
   341                           
   342                           	psect	cstackCOMMON
   343     0070                     __pcstackCOMMON:
   344     0070                     ?_Lcd_Init:
   345     0070                     ?_Lcd_Clear:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_SetBit:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_PulseEnable:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     SetBit@port:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 2 bytes @ 0x0
   362     0070                     	ds	2
   363     0072                     SetBit@pin:
   364                           
   365                           ; 1 bytes @ 0x2
   366     0072                     	ds	1
   367     0073                     SetBit@value:
   368                           
   369                           ; 1 bytes @ 0x3
   370     0073                     	ds	1
   371     0074                     ??_SetBit:
   372                           
   373                           ; 1 bytes @ 0x4
   374     0074                     	ds	2
   375     0076                     ??_PulseEnable:
   376                           
   377                           ; 1 bytes @ 0x6
   378     0076                     	ds	2
   379     0078                     PulseEnable@config:
   380                           
   381                           ; 1 bytes @ 0x8
   382     0078                     	ds	1
   383     0079                     ?_Lcd_WriteChar:
   384     0079                     ?_Lcd_Command:	
   385                           ; 1 bytes @ 0x9
   386                           
   387     0079                     Lcd_Command@cmd:	
   388                           ; 1 bytes @ 0x9
   389                           
   390     0079                     Lcd_WriteChar@data:	
   391                           ; 1 bytes @ 0x9
   392                           
   393                           
   394                           ; 1 bytes @ 0x9
   395     0079                     	ds	1
   396     007A                     ??_Lcd_WriteChar:
   397     007A                     ??_Lcd_Command:	
   398                           ; 1 bytes @ 0xA
   399                           
   400                           
   401                           ; 1 bytes @ 0xA
   402     007A                     	ds	2
   403     007C                     Lcd_Command@config:
   404     007C                     Lcd_WriteChar@config:	
   405                           ; 1 bytes @ 0xC
   406                           
   407                           
   408                           ; 1 bytes @ 0xC
   409     007C                     	ds	1
   410     007D                     ?_Lcd_WriteString:
   411     007D                     ??_Lcd_CreateCustomChar:	
   412                           ; 1 bytes @ 0xD
   413                           
   414     007D                     ?_Lcd_WriteCustomChar:	
   415                           ; 1 bytes @ 0xD
   416                           
   417     007D                     Lcd_WriteString@str:	
   418                           ; 1 bytes @ 0xD
   419                           
   420     007D                     Lcd_Clear@config:	
   421                           ; 1 bytes @ 0xD
   422                           
   423     007D                     Lcd_WriteCustomChar@location:	
   424                           ; 1 bytes @ 0xD
   425                           
   426                           
   427                           ; 1 bytes @ 0xD
   428     007D                     	ds	1
   429     007E                     ??_Lcd_WriteCustomChar:
   430                           
   431                           	psect	cstackBANK0
   432     0020                     __pcstackBANK0:	
   433                           ; 1 bytes @ 0xE
   434                           
   435     0020                     ??_Lcd_Clear:
   436     0020                     ?_Lcd_SetCursor:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0020                     ??_Lcd_WriteString:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0020                     ?_Lcd_CreateCustomChar:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0020                     Lcd_SetCursor@row:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0020                     Lcd_CreateCustomChar@location:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0020                     Lcd_WriteCustomChar@config:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 1 bytes @ 0x0
   456     0020                     	ds	1
   457     0021                     Lcd_WriteString@config:
   458     0021                     Lcd_SetCursor@column:	
   459                           ; 1 bytes @ 0x1
   460                           
   461     0021                     Lcd_CreateCustomChar@charmap:	
   462                           ; 1 bytes @ 0x1
   463                           
   464                           
   465                           ; 1 bytes @ 0x1
   466     0021                     	ds	1
   467     0022                     ??_Lcd_Init:
   468     0022                     ??_Lcd_SetCursor:	
   469                           ; 1 bytes @ 0x2
   470                           
   471     0022                     Lcd_CreateCustomChar@config:	
   472                           ; 1 bytes @ 0x2
   473                           
   474                           
   475                           ; 1 bytes @ 0x2
   476     0022                     	ds	1
   477     0023                     Lcd_CreateCustomChar@i:
   478                           
   479                           ; 1 bytes @ 0x3
   480     0023                     	ds	1
   481     0024                     Lcd_Init@config:
   482     0024                     Lcd_SetCursor@address:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 1 bytes @ 0x4
   487     0024                     	ds	1
   488     0025                     Lcd_SetCursor@config:
   489                           
   490                           ; 1 bytes @ 0x5
   491     0025                     	ds	1
   492     0026                     ??_main:
   493                           
   494                           ; 1 bytes @ 0x6
   495     0026                     	ds	4
   496     002A                     main@i:
   497                           
   498                           ; 1 bytes @ 0xA
   499     002A                     	ds	1
   500     002B                     main@lcd:
   501                           
   502                           ; 8 bytes @ 0xB
   503     002B                     	ds	8
   504                           
   505                           	psect	maintext
   506     0680                     __pmaintext:	
   507 ;;
   508 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   509 ;;
   510 ;; *************** function _main *****************
   511 ;; Defined at:
   512 ;;		line 31 in file "newmain.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  lcd             8   11[BANK0 ] struct .
   517 ;;  i               1   10[BANK0 ] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : B00/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       9       0       0       0
   529 ;;      Temps:          0       4       0       0       0
   530 ;;      Totals:         0      13       0       0       0
   531 ;;Total ram usage:       13 bytes
   532 ;; Hardware stack levels required when called: 5
   533 ;; This function calls:
   534 ;;		_Lcd_Clear
   535 ;;		_Lcd_CreateCustomChar
   536 ;;		_Lcd_Init
   537 ;;		_Lcd_SetCursor
   538 ;;		_Lcd_WriteChar
   539 ;;		_Lcd_WriteCustomChar
   540 ;;		_Lcd_WriteString
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546     0680                     _main:	
   547                           ;psect for function _main
   548                           
   549     0680                     l897:	
   550                           ;incstack = 0
   551                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   552                           
   553                           
   554                           ;newmain.c: 32:         .d7_pin = 7;newmain.c: 37:     Lcd_Clear(&lcd);
   555     0680  1683               	bsf	3,5	;RP0=1, select bank1
   556     0681  1303               	bcf	3,6	;RP1=0, select bank1
   557     0682  0187               	clrf	7	;volatile
   558     0683                     l899:
   559                           
   560                           ;newmain.c: 38: 
   561     0683  302B               	movlw	main@lcd& (0+255)
   562     0684  0084               	movwf	4
   563     0685  3033               	movlw	low main@F962
   564     0686  1283               	bcf	3,5	;RP0=0, select bank0
   565     0687  1303               	bcf	3,6	;RP1=0, select bank0
   566     0688  00A6               	movwf	??_main
   567     0689  0804               	movf	4,w
   568     068A  00A7               	movwf	??_main+1
   569     068B  3008               	movlw	8
   570     068C  00A8               	movwf	??_main+2
   571     068D                     u1110:
   572     068D  0826               	movf	??_main,w
   573     068E  0084               	movwf	4
   574     068F  1383               	bcf	3,7	;select IRP bank0
   575     0690  0800               	movf	0,w
   576     0691  00A9               	movwf	??_main+3
   577     0692  0AA6               	incf	??_main,f
   578     0693  0827               	movf	??_main+1,w
   579     0694  0084               	movwf	4
   580     0695  0829               	movf	??_main+3,w
   581     0696  0080               	movwf	0
   582     0697  0AA7               	incf	??_main+1,f
   583     0698  0BA8               	decfsz	??_main+2,f
   584     0699  2E8D               	goto	u1110
   585     069A                     l901:
   586                           
   587                           ;newmain.c: 49: 
   588     069A  302B               	movlw	(low (main@lcd| 0))& (0+255)
   589     069B  120A  118A  23BD  120A  118A  	fcall	_Lcd_Init
   590     06A0                     l903:
   591                           
   592                           ;newmain.c: 50:     Lcd_SetCursor(&lcd, 1, 1);
   593     06A0  302B               	movlw	(low (main@lcd| 0))& (0+255)
   594     06A1  120A  118A  22C3  120A  118A  	fcall	_Lcd_Clear
   595     06A6                     l905:
   596                           
   597                           ;newmain.c: 53: 
   598     06A6  1283               	bcf	3,5	;RP0=0, select bank0
   599     06A7  1303               	bcf	3,6	;RP1=0, select bank0
   600     06A8  01A0               	clrf	Lcd_SetCursor@row
   601     06A9  0AA0               	incf	Lcd_SetCursor@row,f
   602     06AA  01A1               	clrf	Lcd_SetCursor@column
   603     06AB  0AA1               	incf	Lcd_SetCursor@column,f
   604     06AC  302B               	movlw	(low (main@lcd| 0))& (0+255)
   605     06AD  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   606     06B2                     l907:
   607                           
   608                           ;newmain.c: 54:     while (1) {
   609     06B2  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   610     06B3  00FD               	movwf	Lcd_WriteString@str
   611     06B4  302B               	movlw	(low (main@lcd| 0))& (0+255)
   612     06B5  120A  118A  22D7  120A  118A  	fcall	_Lcd_WriteString
   613     06BA                     l909:
   614                           
   615                           ;newmain.c: 55:         Lcd_Clear(&lcd);
   616     06BA  3002               	movlw	2
   617     06BB  1283               	bcf	3,5	;RP0=0, select bank0
   618     06BC  1303               	bcf	3,6	;RP1=0, select bank0
   619     06BD  00A0               	movwf	Lcd_SetCursor@row
   620     06BE  01A1               	clrf	Lcd_SetCursor@column
   621     06BF  0AA1               	incf	Lcd_SetCursor@column,f
   622     06C0  302B               	movlw	(low (main@lcd| 0))& (0+255)
   623     06C1  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   624     06C6                     l911:
   625                           
   626                           ;newmain.c: 56:         for (i = 1; i <= 16; i++) {
   627     06C6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   628     06C7  00FD               	movwf	Lcd_WriteString@str
   629     06C8  302B               	movlw	(low (main@lcd| 0))& (0+255)
   630     06C9  120A  118A  22D7  120A  118A  	fcall	_Lcd_WriteString
   631     06CE                     l913:
   632                           
   633                           ;newmain.c: 57:             Lcd_SetCursor(&lcd, 1, i);
   634     06CE  3033               	movlw	51
   635     06CF  1283               	bcf	3,5	;RP0=0, select bank0
   636     06D0  1303               	bcf	3,6	;RP1=0, select bank0
   637     06D1  00A8               	movwf	??_main+2
   638     06D2  30BB               	movlw	187
   639     06D3  00A7               	movwf	??_main+1
   640     06D4  30DF               	movlw	223
   641     06D5  00A6               	movwf	??_main
   642     06D6                     u1157:
   643     06D6  0BA6               	decfsz	??_main,f
   644     06D7  2ED6               	goto	u1157
   645     06D8  0BA7               	decfsz	??_main+1,f
   646     06D9  2ED6               	goto	u1157
   647     06DA  0BA8               	decfsz	??_main+2,f
   648     06DB  2ED6               	goto	u1157
   649     06DC                     l915:
   650                           
   651                           ;newmain.c: 59:             _delay((unsigned long)((200)*(8000000/4000.0)));
   652     06DC  302B               	movlw	(low (main@lcd| 0))& (0+255)
   653     06DD  120A  118A  22C3  120A  118A  	fcall	_Lcd_Clear
   654     06E2                     l917:
   655                           
   656                           ;newmain.c: 61:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   657     06E2  1283               	bcf	3,5	;RP0=0, select bank0
   658     06E3  1303               	bcf	3,6	;RP1=0, select bank0
   659     06E4  01A0               	clrf	Lcd_CreateCustomChar@location
   660     06E5  303B               	movlw	(low (_smiley| 0))& (0+255)
   661     06E6  00A1               	movwf	Lcd_CreateCustomChar@charmap
   662     06E7  302B               	movlw	(low (main@lcd| 0))& (0+255)
   663     06E8  120A  118A  2384  120A  118A  	fcall	_Lcd_CreateCustomChar
   664     06ED                     l919:
   665                           
   666                           ;newmain.c: 63:         for (i = 1; i <= 16; i++) {
   667     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   668     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   669     06EF  01A0               	clrf	Lcd_SetCursor@row
   670     06F0  0AA0               	incf	Lcd_SetCursor@row,f
   671     06F1  01A1               	clrf	Lcd_SetCursor@column
   672     06F2  0AA1               	incf	Lcd_SetCursor@column,f
   673     06F3  302B               	movlw	(low (main@lcd| 0))& (0+255)
   674     06F4  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   675     06F9                     l921:
   676                           
   677                           ;newmain.c: 64:             Lcd_SetCursor(&lcd, 2, i);
   678     06F9  01FD               	clrf	Lcd_WriteCustomChar@location
   679     06FA  302B               	movlw	(low (main@lcd| 0))& (0+255)
   680     06FB  120A  118A  2294  120A  118A  	fcall	_Lcd_WriteCustomChar
   681     0700                     l923:
   682                           
   683                           ;newmain.c: 65:             Lcd_WriteChar(&lcd, 'I' + (i - 1));
   684     0700  3033               	movlw	51
   685     0701  1283               	bcf	3,5	;RP0=0, select bank0
   686     0702  1303               	bcf	3,6	;RP1=0, select bank0
   687     0703  00A8               	movwf	??_main+2
   688     0704  30BB               	movlw	187
   689     0705  00A7               	movwf	??_main+1
   690     0706  30DF               	movlw	223
   691     0707  00A6               	movwf	??_main
   692     0708                     u1167:
   693     0708  0BA6               	decfsz	??_main,f
   694     0709  2F08               	goto	u1167
   695     070A  0BA7               	decfsz	??_main+1,f
   696     070B  2F08               	goto	u1167
   697     070C  0BA8               	decfsz	??_main+2,f
   698     070D  2F08               	goto	u1167
   699     070E                     l925:
   700                           
   701                           ;newmain.c: 68:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   702     070E  302B               	movlw	(low (main@lcd| 0))& (0+255)
   703     070F  120A  118A  22C3  120A  118A  	fcall	_Lcd_Clear
   704     0714                     l927:
   705                           
   706                           ;newmain.c: 69:         for (i = 1; i <= 16; i++) {
   707     0714  1283               	bcf	3,5	;RP0=0, select bank0
   708     0715  1303               	bcf	3,6	;RP1=0, select bank0
   709     0716  01AA               	clrf	main@i
   710     0717  0AAA               	incf	main@i,f
   711     0718                     l933:
   712                           
   713                           ;newmain.c: 70:             Lcd_SetCursor(&lcd, 1, i);
   714     0718  01A0               	clrf	Lcd_SetCursor@row
   715     0719  0AA0               	incf	Lcd_SetCursor@row,f
   716     071A  082A               	movf	main@i,w
   717     071B  00A1               	movwf	Lcd_SetCursor@column
   718     071C  302B               	movlw	(low (main@lcd| 0))& (0+255)
   719     071D  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   720                           
   721                           ;newmain.c: 71:             Lcd_WriteCustomChar(&lcd, 0);
   722     0722  1283               	bcf	3,5	;RP0=0, select bank0
   723     0723  1303               	bcf	3,6	;RP1=0, select bank0
   724     0724  082A               	movf	main@i,w
   725     0725  3E40               	addlw	64
   726     0726  00F9               	movwf	Lcd_WriteChar@data
   727     0727  302B               	movlw	(low (main@lcd| 0))& (0+255)
   728     0728  120A  118A  2555  120A  118A  	fcall	_Lcd_WriteChar
   729     072D                     l935:
   730                           
   731                           ;newmain.c: 72:             _delay((unsigned long)((200)*(8000000/4000.0)));
   732     072D  3003               	movlw	3
   733     072E  1283               	bcf	3,5	;RP0=0, select bank0
   734     072F  1303               	bcf	3,6	;RP1=0, select bank0
   735     0730  00A8               	movwf	??_main+2
   736     0731  3008               	movlw	8
   737     0732  00A7               	movwf	??_main+1
   738     0733  3076               	movlw	118
   739     0734  00A6               	movwf	??_main
   740     0735                     u1177:
   741     0735  0BA6               	decfsz	??_main,f
   742     0736  2F35               	goto	u1177
   743     0737  0BA7               	decfsz	??_main+1,f
   744     0738  2F35               	goto	u1177
   745     0739  0BA8               	decfsz	??_main+2,f
   746     073A  2F35               	goto	u1177
   747     073B  0000               	nop
   748     073C                     l937:
   749                           
   750                           ;newmain.c: 73:             Lcd_SetCursor(&lcd, 2, i);
   751     073C  3001               	movlw	1
   752     073D  1283               	bcf	3,5	;RP0=0, select bank0
   753     073E  1303               	bcf	3,6	;RP1=0, select bank0
   754     073F  00A6               	movwf	??_main
   755     0740  0826               	movf	??_main,w
   756     0741  07AA               	addwf	main@i,f
   757     0742                     l939:
   758     0742  3011               	movlw	17
   759     0743  022A               	subwf	main@i,w
   760     0744  1C03               	skipc
   761     0745  2F47               	goto	u1121
   762     0746  2F48               	goto	u1120
   763     0747                     u1121:
   764     0747  2F18               	goto	l933
   765     0748                     u1120:
   766     0748                     l941:
   767                           
   768                           ;newmain.c: 74:             Lcd_WriteCustomChar(&lcd, 0);
   769     0748  3033               	movlw	51
   770     0749  1283               	bcf	3,5	;RP0=0, select bank0
   771     074A  1303               	bcf	3,6	;RP1=0, select bank0
   772     074B  00A8               	movwf	??_main+2
   773     074C  30BB               	movlw	187
   774     074D  00A7               	movwf	??_main+1
   775     074E  30DF               	movlw	223
   776     074F  00A6               	movwf	??_main
   777     0750                     u1187:
   778     0750  0BA6               	decfsz	??_main,f
   779     0751  2F50               	goto	u1187
   780     0752  0BA7               	decfsz	??_main+1,f
   781     0753  2F50               	goto	u1187
   782     0754  0BA8               	decfsz	??_main+2,f
   783     0755  2F50               	goto	u1187
   784     0756                     l943:
   785                           
   786                           ;newmain.c: 76:         }
   787     0756  1283               	bcf	3,5	;RP0=0, select bank0
   788     0757  1303               	bcf	3,6	;RP1=0, select bank0
   789     0758  01AA               	clrf	main@i
   790     0759  0AAA               	incf	main@i,f
   791     075A                     l947:
   792                           
   793                           ;newmain.c: 77:     }
   794     075A  3002               	movlw	2
   795     075B  00A0               	movwf	Lcd_SetCursor@row
   796     075C  082A               	movf	main@i,w
   797     075D  00A1               	movwf	Lcd_SetCursor@column
   798     075E  302B               	movlw	(low (main@lcd| 0))& (0+255)
   799     075F  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   800                           
   801                           ;newmain.c: 78: }
   802     0764  1283               	bcf	3,5	;RP0=0, select bank0
   803     0765  1303               	bcf	3,6	;RP1=0, select bank0
   804     0766  082A               	movf	main@i,w
   805     0767  3E48               	addlw	72
   806     0768  00F9               	movwf	Lcd_WriteChar@data
   807     0769  302B               	movlw	(low (main@lcd| 0))& (0+255)
   808     076A  120A  118A  2555  120A  118A  	fcall	_Lcd_WriteChar
   809     076F                     l949:
   810     076F  3003               	movlw	3
   811     0770  1283               	bcf	3,5	;RP0=0, select bank0
   812     0771  1303               	bcf	3,6	;RP1=0, select bank0
   813     0772  00A8               	movwf	??_main+2
   814     0773  3008               	movlw	8
   815     0774  00A7               	movwf	??_main+1
   816     0775  3076               	movlw	118
   817     0776  00A6               	movwf	??_main
   818     0777                     u1197:
   819     0777  0BA6               	decfsz	??_main,f
   820     0778  2F77               	goto	u1197
   821     0779  0BA7               	decfsz	??_main+1,f
   822     077A  2F77               	goto	u1197
   823     077B  0BA8               	decfsz	??_main+2,f
   824     077C  2F77               	goto	u1197
   825     077D  0000               	nop
   826     077E                     l951:
   827     077E  3001               	movlw	1
   828     077F  1283               	bcf	3,5	;RP0=0, select bank0
   829     0780  1303               	bcf	3,6	;RP1=0, select bank0
   830     0781  00A6               	movwf	??_main
   831     0782  0826               	movf	??_main,w
   832     0783  07AA               	addwf	main@i,f
   833     0784                     l953:
   834     0784  3011               	movlw	17
   835     0785  022A               	subwf	main@i,w
   836     0786  1C03               	skipc
   837     0787  2F89               	goto	u1131
   838     0788  2F8A               	goto	u1130
   839     0789                     u1131:
   840     0789  2F5A               	goto	l947
   841     078A                     u1130:
   842     078A                     l955:
   843     078A  3033               	movlw	51
   844     078B  1283               	bcf	3,5	;RP0=0, select bank0
   845     078C  1303               	bcf	3,6	;RP1=0, select bank0
   846     078D  00A8               	movwf	??_main+2
   847     078E  30BB               	movlw	187
   848     078F  00A7               	movwf	??_main+1
   849     0790  30DF               	movlw	223
   850     0791  00A6               	movwf	??_main
   851     0792                     u1207:
   852     0792  0BA6               	decfsz	??_main,f
   853     0793  2F92               	goto	u1207
   854     0794  0BA7               	decfsz	??_main+1,f
   855     0795  2F92               	goto	u1207
   856     0796  0BA8               	decfsz	??_main+2,f
   857     0797  2F92               	goto	u1207
   858     0798                     l957:
   859     0798  1283               	bcf	3,5	;RP0=0, select bank0
   860     0799  1303               	bcf	3,6	;RP1=0, select bank0
   861     079A  01AA               	clrf	main@i
   862     079B  0AAA               	incf	main@i,f
   863     079C                     l961:
   864     079C  01A0               	clrf	Lcd_SetCursor@row
   865     079D  0AA0               	incf	Lcd_SetCursor@row,f
   866     079E  082A               	movf	main@i,w
   867     079F  00A1               	movwf	Lcd_SetCursor@column
   868     07A0  302B               	movlw	(low (main@lcd| 0))& (0+255)
   869     07A1  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   870     07A6  01FD               	clrf	Lcd_WriteCustomChar@location
   871     07A7  302B               	movlw	(low (main@lcd| 0))& (0+255)
   872     07A8  120A  118A  2294  120A  118A  	fcall	_Lcd_WriteCustomChar
   873     07AD                     l963:
   874     07AD  3003               	movlw	3
   875     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   876     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   877     07B0  00A8               	movwf	??_main+2
   878     07B1  3008               	movlw	8
   879     07B2  00A7               	movwf	??_main+1
   880     07B3  3076               	movlw	118
   881     07B4  00A6               	movwf	??_main
   882     07B5                     u1217:
   883     07B5  0BA6               	decfsz	??_main,f
   884     07B6  2FB5               	goto	u1217
   885     07B7  0BA7               	decfsz	??_main+1,f
   886     07B8  2FB5               	goto	u1217
   887     07B9  0BA8               	decfsz	??_main+2,f
   888     07BA  2FB5               	goto	u1217
   889     07BB  0000               	nop
   890     07BC                     l965:
   891     07BC  3002               	movlw	2
   892     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   893     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   894     07BF  00A0               	movwf	Lcd_SetCursor@row
   895     07C0  082A               	movf	main@i,w
   896     07C1  00A1               	movwf	Lcd_SetCursor@column
   897     07C2  302B               	movlw	(low (main@lcd| 0))& (0+255)
   898     07C3  120A  118A  22FC  120A  118A  	fcall	_Lcd_SetCursor
   899     07C8                     l967:
   900     07C8  01FD               	clrf	Lcd_WriteCustomChar@location
   901     07C9  302B               	movlw	(low (main@lcd| 0))& (0+255)
   902     07CA  120A  118A  2294  120A  118A  	fcall	_Lcd_WriteCustomChar
   903     07CF                     l969:
   904     07CF  3003               	movlw	3
   905     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   906     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   907     07D2  00A8               	movwf	??_main+2
   908     07D3  3008               	movlw	8
   909     07D4  00A7               	movwf	??_main+1
   910     07D5  3076               	movlw	118
   911     07D6  00A6               	movwf	??_main
   912     07D7                     u1227:
   913     07D7  0BA6               	decfsz	??_main,f
   914     07D8  2FD7               	goto	u1227
   915     07D9  0BA7               	decfsz	??_main+1,f
   916     07DA  2FD7               	goto	u1227
   917     07DB  0BA8               	decfsz	??_main+2,f
   918     07DC  2FD7               	goto	u1227
   919     07DD  0000               	nop
   920     07DE                     l971:
   921     07DE  3001               	movlw	1
   922     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   923     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   924     07E1  00A6               	movwf	??_main
   925     07E2  0826               	movf	??_main,w
   926     07E3  07AA               	addwf	main@i,f
   927     07E4                     l973:
   928     07E4  3011               	movlw	17
   929     07E5  022A               	subwf	main@i,w
   930     07E6  1C03               	skipc
   931     07E7  2FE9               	goto	u1141
   932     07E8  2FEA               	goto	u1140
   933     07E9                     u1141:
   934     07E9  2F9C               	goto	l961
   935     07EA                     u1140:
   936     07EA  2F0E               	goto	l925
   937     07EB  120A  118A  2800   	ljmp	start
   938     07EE                     __end_of_main:
   939                           
   940                           	psect	text1
   941     02D7                     __ptext1:	
   942 ;; *************** function _Lcd_WriteString *****************
   943 ;; Defined at:
   944 ;;		line 103 in file "../../pic16flcd.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  config          1    wreg     PTR struct .
   947 ;;		 -> main@lcd(8), 
   948 ;;  str             1   13[COMMON] PTR unsigned char 
   949 ;;		 -> STR_2(6), STR_1(6), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  config          1    1[BANK0 ] PTR struct .
   952 ;;		 -> main@lcd(8), 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         1       0       0       0       0
   963 ;;      Locals:         0       1       0       0       0
   964 ;;      Temps:          0       1       0       0       0
   965 ;;      Totals:         1       2       0       0       0
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 3
   969 ;; This function calls:
   970 ;;		_Lcd_WriteChar
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     02D7                     _Lcd_WriteString:	
   977                           ;psect for function _Lcd_WriteString
   978                           
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   982                           ;Lcd_WriteString@config stored from wreg
   983     02D7  1283               	bcf	3,5	;RP0=0, select bank0
   984     02D8  1303               	bcf	3,6	;RP1=0, select bank0
   985     02D9  00A1               	movwf	Lcd_WriteString@config
   986     02DA                     l871:
   987                           
   988                           ;../../pic16flcd.c: 104:     while(*str != '\0') {
   989     02DA  2AEF               	goto	l877
   990     02DB                     l873:
   991                           
   992                           ;../../pic16flcd.c: 105:         Lcd_WriteChar(config, (unsigned char)(*str));
   993     02DB  087D               	movf	Lcd_WriteString@str,w
   994     02DC  0084               	movwf	4
   995     02DD  120A  118A  2003  120A  118A  	fcall	stringdir
   996     02E2  00F9               	movwf	Lcd_WriteChar@data
   997     02E3  0821               	movf	Lcd_WriteString@config,w
   998     02E4  120A  118A  2555  120A  118A  	fcall	_Lcd_WriteChar
   999     02E9                     l875:
  1000                           
  1001                           ;../../pic16flcd.c: 106:         str++;
  1002     02E9  3001               	movlw	1
  1003     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1004     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1005     02EC  00A0               	movwf	??_Lcd_WriteString
  1006     02ED  0820               	movf	??_Lcd_WriteString,w
  1007     02EE  07FD               	addwf	Lcd_WriteString@str,f
  1008     02EF                     l877:
  1009                           
  1010                           ;../../pic16flcd.c: 104:     while(*str != '\0') {
  1011     02EF  087D               	movf	Lcd_WriteString@str,w
  1012     02F0  0084               	movwf	4
  1013     02F1  120A  118A  2003  120A  118A  	fcall	stringdir
  1014     02F6  3A00               	xorlw	0
  1015     02F7  1D03               	skipz
  1016     02F8  2AFA               	goto	u1071
  1017     02F9  2AFB               	goto	u1070
  1018     02FA                     u1071:
  1019     02FA  2ADB               	goto	l873
  1020     02FB                     u1070:
  1021     02FB                     l62:
  1022     02FB  0008               	return
  1023     02FC                     __end_of_Lcd_WriteString:
  1024                           
  1025                           	psect	text2
  1026     0294                     __ptext2:	
  1027 ;; *************** function _Lcd_WriteCustomChar *****************
  1028 ;; Defined at:
  1029 ;;		line 199 in file "../../pic16flcd.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  config          1    wreg     PTR struct .
  1032 ;;		 -> main@lcd(8), 
  1033 ;;  location        1   13[COMMON] unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  config          1    0[BANK0 ] PTR struct .
  1036 ;;		 -> main@lcd(8), 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         1       0       0       0       0
  1047 ;;      Locals:         0       1       0       0       0
  1048 ;;      Temps:          0       0       0       0       0
  1049 ;;      Totals:         1       1       0       0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 3
  1053 ;; This function calls:
  1054 ;;		_Lcd_WriteChar
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060     0294                     _Lcd_WriteCustomChar:	
  1061                           ;psect for function _Lcd_WriteCustomChar
  1062                           
  1063                           
  1064                           ;incstack = 0
  1065                           ; Regs used in _Lcd_WriteCustomChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1066                           ;Lcd_WriteCustomChar@config stored from wreg
  1067     0294  1283               	bcf	3,5	;RP0=0, select bank0
  1068     0295  1303               	bcf	3,6	;RP1=0, select bank0
  1069     0296  00A0               	movwf	Lcd_WriteCustomChar@config
  1070     0297                     l895:
  1071                           
  1072                           ;../../pic16flcd.c: 200:     Lcd_WriteChar(config, location);
  1073     0297  087D               	movf	Lcd_WriteCustomChar@location,w
  1074     0298  00F9               	movwf	Lcd_WriteChar@data
  1075     0299  0820               	movf	Lcd_WriteCustomChar@config,w
  1076     029A  120A  118A  2555  120A  118A  	fcall	_Lcd_WriteChar
  1077     029F                     l85:
  1078     029F  0008               	return
  1079     02A0                     __end_of_Lcd_WriteCustomChar:
  1080                           
  1081                           	psect	text3
  1082     02FC                     __ptext3:	
  1083 ;; *************** function _Lcd_SetCursor *****************
  1084 ;; Defined at:
  1085 ;;		line 149 in file "../../pic16flcd.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  config          1    wreg     PTR struct .
  1088 ;;		 -> main@lcd(8), 
  1089 ;;  row             1    0[BANK0 ] unsigned char 
  1090 ;;  column          1    1[BANK0 ] unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  config          1    5[BANK0 ] PTR struct .
  1093 ;;		 -> main@lcd(8), 
  1094 ;;  address         1    4[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       2       0       0       0
  1105 ;;      Locals:         0       2       0       0       0
  1106 ;;      Temps:          0       2       0       0       0
  1107 ;;      Totals:         0       6       0       0       0
  1108 ;;Total ram usage:        6 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 3
  1111 ;; This function calls:
  1112 ;;		_Lcd_Command
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118     02FC                     _Lcd_SetCursor:	
  1119                           ;psect for function _Lcd_SetCursor
  1120                           
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1124                           ;Lcd_SetCursor@config stored from wreg
  1125     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1126     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1127     02FE  00A5               	movwf	Lcd_SetCursor@config
  1128     02FF                     l851:
  1129                           
  1130                           ;../../pic16flcd.c: 150:     unsigned char address;;../../pic16flcd.c: 153:     switch(r
      +                          ow) {
  1131     02FF  2B06               	goto	l859
  1132     0300                     l853:
  1133                           
  1134                           ;../../pic16flcd.c: 155:             address = 0x80;
  1135     0300  3080               	movlw	128
  1136     0301  00A4               	movwf	Lcd_SetCursor@address
  1137                           
  1138                           ;../../pic16flcd.c: 156:             break;
  1139     0302  2B16               	goto	l861
  1140     0303                     l855:
  1141                           
  1142                           ;../../pic16flcd.c: 158:             address = 0xC0;
  1143     0303  30C0               	movlw	192
  1144     0304  00A4               	movwf	Lcd_SetCursor@address
  1145                           
  1146                           ;../../pic16flcd.c: 159:             break;
  1147     0305  2B16               	goto	l861
  1148     0306                     l859:
  1149     0306  0820               	movf	Lcd_SetCursor@row,w
  1150     0307  00A2               	movwf	??_Lcd_SetCursor
  1151     0308  01A3               	clrf	??_Lcd_SetCursor+1
  1152                           
  1153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1154                           ; Switch size 1, requested type "simple"
  1155                           ; Number of cases is 1, Range of values is 0 to 0
  1156                           ; switch strategies available:
  1157                           ; Name         Instructions Cycles
  1158                           ; simple_byte            4     3 (average)
  1159                           ; direct_byte           11     8 (fixed)
  1160                           ; jumptable            260     6 (fixed)
  1161                           ;	Chosen strategy is simple_byte
  1162     0309  0823               	movf	??_Lcd_SetCursor+1,w
  1163     030A  3A00               	xorlw	0	; case 0
  1164     030B  1903               	skipnz
  1165     030C  2B0E               	goto	l1005
  1166     030D  2B00               	goto	l853
  1167     030E                     l1005:
  1168                           
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 2, Range of values is 1 to 2
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            7     4 (average)
  1174                           ; direct_byte           17    11 (fixed)
  1175                           ; jumptable            263     9 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177     030E  0822               	movf	??_Lcd_SetCursor,w
  1178     030F  3A01               	xorlw	1	; case 1
  1179     0310  1903               	skipnz
  1180     0311  2B00               	goto	l853
  1181     0312  3A03               	xorlw	3	; case 2
  1182     0313  1903               	skipnz
  1183     0314  2B03               	goto	l855
  1184     0315  2B00               	goto	l853
  1185     0316                     l861:
  1186                           
  1187                           ;../../pic16flcd.c: 165:     address += (column - 1);
  1188     0316  0821               	movf	Lcd_SetCursor@column,w
  1189     0317  3EFF               	addlw	255
  1190     0318  00A2               	movwf	??_Lcd_SetCursor
  1191     0319  0822               	movf	??_Lcd_SetCursor,w
  1192     031A  07A4               	addwf	Lcd_SetCursor@address,f
  1193     031B                     l863:
  1194                           
  1195                           ;../../pic16flcd.c: 168:     Lcd_Command(config, address);
  1196     031B  0824               	movf	Lcd_SetCursor@address,w
  1197     031C  00F9               	movwf	Lcd_Command@cmd
  1198     031D  0825               	movf	Lcd_SetCursor@config,w
  1199     031E  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1200     0323                     l76:
  1201     0323  0008               	return
  1202     0324                     __end_of_Lcd_SetCursor:
  1203                           
  1204                           	psect	text4
  1205     03BD                     __ptext4:	
  1206 ;; *************** function _Lcd_Init *****************
  1207 ;; Defined at:
  1208 ;;		line 111 in file "../../pic16flcd.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  config          1    wreg     PTR struct .
  1211 ;;		 -> main@lcd(8), 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  config          1    4[BANK0 ] PTR struct .
  1214 ;;		 -> main@lcd(8), 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       1       0       0       0
  1226 ;;      Temps:          0       2       0       0       0
  1227 ;;      Totals:         0       3       0       0       0
  1228 ;;Total ram usage:        3 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 4
  1231 ;; This function calls:
  1232 ;;		_Lcd_Clear
  1233 ;;		_Lcd_Command
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     03BD                     _Lcd_Init:	
  1240                           ;psect for function _Lcd_Init
  1241                           
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1245                           ;Lcd_Init@config stored from wreg
  1246     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1247     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1248     03BF  00A4               	movwf	Lcd_Init@config
  1249     03C0                     l831:
  1250                           
  1251                           ;../../pic16flcd.c: 117:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1252     03C0  3014               	movlw	20
  1253     03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1254     03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1255     03C3  00A3               	movwf	??_Lcd_Init+1
  1256     03C4  3079               	movlw	121
  1257     03C5  00A2               	movwf	??_Lcd_Init
  1258     03C6                     u1237:
  1259     03C6  0BA2               	decfsz	??_Lcd_Init,f
  1260     03C7  2BC6               	goto	u1237
  1261     03C8  0BA3               	decfsz	??_Lcd_Init+1,f
  1262     03C9  2BC6               	goto	u1237
  1263     03CA                     l833:
  1264                           
  1265                           ;../../pic16flcd.c: 118:     Lcd_Command(config, 0x03);
  1266     03CA  3003               	movlw	3
  1267     03CB  00F9               	movwf	Lcd_Command@cmd
  1268     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1269     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1270     03CE  0824               	movf	Lcd_Init@config,w
  1271     03CF  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1272     03D4                     l835:
  1273                           
  1274                           ;../../pic16flcd.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1275     03D4  3007               	movlw	7
  1276     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1277     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1278     03D7  00A3               	movwf	??_Lcd_Init+1
  1279     03D8  307C               	movlw	124
  1280     03D9  00A2               	movwf	??_Lcd_Init
  1281     03DA                     u1247:
  1282     03DA  0BA2               	decfsz	??_Lcd_Init,f
  1283     03DB  2BDA               	goto	u1247
  1284     03DC  0BA3               	decfsz	??_Lcd_Init+1,f
  1285     03DD  2BDA               	goto	u1247
  1286     03DE  0000               	nop
  1287                           
  1288                           ;../../pic16flcd.c: 120:     Lcd_Command(config, 0x03);
  1289     03DF  3003               	movlw	3
  1290     03E0  00F9               	movwf	Lcd_Command@cmd
  1291     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1292     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1293     03E3  0824               	movf	Lcd_Init@config,w
  1294     03E4  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1295     03E9                     l837:
  1296                           
  1297                           ;../../pic16flcd.c: 121:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1298     03E9  3020               	movlw	32
  1299     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1300     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1301     03EC  00A2               	movwf	??_Lcd_Init
  1302     03ED                     u1257:
  1303     03ED  0BA2               	decfsz	??_Lcd_Init,f
  1304     03EE  2BED               	goto	u1257
  1305     03EF  0000               	nop
  1306     03F0                     l839:
  1307                           
  1308                           ;../../pic16flcd.c: 122:     Lcd_Command(config, 0x03);
  1309     03F0  3003               	movlw	3
  1310     03F1  00F9               	movwf	Lcd_Command@cmd
  1311     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1312     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1313     03F4  0824               	movf	Lcd_Init@config,w
  1314     03F5  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1315     03FA                     l841:
  1316                           
  1317                           ;../../pic16flcd.c: 123:     Lcd_Command(config, 0x02);
  1318     03FA  3002               	movlw	2
  1319     03FB  00F9               	movwf	Lcd_Command@cmd
  1320     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1321     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1322     03FE  0824               	movf	Lcd_Init@config,w
  1323     03FF  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1324     0404                     l843:
  1325                           
  1326                           ;../../pic16flcd.c: 125:     Lcd_Command(config, 0x28);
  1327     0404  3028               	movlw	40
  1328     0405  00F9               	movwf	Lcd_Command@cmd
  1329     0406  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0407  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0408  0824               	movf	Lcd_Init@config,w
  1332     0409  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1333     040E                     l845:
  1334                           
  1335                           ;../../pic16flcd.c: 126:     Lcd_Command(config, 0x0C);
  1336     040E  300C               	movlw	12
  1337     040F  00F9               	movwf	Lcd_Command@cmd
  1338     0410  1283               	bcf	3,5	;RP0=0, select bank0
  1339     0411  1303               	bcf	3,6	;RP1=0, select bank0
  1340     0412  0824               	movf	Lcd_Init@config,w
  1341     0413  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1342     0418                     l847:
  1343                           
  1344                           ;../../pic16flcd.c: 127:     Lcd_Command(config, 0x06);
  1345     0418  3006               	movlw	6
  1346     0419  00F9               	movwf	Lcd_Command@cmd
  1347     041A  1283               	bcf	3,5	;RP0=0, select bank0
  1348     041B  1303               	bcf	3,6	;RP1=0, select bank0
  1349     041C  0824               	movf	Lcd_Init@config,w
  1350     041D  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1351     0422                     l849:
  1352                           
  1353                           ;../../pic16flcd.c: 128:     Lcd_Clear(config);
  1354     0422  1283               	bcf	3,5	;RP0=0, select bank0
  1355     0423  1303               	bcf	3,6	;RP1=0, select bank0
  1356     0424  0824               	movf	Lcd_Init@config,w
  1357     0425  120A  118A  22C3  120A  118A  	fcall	_Lcd_Clear
  1358     042A                     l65:
  1359     042A  0008               	return
  1360     042B                     __end_of_Lcd_Init:
  1361                           
  1362                           	psect	text5
  1363     02C3                     __ptext5:	
  1364 ;; *************** function _Lcd_Clear *****************
  1365 ;; Defined at:
  1366 ;;		line 136 in file "../../pic16flcd.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  config          1    wreg     PTR struct .
  1369 ;;		 -> main@lcd(8), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  config          1   13[COMMON] PTR struct .
  1372 ;;		 -> main@lcd(8), 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0
  1384 ;;      Temps:          0       2       0       0       0
  1385 ;;      Totals:         1       2       0       0       0
  1386 ;;Total ram usage:        3 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 3
  1389 ;; This function calls:
  1390 ;;		_Lcd_Command
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;;		_Lcd_Init
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397     02C3                     _Lcd_Clear:	
  1398                           ;psect for function _Lcd_Clear
  1399                           
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1403                           ;Lcd_Clear@config stored from wreg
  1404     02C3  00FD               	movwf	Lcd_Clear@config
  1405     02C4                     l825:
  1406                           
  1407                           ;../../pic16flcd.c: 137:     Lcd_Command(config, 0x01);
  1408     02C4  01F9               	clrf	Lcd_Command@cmd
  1409     02C5  0AF9               	incf	Lcd_Command@cmd,f
  1410     02C6  087D               	movf	Lcd_Clear@config,w
  1411     02C7  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1412     02CC                     l827:
  1413                           
  1414                           ;../../pic16flcd.c: 138:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1415     02CC  3003               	movlw	3
  1416     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1417     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1418     02CF  00A1               	movwf	??_Lcd_Clear+1
  1419     02D0  3097               	movlw	151
  1420     02D1  00A0               	movwf	??_Lcd_Clear
  1421     02D2                     u1267:
  1422     02D2  0BA0               	decfsz	??_Lcd_Clear,f
  1423     02D3  2AD2               	goto	u1267
  1424     02D4  0BA1               	decfsz	??_Lcd_Clear+1,f
  1425     02D5  2AD2               	goto	u1267
  1426     02D6                     l68:
  1427     02D6  0008               	return
  1428     02D7                     __end_of_Lcd_Clear:
  1429                           
  1430                           	psect	text6
  1431     0384                     __ptext6:	
  1432 ;; *************** function _Lcd_CreateCustomChar *****************
  1433 ;; Defined at:
  1434 ;;		line 181 in file "../../pic16flcd.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  config          1    wreg     PTR struct .
  1437 ;;		 -> main@lcd(8), 
  1438 ;;  location        1    0[BANK0 ] unsigned char 
  1439 ;;  charmap         1    1[BANK0 ] PTR unsigned char 
  1440 ;;		 -> smiley(8), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  config          1    2[BANK0 ] PTR struct .
  1443 ;;		 -> main@lcd(8), 
  1444 ;;  i               1    3[BANK0 ] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       2       0       0       0
  1455 ;;      Locals:         0       2       0       0       0
  1456 ;;      Temps:          1       0       0       0       0
  1457 ;;      Totals:         1       4       0       0       0
  1458 ;;Total ram usage:        5 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 3
  1461 ;; This function calls:
  1462 ;;		_Lcd_Command
  1463 ;;		_Lcd_WriteChar
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     0384                     _Lcd_CreateCustomChar:	
  1470                           ;psect for function _Lcd_CreateCustomChar
  1471                           
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _Lcd_CreateCustomChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1475                           ;Lcd_CreateCustomChar@config stored from wreg
  1476     0384  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0385  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0386  00A2               	movwf	Lcd_CreateCustomChar@config
  1479     0387                     l879:
  1480                           
  1481                           ;../../pic16flcd.c: 182:     unsigned char i;;../../pic16flcd.c: 183:     if(location < 
      +                          8) {
  1482     0387  3008               	movlw	8
  1483     0388  0220               	subwf	Lcd_CreateCustomChar@location,w
  1484     0389  1803               	skipnc
  1485     038A  2B8C               	goto	u1081
  1486     038B  2B8D               	goto	u1080
  1487     038C                     u1081:
  1488     038C  2BBC               	goto	l82
  1489     038D                     u1080:
  1490     038D                     l881:
  1491                           
  1492                           ;../../pic16flcd.c: 185:         Lcd_Command(config, 0x40 + (location * 8));
  1493     038D  0820               	movf	Lcd_CreateCustomChar@location,w
  1494     038E  00FD               	movwf	??_Lcd_CreateCustomChar
  1495     038F  3002               	movlw	2
  1496     0390                     u1095:
  1497     0390  1003               	clrc
  1498     0391  0DFD               	rlf	??_Lcd_CreateCustomChar,f
  1499     0392  3EFF               	addlw	-1
  1500     0393  1D03               	skipz
  1501     0394  2B90               	goto	u1095
  1502     0395  1003               	clrc
  1503     0396  0D7D               	rlf	??_Lcd_CreateCustomChar,w
  1504     0397  3E40               	addlw	64
  1505     0398  00F9               	movwf	Lcd_Command@cmd
  1506     0399  0822               	movf	Lcd_CreateCustomChar@config,w
  1507     039A  120A  118A  242B  120A  118A  	fcall	_Lcd_Command
  1508     039F                     l883:
  1509                           
  1510                           ;../../pic16flcd.c: 186:         for(i = 0; i < 8; i++) {
  1511     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1512     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1513     03A1  01A3               	clrf	Lcd_CreateCustomChar@i
  1514     03A2                     l889:
  1515                           
  1516                           ;../../pic16flcd.c: 187:             Lcd_WriteChar(config, charmap[i]);
  1517     03A2  0823               	movf	Lcd_CreateCustomChar@i,w
  1518     03A3  0721               	addwf	Lcd_CreateCustomChar@charmap,w
  1519     03A4  00FD               	movwf	??_Lcd_CreateCustomChar
  1520     03A5  087D               	movf	??_Lcd_CreateCustomChar,w
  1521     03A6  0084               	movwf	4
  1522     03A7  1383               	bcf	3,7	;select IRP bank0
  1523     03A8  0800               	movf	0,w
  1524     03A9  00F9               	movwf	Lcd_WriteChar@data
  1525     03AA  0822               	movf	Lcd_CreateCustomChar@config,w
  1526     03AB  120A  118A  2555  120A  118A  	fcall	_Lcd_WriteChar
  1527     03B0                     l891:
  1528                           
  1529                           ;../../pic16flcd.c: 188:         }
  1530     03B0  3001               	movlw	1
  1531     03B1  00FD               	movwf	??_Lcd_CreateCustomChar
  1532     03B2  087D               	movf	??_Lcd_CreateCustomChar,w
  1533     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1534     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1535     03B5  07A3               	addwf	Lcd_CreateCustomChar@i,f
  1536     03B6                     l893:
  1537     03B6  3008               	movlw	8
  1538     03B7  0223               	subwf	Lcd_CreateCustomChar@i,w
  1539     03B8  1C03               	skipc
  1540     03B9  2BBB               	goto	u1101
  1541     03BA  2BBC               	goto	u1100
  1542     03BB                     u1101:
  1543     03BB  2BA2               	goto	l889
  1544     03BC                     u1100:
  1545     03BC                     l82:
  1546     03BC  0008               	return
  1547     03BD                     __end_of_Lcd_CreateCustomChar:
  1548                           
  1549                           	psect	text7
  1550     0555                     __ptext7:	
  1551 ;; *************** function _Lcd_WriteChar *****************
  1552 ;; Defined at:
  1553 ;;		line 78 in file "../../pic16flcd.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  config          1    wreg     PTR struct .
  1556 ;;		 -> main@lcd(8), 
  1557 ;;  data            1    9[COMMON] unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  config          1   12[COMMON] PTR struct .
  1560 ;;		 -> main@lcd(8), 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         1       0       0       0       0
  1571 ;;      Locals:         1       0       0       0       0
  1572 ;;      Temps:          2       0       0       0       0
  1573 ;;      Totals:         4       0       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 2
  1577 ;; This function calls:
  1578 ;;		_PulseEnable
  1579 ;;		_SetBit
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;;		_Lcd_WriteString
  1583 ;;		_Lcd_CreateCustomChar
  1584 ;;		_Lcd_WriteCustomChar
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588     0555                     _Lcd_WriteChar:	
  1589                           ;psect for function _Lcd_WriteChar
  1590                           
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1594                           ;Lcd_WriteChar@config stored from wreg
  1595     0555  00FC               	movwf	Lcd_WriteChar@config
  1596     0556                     l829:
  1597                           
  1598                           ;../../pic16flcd.c: 80:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
  1599     0556  087C               	movf	Lcd_WriteChar@config,w
  1600     0557  0084               	movwf	4
  1601     0558  1383               	bcf	3,7	;select IRP bank0
  1602     0559  0800               	movf	0,w
  1603     055A  00F0               	movwf	SetBit@port
  1604     055B  0A84               	incf	4,f
  1605     055C  0800               	movf	0,w
  1606     055D  0384               	decf	4,f
  1607     055E  00F1               	movwf	SetBit@port+1
  1608     055F  087C               	movf	Lcd_WriteChar@config,w
  1609     0560  3E04               	addlw	4
  1610     0561  0084               	movwf	4
  1611     0562  0800               	movf	0,w
  1612     0563  00F2               	movwf	SetBit@pin
  1613     0564  0879               	movf	Lcd_WriteChar@data,w
  1614     0565  00FB               	movwf	??_Lcd_WriteChar+1
  1615     0566  3004               	movlw	4
  1616     0567                     u845:
  1617     0567  1003               	clrc
  1618     0568  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1619     0569  3EFF               	addlw	-1
  1620     056A  1D03               	skipz
  1621     056B  2D67               	goto	u845
  1622     056C  187B               	btfsc	??_Lcd_WriteChar+1,0
  1623     056D  2D6F               	goto	u851
  1624     056E  2D71               	goto	u850
  1625     056F                     u851:
  1626     056F  3001               	movlw	1
  1627     0570  2D72               	goto	u860
  1628     0571                     u850:
  1629     0571  3000               	movlw	0
  1630     0572                     u860:
  1631     0572  00F3               	movwf	SetBit@value
  1632     0573  120A  118A  2324  120A  118A  	fcall	_SetBit
  1633                           
  1634                           ;../../pic16flcd.c: 81:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
  1635     0578  087C               	movf	Lcd_WriteChar@config,w
  1636     0579  0084               	movwf	4
  1637     057A  1383               	bcf	3,7	;select IRP bank0
  1638     057B  0800               	movf	0,w
  1639     057C  00F0               	movwf	SetBit@port
  1640     057D  0A84               	incf	4,f
  1641     057E  0800               	movf	0,w
  1642     057F  0384               	decf	4,f
  1643     0580  00F1               	movwf	SetBit@port+1
  1644     0581  087C               	movf	Lcd_WriteChar@config,w
  1645     0582  3E05               	addlw	5
  1646     0583  0084               	movwf	4
  1647     0584  0800               	movf	0,w
  1648     0585  00F2               	movwf	SetBit@pin
  1649     0586  0879               	movf	Lcd_WriteChar@data,w
  1650     0587  00FB               	movwf	??_Lcd_WriteChar+1
  1651     0588  3005               	movlw	5
  1652     0589                     u875:
  1653     0589  1003               	clrc
  1654     058A  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1655     058B  3EFF               	addlw	-1
  1656     058C  1D03               	skipz
  1657     058D  2D89               	goto	u875
  1658     058E  187B               	btfsc	??_Lcd_WriteChar+1,0
  1659     058F  2D91               	goto	u881
  1660     0590  2D93               	goto	u880
  1661     0591                     u881:
  1662     0591  3001               	movlw	1
  1663     0592  2D94               	goto	u890
  1664     0593                     u880:
  1665     0593  3000               	movlw	0
  1666     0594                     u890:
  1667     0594  00F3               	movwf	SetBit@value
  1668     0595  120A  118A  2324  120A  118A  	fcall	_SetBit
  1669                           
  1670                           ;../../pic16flcd.c: 82:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
  1671     059A  087C               	movf	Lcd_WriteChar@config,w
  1672     059B  0084               	movwf	4
  1673     059C  1383               	bcf	3,7	;select IRP bank0
  1674     059D  0800               	movf	0,w
  1675     059E  00F0               	movwf	SetBit@port
  1676     059F  0A84               	incf	4,f
  1677     05A0  0800               	movf	0,w
  1678     05A1  0384               	decf	4,f
  1679     05A2  00F1               	movwf	SetBit@port+1
  1680     05A3  087C               	movf	Lcd_WriteChar@config,w
  1681     05A4  3E06               	addlw	6
  1682     05A5  0084               	movwf	4
  1683     05A6  0800               	movf	0,w
  1684     05A7  00F2               	movwf	SetBit@pin
  1685     05A8  0879               	movf	Lcd_WriteChar@data,w
  1686     05A9  00FB               	movwf	??_Lcd_WriteChar+1
  1687     05AA  3006               	movlw	6
  1688     05AB                     u905:
  1689     05AB  1003               	clrc
  1690     05AC  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1691     05AD  3EFF               	addlw	-1
  1692     05AE  1D03               	skipz
  1693     05AF  2DAB               	goto	u905
  1694     05B0  187B               	btfsc	??_Lcd_WriteChar+1,0
  1695     05B1  2DB3               	goto	u911
  1696     05B2  2DB5               	goto	u910
  1697     05B3                     u911:
  1698     05B3  3001               	movlw	1
  1699     05B4  2DB6               	goto	u920
  1700     05B5                     u910:
  1701     05B5  3000               	movlw	0
  1702     05B6                     u920:
  1703     05B6  00F3               	movwf	SetBit@value
  1704     05B7  120A  118A  2324  120A  118A  	fcall	_SetBit
  1705                           
  1706                           ;../../pic16flcd.c: 83:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
  1707     05BC  087C               	movf	Lcd_WriteChar@config,w
  1708     05BD  0084               	movwf	4
  1709     05BE  1383               	bcf	3,7	;select IRP bank0
  1710     05BF  0800               	movf	0,w
  1711     05C0  00F0               	movwf	SetBit@port
  1712     05C1  0A84               	incf	4,f
  1713     05C2  0800               	movf	0,w
  1714     05C3  0384               	decf	4,f
  1715     05C4  00F1               	movwf	SetBit@port+1
  1716     05C5  087C               	movf	Lcd_WriteChar@config,w
  1717     05C6  3E07               	addlw	7
  1718     05C7  0084               	movwf	4
  1719     05C8  0800               	movf	0,w
  1720     05C9  00F2               	movwf	SetBit@pin
  1721     05CA  0879               	movf	Lcd_WriteChar@data,w
  1722     05CB  00FB               	movwf	??_Lcd_WriteChar+1
  1723     05CC  3007               	movlw	7
  1724     05CD                     u935:
  1725     05CD  1003               	clrc
  1726     05CE  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1727     05CF  3EFF               	addlw	-1
  1728     05D0  1D03               	skipz
  1729     05D1  2DCD               	goto	u935
  1730     05D2  187B               	btfsc	??_Lcd_WriteChar+1,0
  1731     05D3  2DD5               	goto	u941
  1732     05D4  2DD7               	goto	u940
  1733     05D5                     u941:
  1734     05D5  3001               	movlw	1
  1735     05D6  2DD8               	goto	u950
  1736     05D7                     u940:
  1737     05D7  3000               	movlw	0
  1738     05D8                     u950:
  1739     05D8  00F3               	movwf	SetBit@value
  1740     05D9  120A  118A  2324  120A  118A  	fcall	_SetBit
  1741                           
  1742                           ;../../pic16flcd.c: 85:     SetBit(config->port, config->rs_pin, 1);
  1743     05DE  087C               	movf	Lcd_WriteChar@config,w
  1744     05DF  0084               	movwf	4
  1745     05E0  1383               	bcf	3,7	;select IRP bank0
  1746     05E1  0800               	movf	0,w
  1747     05E2  00F0               	movwf	SetBit@port
  1748     05E3  0A84               	incf	4,f
  1749     05E4  0800               	movf	0,w
  1750     05E5  0384               	decf	4,f
  1751     05E6  00F1               	movwf	SetBit@port+1
  1752     05E7  087C               	movf	Lcd_WriteChar@config,w
  1753     05E8  3E02               	addlw	2
  1754     05E9  0084               	movwf	4
  1755     05EA  0800               	movf	0,w
  1756     05EB  00F2               	movwf	SetBit@pin
  1757     05EC  01F3               	clrf	SetBit@value
  1758     05ED  0AF3               	incf	SetBit@value,f
  1759     05EE  120A  118A  2324  120A  118A  	fcall	_SetBit
  1760                           
  1761                           ;../../pic16flcd.c: 86:     PulseEnable(config);
  1762     05F3  087C               	movf	Lcd_WriteChar@config,w
  1763     05F4  120A  118A  2350  120A  118A  	fcall	_PulseEnable
  1764                           
  1765                           ;../../pic16flcd.c: 89:     SetBit(config->port, config->d4_pin, data & 0x01);
  1766     05F9  087C               	movf	Lcd_WriteChar@config,w
  1767     05FA  0084               	movwf	4
  1768     05FB  1383               	bcf	3,7	;select IRP bank0
  1769     05FC  0800               	movf	0,w
  1770     05FD  00F0               	movwf	SetBit@port
  1771     05FE  0A84               	incf	4,f
  1772     05FF  0800               	movf	0,w
  1773     0600  0384               	decf	4,f
  1774     0601  00F1               	movwf	SetBit@port+1
  1775     0602  087C               	movf	Lcd_WriteChar@config,w
  1776     0603  3E04               	addlw	4
  1777     0604  0084               	movwf	4
  1778     0605  0800               	movf	0,w
  1779     0606  00F2               	movwf	SetBit@pin
  1780     0607  1879               	btfsc	Lcd_WriteChar@data,0
  1781     0608  2E0A               	goto	u961
  1782     0609  2E0C               	goto	u960
  1783     060A                     u961:
  1784     060A  3001               	movlw	1
  1785     060B  2E0D               	goto	u970
  1786     060C                     u960:
  1787     060C  3000               	movlw	0
  1788     060D                     u970:
  1789     060D  00F3               	movwf	SetBit@value
  1790     060E  120A  118A  2324  120A  118A  	fcall	_SetBit
  1791                           
  1792                           ;../../pic16flcd.c: 90:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
  1793     0613  087C               	movf	Lcd_WriteChar@config,w
  1794     0614  0084               	movwf	4
  1795     0615  1383               	bcf	3,7	;select IRP bank0
  1796     0616  0800               	movf	0,w
  1797     0617  00F0               	movwf	SetBit@port
  1798     0618  0A84               	incf	4,f
  1799     0619  0800               	movf	0,w
  1800     061A  0384               	decf	4,f
  1801     061B  00F1               	movwf	SetBit@port+1
  1802     061C  087C               	movf	Lcd_WriteChar@config,w
  1803     061D  3E05               	addlw	5
  1804     061E  0084               	movwf	4
  1805     061F  0800               	movf	0,w
  1806     0620  00F2               	movwf	SetBit@pin
  1807     0621  0879               	movf	Lcd_WriteChar@data,w
  1808     0622  00FB               	movwf	??_Lcd_WriteChar+1
  1809     0623  3001               	movlw	1
  1810     0624                     u985:
  1811     0624  1003               	clrc
  1812     0625  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1813     0626  3EFF               	addlw	-1
  1814     0627  1D03               	skipz
  1815     0628  2E24               	goto	u985
  1816     0629  187B               	btfsc	??_Lcd_WriteChar+1,0
  1817     062A  2E2C               	goto	u991
  1818     062B  2E2E               	goto	u990
  1819     062C                     u991:
  1820     062C  3001               	movlw	1
  1821     062D  2E2F               	goto	u1000
  1822     062E                     u990:
  1823     062E  3000               	movlw	0
  1824     062F                     u1000:
  1825     062F  00F3               	movwf	SetBit@value
  1826     0630  120A  118A  2324  120A  118A  	fcall	_SetBit
  1827                           
  1828                           ;../../pic16flcd.c: 91:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
  1829     0635  087C               	movf	Lcd_WriteChar@config,w
  1830     0636  0084               	movwf	4
  1831     0637  1383               	bcf	3,7	;select IRP bank0
  1832     0638  0800               	movf	0,w
  1833     0639  00F0               	movwf	SetBit@port
  1834     063A  0A84               	incf	4,f
  1835     063B  0800               	movf	0,w
  1836     063C  0384               	decf	4,f
  1837     063D  00F1               	movwf	SetBit@port+1
  1838     063E  087C               	movf	Lcd_WriteChar@config,w
  1839     063F  3E06               	addlw	6
  1840     0640  0084               	movwf	4
  1841     0641  0800               	movf	0,w
  1842     0642  00F2               	movwf	SetBit@pin
  1843     0643  0879               	movf	Lcd_WriteChar@data,w
  1844     0644  00FB               	movwf	??_Lcd_WriteChar+1
  1845     0645  3002               	movlw	2
  1846     0646                     u1015:
  1847     0646  1003               	clrc
  1848     0647  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1849     0648  3EFF               	addlw	-1
  1850     0649  1D03               	skipz
  1851     064A  2E46               	goto	u1015
  1852     064B  187B               	btfsc	??_Lcd_WriteChar+1,0
  1853     064C  2E4E               	goto	u1021
  1854     064D  2E50               	goto	u1020
  1855     064E                     u1021:
  1856     064E  3001               	movlw	1
  1857     064F  2E51               	goto	u1030
  1858     0650                     u1020:
  1859     0650  3000               	movlw	0
  1860     0651                     u1030:
  1861     0651  00F3               	movwf	SetBit@value
  1862     0652  120A  118A  2324  120A  118A  	fcall	_SetBit
  1863                           
  1864                           ;../../pic16flcd.c: 92:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
  1865     0657  087C               	movf	Lcd_WriteChar@config,w
  1866     0658  0084               	movwf	4
  1867     0659  1383               	bcf	3,7	;select IRP bank0
  1868     065A  0800               	movf	0,w
  1869     065B  00F0               	movwf	SetBit@port
  1870     065C  0A84               	incf	4,f
  1871     065D  0800               	movf	0,w
  1872     065E  0384               	decf	4,f
  1873     065F  00F1               	movwf	SetBit@port+1
  1874     0660  087C               	movf	Lcd_WriteChar@config,w
  1875     0661  3E07               	addlw	7
  1876     0662  0084               	movwf	4
  1877     0663  0800               	movf	0,w
  1878     0664  00F2               	movwf	SetBit@pin
  1879     0665  0879               	movf	Lcd_WriteChar@data,w
  1880     0666  00FB               	movwf	??_Lcd_WriteChar+1
  1881     0667  3003               	movlw	3
  1882     0668                     u1045:
  1883     0668  1003               	clrc
  1884     0669  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1885     066A  3EFF               	addlw	-1
  1886     066B  1D03               	skipz
  1887     066C  2E68               	goto	u1045
  1888     066D  187B               	btfsc	??_Lcd_WriteChar+1,0
  1889     066E  2E70               	goto	u1051
  1890     066F  2E72               	goto	u1050
  1891     0670                     u1051:
  1892     0670  3001               	movlw	1
  1893     0671  2E73               	goto	u1060
  1894     0672                     u1050:
  1895     0672  3000               	movlw	0
  1896     0673                     u1060:
  1897     0673  00F3               	movwf	SetBit@value
  1898     0674  120A  118A  2324  120A  118A  	fcall	_SetBit
  1899                           
  1900                           ;../../pic16flcd.c: 94:     PulseEnable(config);
  1901     0679  087C               	movf	Lcd_WriteChar@config,w
  1902     067A  120A  118A  2350  120A  118A  	fcall	_PulseEnable
  1903     067F                     l56:
  1904     067F  0008               	return
  1905     0680                     __end_of_Lcd_WriteChar:
  1906                           
  1907                           	psect	text8
  1908     042B                     __ptext8:	
  1909 ;; *************** function _Lcd_Command *****************
  1910 ;; Defined at:
  1911 ;;		line 52 in file "../../pic16flcd.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  config          1    wreg     PTR struct .
  1914 ;;		 -> main@lcd(8), 
  1915 ;;  cmd             1    9[COMMON] unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  config          1   12[COMMON] PTR struct .
  1918 ;;		 -> main@lcd(8), 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         1       0       0       0       0
  1929 ;;      Locals:         1       0       0       0       0
  1930 ;;      Temps:          2       0       0       0       0
  1931 ;;      Totals:         4       0       0       0       0
  1932 ;;Total ram usage:        4 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 2
  1935 ;; This function calls:
  1936 ;;		_PulseEnable
  1937 ;;		_SetBit
  1938 ;; This function is called by:
  1939 ;;		_Lcd_Init
  1940 ;;		_Lcd_Clear
  1941 ;;		_Lcd_SetCursor
  1942 ;;		_Lcd_CreateCustomChar
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946     042B                     _Lcd_Command:	
  1947                           ;psect for function _Lcd_Command
  1948                           
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1952                           ;Lcd_Command@config stored from wreg
  1953     042B  00FC               	movwf	Lcd_Command@config
  1954     042C                     l823:
  1955                           
  1956                           ;../../pic16flcd.c: 54:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1957     042C  087C               	movf	Lcd_Command@config,w
  1958     042D  0084               	movwf	4
  1959     042E  1383               	bcf	3,7	;select IRP bank0
  1960     042F  0800               	movf	0,w
  1961     0430  00F0               	movwf	SetBit@port
  1962     0431  0A84               	incf	4,f
  1963     0432  0800               	movf	0,w
  1964     0433  0384               	decf	4,f
  1965     0434  00F1               	movwf	SetBit@port+1
  1966     0435  087C               	movf	Lcd_Command@config,w
  1967     0436  3E04               	addlw	4
  1968     0437  0084               	movwf	4
  1969     0438  0800               	movf	0,w
  1970     0439  00F2               	movwf	SetBit@pin
  1971     043A  0879               	movf	Lcd_Command@cmd,w
  1972     043B  00FB               	movwf	??_Lcd_Command+1
  1973     043C  3004               	movlw	4
  1974     043D                     u615:
  1975     043D  1003               	clrc
  1976     043E  0CFB               	rrf	??_Lcd_Command+1,f
  1977     043F  3EFF               	addlw	-1
  1978     0440  1D03               	skipz
  1979     0441  2C3D               	goto	u615
  1980     0442  187B               	btfsc	??_Lcd_Command+1,0
  1981     0443  2C45               	goto	u621
  1982     0444  2C47               	goto	u620
  1983     0445                     u621:
  1984     0445  3001               	movlw	1
  1985     0446  2C48               	goto	u630
  1986     0447                     u620:
  1987     0447  3000               	movlw	0
  1988     0448                     u630:
  1989     0448  00F3               	movwf	SetBit@value
  1990     0449  120A  118A  2324  120A  118A  	fcall	_SetBit
  1991                           
  1992                           ;../../pic16flcd.c: 55:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1993     044E  087C               	movf	Lcd_Command@config,w
  1994     044F  0084               	movwf	4
  1995     0450  1383               	bcf	3,7	;select IRP bank0
  1996     0451  0800               	movf	0,w
  1997     0452  00F0               	movwf	SetBit@port
  1998     0453  0A84               	incf	4,f
  1999     0454  0800               	movf	0,w
  2000     0455  0384               	decf	4,f
  2001     0456  00F1               	movwf	SetBit@port+1
  2002     0457  087C               	movf	Lcd_Command@config,w
  2003     0458  3E05               	addlw	5
  2004     0459  0084               	movwf	4
  2005     045A  0800               	movf	0,w
  2006     045B  00F2               	movwf	SetBit@pin
  2007     045C  0879               	movf	Lcd_Command@cmd,w
  2008     045D  00FB               	movwf	??_Lcd_Command+1
  2009     045E  3005               	movlw	5
  2010     045F                     u645:
  2011     045F  1003               	clrc
  2012     0460  0CFB               	rrf	??_Lcd_Command+1,f
  2013     0461  3EFF               	addlw	-1
  2014     0462  1D03               	skipz
  2015     0463  2C5F               	goto	u645
  2016     0464  187B               	btfsc	??_Lcd_Command+1,0
  2017     0465  2C67               	goto	u651
  2018     0466  2C69               	goto	u650
  2019     0467                     u651:
  2020     0467  3001               	movlw	1
  2021     0468  2C6A               	goto	u660
  2022     0469                     u650:
  2023     0469  3000               	movlw	0
  2024     046A                     u660:
  2025     046A  00F3               	movwf	SetBit@value
  2026     046B  120A  118A  2324  120A  118A  	fcall	_SetBit
  2027                           
  2028                           ;../../pic16flcd.c: 56:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  2029     0470  087C               	movf	Lcd_Command@config,w
  2030     0471  0084               	movwf	4
  2031     0472  1383               	bcf	3,7	;select IRP bank0
  2032     0473  0800               	movf	0,w
  2033     0474  00F0               	movwf	SetBit@port
  2034     0475  0A84               	incf	4,f
  2035     0476  0800               	movf	0,w
  2036     0477  0384               	decf	4,f
  2037     0478  00F1               	movwf	SetBit@port+1
  2038     0479  087C               	movf	Lcd_Command@config,w
  2039     047A  3E06               	addlw	6
  2040     047B  0084               	movwf	4
  2041     047C  0800               	movf	0,w
  2042     047D  00F2               	movwf	SetBit@pin
  2043     047E  0879               	movf	Lcd_Command@cmd,w
  2044     047F  00FB               	movwf	??_Lcd_Command+1
  2045     0480  3006               	movlw	6
  2046     0481                     u675:
  2047     0481  1003               	clrc
  2048     0482  0CFB               	rrf	??_Lcd_Command+1,f
  2049     0483  3EFF               	addlw	-1
  2050     0484  1D03               	skipz
  2051     0485  2C81               	goto	u675
  2052     0486  187B               	btfsc	??_Lcd_Command+1,0
  2053     0487  2C89               	goto	u681
  2054     0488  2C8B               	goto	u680
  2055     0489                     u681:
  2056     0489  3001               	movlw	1
  2057     048A  2C8C               	goto	u690
  2058     048B                     u680:
  2059     048B  3000               	movlw	0
  2060     048C                     u690:
  2061     048C  00F3               	movwf	SetBit@value
  2062     048D  120A  118A  2324  120A  118A  	fcall	_SetBit
  2063                           
  2064                           ;../../pic16flcd.c: 57:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  2065     0492  087C               	movf	Lcd_Command@config,w
  2066     0493  0084               	movwf	4
  2067     0494  1383               	bcf	3,7	;select IRP bank0
  2068     0495  0800               	movf	0,w
  2069     0496  00F0               	movwf	SetBit@port
  2070     0497  0A84               	incf	4,f
  2071     0498  0800               	movf	0,w
  2072     0499  0384               	decf	4,f
  2073     049A  00F1               	movwf	SetBit@port+1
  2074     049B  087C               	movf	Lcd_Command@config,w
  2075     049C  3E07               	addlw	7
  2076     049D  0084               	movwf	4
  2077     049E  0800               	movf	0,w
  2078     049F  00F2               	movwf	SetBit@pin
  2079     04A0  0879               	movf	Lcd_Command@cmd,w
  2080     04A1  00FB               	movwf	??_Lcd_Command+1
  2081     04A2  3007               	movlw	7
  2082     04A3                     u705:
  2083     04A3  1003               	clrc
  2084     04A4  0CFB               	rrf	??_Lcd_Command+1,f
  2085     04A5  3EFF               	addlw	-1
  2086     04A6  1D03               	skipz
  2087     04A7  2CA3               	goto	u705
  2088     04A8  187B               	btfsc	??_Lcd_Command+1,0
  2089     04A9  2CAB               	goto	u711
  2090     04AA  2CAD               	goto	u710
  2091     04AB                     u711:
  2092     04AB  3001               	movlw	1
  2093     04AC  2CAE               	goto	u720
  2094     04AD                     u710:
  2095     04AD  3000               	movlw	0
  2096     04AE                     u720:
  2097     04AE  00F3               	movwf	SetBit@value
  2098     04AF  120A  118A  2324  120A  118A  	fcall	_SetBit
  2099                           
  2100                           ;../../pic16flcd.c: 59:     SetBit(config->port, config->rs_pin, 0);
  2101     04B4  087C               	movf	Lcd_Command@config,w
  2102     04B5  0084               	movwf	4
  2103     04B6  1383               	bcf	3,7	;select IRP bank0
  2104     04B7  0800               	movf	0,w
  2105     04B8  00F0               	movwf	SetBit@port
  2106     04B9  0A84               	incf	4,f
  2107     04BA  0800               	movf	0,w
  2108     04BB  0384               	decf	4,f
  2109     04BC  00F1               	movwf	SetBit@port+1
  2110     04BD  087C               	movf	Lcd_Command@config,w
  2111     04BE  3E02               	addlw	2
  2112     04BF  0084               	movwf	4
  2113     04C0  0800               	movf	0,w
  2114     04C1  00F2               	movwf	SetBit@pin
  2115     04C2  01F3               	clrf	SetBit@value
  2116     04C3  120A  118A  2324  120A  118A  	fcall	_SetBit
  2117                           
  2118                           ;../../pic16flcd.c: 60:     PulseEnable(config);
  2119     04C8  087C               	movf	Lcd_Command@config,w
  2120     04C9  120A  118A  2350  120A  118A  	fcall	_PulseEnable
  2121                           
  2122                           ;../../pic16flcd.c: 63:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  2123     04CE  087C               	movf	Lcd_Command@config,w
  2124     04CF  0084               	movwf	4
  2125     04D0  1383               	bcf	3,7	;select IRP bank0
  2126     04D1  0800               	movf	0,w
  2127     04D2  00F0               	movwf	SetBit@port
  2128     04D3  0A84               	incf	4,f
  2129     04D4  0800               	movf	0,w
  2130     04D5  0384               	decf	4,f
  2131     04D6  00F1               	movwf	SetBit@port+1
  2132     04D7  087C               	movf	Lcd_Command@config,w
  2133     04D8  3E04               	addlw	4
  2134     04D9  0084               	movwf	4
  2135     04DA  0800               	movf	0,w
  2136     04DB  00F2               	movwf	SetBit@pin
  2137     04DC  1879               	btfsc	Lcd_Command@cmd,0
  2138     04DD  2CDF               	goto	u731
  2139     04DE  2CE1               	goto	u730
  2140     04DF                     u731:
  2141     04DF  3001               	movlw	1
  2142     04E0  2CE2               	goto	u740
  2143     04E1                     u730:
  2144     04E1  3000               	movlw	0
  2145     04E2                     u740:
  2146     04E2  00F3               	movwf	SetBit@value
  2147     04E3  120A  118A  2324  120A  118A  	fcall	_SetBit
  2148                           
  2149                           ;../../pic16flcd.c: 64:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  2150     04E8  087C               	movf	Lcd_Command@config,w
  2151     04E9  0084               	movwf	4
  2152     04EA  1383               	bcf	3,7	;select IRP bank0
  2153     04EB  0800               	movf	0,w
  2154     04EC  00F0               	movwf	SetBit@port
  2155     04ED  0A84               	incf	4,f
  2156     04EE  0800               	movf	0,w
  2157     04EF  0384               	decf	4,f
  2158     04F0  00F1               	movwf	SetBit@port+1
  2159     04F1  087C               	movf	Lcd_Command@config,w
  2160     04F2  3E05               	addlw	5
  2161     04F3  0084               	movwf	4
  2162     04F4  0800               	movf	0,w
  2163     04F5  00F2               	movwf	SetBit@pin
  2164     04F6  0879               	movf	Lcd_Command@cmd,w
  2165     04F7  00FB               	movwf	??_Lcd_Command+1
  2166     04F8  3001               	movlw	1
  2167     04F9                     u755:
  2168     04F9  1003               	clrc
  2169     04FA  0CFB               	rrf	??_Lcd_Command+1,f
  2170     04FB  3EFF               	addlw	-1
  2171     04FC  1D03               	skipz
  2172     04FD  2CF9               	goto	u755
  2173     04FE  187B               	btfsc	??_Lcd_Command+1,0
  2174     04FF  2D01               	goto	u761
  2175     0500  2D03               	goto	u760
  2176     0501                     u761:
  2177     0501  3001               	movlw	1
  2178     0502  2D04               	goto	u770
  2179     0503                     u760:
  2180     0503  3000               	movlw	0
  2181     0504                     u770:
  2182     0504  00F3               	movwf	SetBit@value
  2183     0505  120A  118A  2324  120A  118A  	fcall	_SetBit
  2184                           
  2185                           ;../../pic16flcd.c: 65:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  2186     050A  087C               	movf	Lcd_Command@config,w
  2187     050B  0084               	movwf	4
  2188     050C  1383               	bcf	3,7	;select IRP bank0
  2189     050D  0800               	movf	0,w
  2190     050E  00F0               	movwf	SetBit@port
  2191     050F  0A84               	incf	4,f
  2192     0510  0800               	movf	0,w
  2193     0511  0384               	decf	4,f
  2194     0512  00F1               	movwf	SetBit@port+1
  2195     0513  087C               	movf	Lcd_Command@config,w
  2196     0514  3E06               	addlw	6
  2197     0515  0084               	movwf	4
  2198     0516  0800               	movf	0,w
  2199     0517  00F2               	movwf	SetBit@pin
  2200     0518  0879               	movf	Lcd_Command@cmd,w
  2201     0519  00FB               	movwf	??_Lcd_Command+1
  2202     051A  3002               	movlw	2
  2203     051B                     u785:
  2204     051B  1003               	clrc
  2205     051C  0CFB               	rrf	??_Lcd_Command+1,f
  2206     051D  3EFF               	addlw	-1
  2207     051E  1D03               	skipz
  2208     051F  2D1B               	goto	u785
  2209     0520  187B               	btfsc	??_Lcd_Command+1,0
  2210     0521  2D23               	goto	u791
  2211     0522  2D25               	goto	u790
  2212     0523                     u791:
  2213     0523  3001               	movlw	1
  2214     0524  2D26               	goto	u800
  2215     0525                     u790:
  2216     0525  3000               	movlw	0
  2217     0526                     u800:
  2218     0526  00F3               	movwf	SetBit@value
  2219     0527  120A  118A  2324  120A  118A  	fcall	_SetBit
  2220                           
  2221                           ;../../pic16flcd.c: 66:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  2222     052C  087C               	movf	Lcd_Command@config,w
  2223     052D  0084               	movwf	4
  2224     052E  1383               	bcf	3,7	;select IRP bank0
  2225     052F  0800               	movf	0,w
  2226     0530  00F0               	movwf	SetBit@port
  2227     0531  0A84               	incf	4,f
  2228     0532  0800               	movf	0,w
  2229     0533  0384               	decf	4,f
  2230     0534  00F1               	movwf	SetBit@port+1
  2231     0535  087C               	movf	Lcd_Command@config,w
  2232     0536  3E07               	addlw	7
  2233     0537  0084               	movwf	4
  2234     0538  0800               	movf	0,w
  2235     0539  00F2               	movwf	SetBit@pin
  2236     053A  0879               	movf	Lcd_Command@cmd,w
  2237     053B  00FB               	movwf	??_Lcd_Command+1
  2238     053C  3003               	movlw	3
  2239     053D                     u815:
  2240     053D  1003               	clrc
  2241     053E  0CFB               	rrf	??_Lcd_Command+1,f
  2242     053F  3EFF               	addlw	-1
  2243     0540  1D03               	skipz
  2244     0541  2D3D               	goto	u815
  2245     0542  187B               	btfsc	??_Lcd_Command+1,0
  2246     0543  2D45               	goto	u821
  2247     0544  2D47               	goto	u820
  2248     0545                     u821:
  2249     0545  3001               	movlw	1
  2250     0546  2D48               	goto	u830
  2251     0547                     u820:
  2252     0547  3000               	movlw	0
  2253     0548                     u830:
  2254     0548  00F3               	movwf	SetBit@value
  2255     0549  120A  118A  2324  120A  118A  	fcall	_SetBit
  2256                           
  2257                           ;../../pic16flcd.c: 68:     PulseEnable(config);
  2258     054E  087C               	movf	Lcd_Command@config,w
  2259     054F  120A  118A  2350  120A  118A  	fcall	_PulseEnable
  2260     0554                     l53:
  2261     0554  0008               	return
  2262     0555                     __end_of_Lcd_Command:
  2263                           
  2264                           	psect	text9
  2265     0350                     __ptext9:	
  2266 ;; *************** function _PulseEnable *****************
  2267 ;; Defined at:
  2268 ;;		line 38 in file "../../pic16flcd.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  config          1    wreg     PTR struct .
  2271 ;;		 -> main@lcd(8), 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  config          1    8[COMMON] PTR struct .
  2274 ;;		 -> main@lcd(8), 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         1       0       0       0       0
  2286 ;;      Temps:          2       0       0       0       0
  2287 ;;      Totals:         3       0       0       0       0
  2288 ;;Total ram usage:        3 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 1
  2291 ;; This function calls:
  2292 ;;		_SetBit
  2293 ;; This function is called by:
  2294 ;;		_Lcd_Command
  2295 ;;		_Lcd_WriteChar
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299     0350                     _PulseEnable:	
  2300                           ;psect for function _PulseEnable
  2301                           
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2305                           ;PulseEnable@config stored from wreg
  2306     0350  00F8               	movwf	PulseEnable@config
  2307     0351                     l817:
  2308                           
  2309                           ;../../pic16flcd.c: 39:     SetBit(config->port, config->en_pin, 1);
  2310     0351  0878               	movf	PulseEnable@config,w
  2311     0352  0084               	movwf	4
  2312     0353  1383               	bcf	3,7	;select IRP bank0
  2313     0354  0800               	movf	0,w
  2314     0355  00F0               	movwf	SetBit@port
  2315     0356  0A84               	incf	4,f
  2316     0357  0800               	movf	0,w
  2317     0358  0384               	decf	4,f
  2318     0359  00F1               	movwf	SetBit@port+1
  2319     035A  0878               	movf	PulseEnable@config,w
  2320     035B  3E03               	addlw	3
  2321     035C  0084               	movwf	4
  2322     035D  0800               	movf	0,w
  2323     035E  00F2               	movwf	SetBit@pin
  2324     035F  01F3               	clrf	SetBit@value
  2325     0360  0AF3               	incf	SetBit@value,f
  2326     0361  120A  118A  2324  120A  118A  	fcall	_SetBit
  2327     0366                     l819:
  2328                           
  2329                           ;../../pic16flcd.c: 40:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2330     0366  3003               	movlw	3
  2331     0367  00F7               	movwf	??_PulseEnable+1
  2332     0368  3097               	movlw	151
  2333     0369  00F6               	movwf	??_PulseEnable
  2334     036A                     u1277:
  2335     036A  0BF6               	decfsz	??_PulseEnable,f
  2336     036B  2B6A               	goto	u1277
  2337     036C  0BF7               	decfsz	??_PulseEnable+1,f
  2338     036D  2B6A               	goto	u1277
  2339     036E  2B6F               	nop2
  2340     036F                     l821:
  2341                           
  2342                           ;../../pic16flcd.c: 41:     SetBit(config->port, config->en_pin, 0);
  2343     036F  0878               	movf	PulseEnable@config,w
  2344     0370  0084               	movwf	4
  2345     0371  1383               	bcf	3,7	;select IRP bank0
  2346     0372  0800               	movf	0,w
  2347     0373  00F0               	movwf	SetBit@port
  2348     0374  0A84               	incf	4,f
  2349     0375  0800               	movf	0,w
  2350     0376  0384               	decf	4,f
  2351     0377  00F1               	movwf	SetBit@port+1
  2352     0378  0878               	movf	PulseEnable@config,w
  2353     0379  3E03               	addlw	3
  2354     037A  0084               	movwf	4
  2355     037B  0800               	movf	0,w
  2356     037C  00F2               	movwf	SetBit@pin
  2357     037D  01F3               	clrf	SetBit@value
  2358     037E  120A  118A  2324  120A  118A  	fcall	_SetBit
  2359     0383                     l50:
  2360     0383  0008               	return
  2361     0384                     __end_of_PulseEnable:
  2362                           
  2363                           	psect	text10
  2364     0324                     __ptext10:	
  2365 ;; *************** function _SetBit *****************
  2366 ;; Defined at:
  2367 ;;		line 24 in file "../../pic16flcd.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  2370 ;;		 -> PORTC(1), 
  2371 ;;  pin             1    2[COMMON] unsigned char 
  2372 ;;  value           1    3[COMMON] _Bool 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         4       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0
  2386 ;;      Temps:          2       0       0       0       0
  2387 ;;      Totals:         6       0       0       0       0
  2388 ;;Total ram usage:        6 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_PulseEnable
  2394 ;;		_Lcd_Command
  2395 ;;		_Lcd_WriteChar
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     0324                     _SetBit:	
  2400                           ;psect for function _SetBit
  2401                           
  2402     0324                     l811:	
  2403                           ;incstack = 0
  2404                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  2405                           
  2406                           
  2407                           ;../../pic16flcd.c: 25:     if (value) {
  2408     0324  0873               	movf	SetBit@value,w
  2409     0325  1903               	btfsc	3,2
  2410     0326  2B28               	goto	u581
  2411     0327  2B29               	goto	u580
  2412     0328                     u581:
  2413     0328  2B3C               	goto	l815
  2414     0329                     u580:
  2415     0329                     l813:
  2416                           
  2417                           ;../../pic16flcd.c: 26:         *port |= (1 << pin);
  2418     0329  3001               	movlw	1
  2419     032A  00F4               	movwf	??_SetBit
  2420     032B  0A72               	incf	SetBit@pin,w
  2421     032C  2B2F               	goto	u594
  2422     032D                     u595:
  2423     032D  1003               	clrc
  2424     032E  0DF4               	rlf	??_SetBit,f
  2425     032F                     u594:
  2426     032F  3EFF               	addlw	-1
  2427     0330  1D03               	skipz
  2428     0331  2B2D               	goto	u595
  2429     0332  0874               	movf	??_SetBit,w
  2430     0333  00F5               	movwf	??_SetBit+1
  2431     0334  0870               	movf	SetBit@port,w
  2432     0335  0084               	movwf	4
  2433     0336  1783               	bsf	3,7
  2434     0337  1C71               	btfss	SetBit@port+1,0
  2435     0338  1383               	bcf	3,7
  2436     0339  0875               	movf	??_SetBit+1,w
  2437     033A  0480               	iorwf	0,f
  2438                           
  2439                           ;../../pic16flcd.c: 27:     } else {
  2440     033B  2B4F               	goto	l47
  2441     033C                     l815:
  2442                           
  2443                           ;../../pic16flcd.c: 28:         *port &= ~(1 << pin);
  2444     033C  3001               	movlw	1
  2445     033D  00F4               	movwf	??_SetBit
  2446     033E  0A72               	incf	SetBit@pin,w
  2447     033F  2B42               	goto	u604
  2448     0340                     u605:
  2449     0340  1003               	clrc
  2450     0341  0DF4               	rlf	??_SetBit,f
  2451     0342                     u604:
  2452     0342  3EFF               	addlw	-1
  2453     0343  1D03               	skipz
  2454     0344  2B40               	goto	u605
  2455     0345  0874               	movf	??_SetBit,w
  2456     0346  3AFF               	xorlw	255
  2457     0347  00F5               	movwf	??_SetBit+1
  2458     0348  0870               	movf	SetBit@port,w
  2459     0349  0084               	movwf	4
  2460     034A  1783               	bsf	3,7
  2461     034B  1C71               	btfss	SetBit@port+1,0
  2462     034C  1383               	bcf	3,7
  2463     034D  0875               	movf	??_SetBit+1,w
  2464     034E  0580               	andwf	0,f
  2465     034F                     l47:
  2466     034F  0008               	return
  2467     0350                     __end_of_SetBit:
  2468     007E                     btemp	set	126	;btemp
  2469     007E                     wtemp0	set	126
  2470                           
  2471                           	psect	config
  2472                           
  2473                           ;Config register CONFIG @ 0x2007
  2474                           ;	Oscillator Selection bits
  2475                           ;	FOSC = HS, HS oscillator
  2476                           ;	Watchdog Timer Enable bit
  2477                           ;	WDTE = OFF, WDT disabled
  2478                           ;	Power-up Timer Enable bit
  2479                           ;	PWRTE = OFF, PWRT disabled
  2480                           ;	Brown-out Reset Enable bit
  2481                           ;	BOREN = OFF, BOR disabled
  2482                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2483                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2484                           ;	Data EEPROM Memory Code Protection bit
  2485                           ;	CPD = OFF, Data EEPROM code protection off
  2486                           ;	Flash Program Memory Write Enable bits
  2487                           ;	WRT = 0x3, unprogrammed default
  2488                           ;	In-Circuit Debugger Mode bit
  2489                           ;	DEBUG = 0x1, unprogrammed default
  2490                           ;	Flash Program Memory Code Protection bit
  2491                           ;	CP = OFF, Code protection off
  2492     2007                     	org	8199
  2493     2007  3F3A               	dw	16186

Data Sizes:
    Strings     12
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    F962$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_CreateCustomChar@charmap	PTR unsigned char  size(1) Largest target is 8
		 -> smiley(BANK0[8]), 

    Lcd_CreateCustomChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_CreateCustomChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteCustomChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteCustomChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S23$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_CreateCustomChar
    _main->_Lcd_WriteCustomChar
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteCustomChar->_Lcd_WriteChar
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_CreateCustomChar->_Lcd_Command
    _Lcd_CreateCustomChar->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  102866
                                              6 BANK0     13    13      0
                          _Lcd_Clear
               _Lcd_CreateCustomChar
                           _Lcd_Init
                      _Lcd_SetCursor
                      _Lcd_WriteChar
                _Lcd_WriteCustomChar
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     2      1   11006
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteCustomChar                                  2     1      1   11092
                                             13 COMMON     1     0      1
                                              0 BANK0      1     1      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   12653
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22895
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11420
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_CreateCustomChar                                 5     3      2   22350
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                        _Lcd_Command
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10721
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11266
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_CreateCustomChar
     _Lcd_Command
     _Lcd_WriteChar
       _PulseEnable
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteChar
   _Lcd_WriteCustomChar
     _Lcd_WriteChar
   _Lcd_WriteString
     _Lcd_WriteChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan  1 14:10:02 2024

                           pc 0002                            l50 0383                            l53 0554  
                          l62 02FB                            l47 034F                            l56 067F  
                          l65 042A                            l82 03BC                            l68 02D6  
                          l76 0323                            l85 029F                Lcd_Init@config 0024  
                          fsr 0004                           l811 0324                           l813 0329  
                         l821 036F                           l901 069A                           l815 033C  
                         l823 042C                           l831 03C0                           l911 06C6  
                         l903 06A0                           l817 0351                           l825 02C4  
                         l841 03FA                           l833 03CA                           l921 06F9  
                         l913 06CE                           l905 06A6                           l819 0366  
                         l827 02CC                           l843 0404                           l835 03D4  
                         l851 02FF                           l923 0700                           l915 06DC  
                         l907 06B2                           l829 0556                           l845 040E  
                         l837 03E9                           l861 0316                           l853 0300  
                         l941 0748                           l933 0718                           l925 070E  
                         l917 06E2                           l909 06BA                           l847 0418  
                         l839 03F0                           l863 031B                           l855 0303  
                         l871 02DA                           l951 077E                           l943 0756  
                         l935 072D                           l927 0714                           l919 06ED  
                         l881 038D                           l849 0422                           l873 02DB  
                         l961 079C                           l953 0784                           l937 073C  
                         l891 03B0                           l883 039F                           l859 0306  
                         l875 02E9                           l971 07DE                           l963 07AD  
                         l955 078A                           l947 075A                           l939 0742  
                         l893 03B6                           l877 02EF                           l973 07E4  
                         l965 07BC                           l957 0798                           l949 076F  
                         l879 0387                           l895 0297                           l967 07C8  
                         l889 03A2                           l969 07CF                           l897 0680  
                         l899 0683                           u604 0342                           u620 0447  
                         u605 0340                           u621 0445                           u710 04AD  
                         u630 0448                           u711 04AB                           u615 043D  
                         u800 0526                           u720 04AE                           u705 04A3  
                         u730 04E1                           u650 0469                           u731 04DF  
                         u651 0467                           u580 0329                           u820 0547  
                         u740 04E2                           u660 046A                           u581 0328  
                         u821 0545                           u645 045F                           u830 0548  
                         u910 05B5                           u815 053D                           u911 05B3  
                         u760 0503                           u680 048B                           u920 05B6  
                         u761 0501                           u681 0489                           u905 05AB  
                         u594 032F                           u770 0504                           u690 048C  
                         u850 0571                           u595 032D                           u755 04F9  
                         u675 0481                           u851 056F                           u940 05D7  
                         u860 0572                           u941 05D5                           u845 0567  
                         u790 0525                           u950 05D8                           u791 0523  
                         u935 05CD                           u960 060C                           u880 0593  
                         u785 051B                           u961 060A                           u881 0591  
                         u970 060D                           u890 0594                           u875 0589  
                         u990 062E                           u991 062C                           u985 0624  
                         fsr0 0004              ?_Lcd_WriteString 007D                           indf 0000  
         __end_of_Lcd_Command 0555                          l1005 030E                          STR_1 000F  
                        STR_2 0009                          u1000 062F                          u1020 0650  
                        u1100 03BC                          u1021 064E                          u1101 03BB  
                        u1030 0651                          u1110 068D                          u1015 0646  
                        u1120 0748                          u1121 0747                          u1050 0672  
                        u1130 078A                          u1051 0670                          u1131 0789  
                        u1060 0673                          u1140 07EA                          u1045 0668  
                        u1141 07E9                          u1070 02FB                          u1071 02FA  
                        u1207 0792                          u1080 038D                          u1081 038C  
                        u1217 07B5                          u1227 07D7                          u1237 03C6  
                        u1157 06D6                          u1095 0390                          u1247 03DA  
                        u1167 0708                          u1257 03ED                          u1177 0735  
                        u1267 02D2                          u1187 0750                          u1277 036A  
                        u1197 0777            Lcd_WriteString@str 007D                          _main 0680  
                        btemp 007E                          start 0000                         ?_main 0070  
                       _PORTC 0007                         _TRISC 0087                    SetBit@port 0070  
                       main@i 002A                         pclath 000A                         status 0003  
                       wtemp0 007E              __end_of_Lcd_Init 042B             PulseEnable@config 0078  
             __initialization 07EE                  __end_of_main 07EE                   _Lcd_Command 042B  
                      ??_main 0026         __end_of_Lcd_SetCursor 0324                        _SetBit 0324  
        Lcd_SetCursor@address 0024                   SetBit@value 0073                        _smiley 003B  
       __end_of_Lcd_WriteChar 0680   Lcd_CreateCustomChar@charmap 0021       __end_of__initialization 07FC  
               ??_PulseEnable 0076             __end_of_Lcd_Clear 02D7                __pcstackCOMMON 0070  
                __pidataBANK0 02A0           _Lcd_WriteCustomChar 0294                     ?_Lcd_Init 0070  
        ?_Lcd_WriteCustomChar 007D                       ?_SetBit 0070                    __pmaintext 0680  
         __end_of_PulseEnable 0384                    ??_Lcd_Init 0022         Lcd_WriteString@config 0021  
                  __stringtab 0003         ??_Lcd_WriteCustomChar 007E             Lcd_WriteChar@data 0079  
                ?_Lcd_Command 0079                       __ptext1 02D7                       __ptext2 0294  
                     __ptext3 02FC                       __ptext4 03BD                       __ptext5 02C3  
                     __ptext6 0384                       __ptext7 0555                       __ptext8 042B  
                     __ptext9 0350  __end_of_Lcd_CreateCustomChar 03BD                       main@lcd 002B  
        end_of_initialization 07FC              Lcd_SetCursor@row 0020                   _PulseEnable 0350  
Lcd_CreateCustomChar@location 0020         Lcd_CreateCustomChar@i 0023             ??_Lcd_WriteString 0020  
                   _Lcd_Clear 02C3                __end_of_SetBit 0350                     SetBit@pin 0072  
         start_initialization 07EE          _Lcd_CreateCustomChar 0384                      ??_SetBit 0074  
                  ?_Lcd_Clear 0070           Lcd_SetCursor@config 0025           Lcd_SetCursor@column 0021  
                  init_fetch0 02B0                   __pdataBANK0 0033             Lcd_Command@config 007C  
         Lcd_WriteChar@config 007C                     ___latbits 0002                 __pcstackBANK0 0020  
               _Lcd_SetCursor 02FC         ?_Lcd_CreateCustomChar 0020                     __pstrings 0003  
               _Lcd_WriteChar 0555   __end_of_Lcd_WriteCustomChar 02A0                ?_Lcd_SetCursor 0020  
                ?_PulseEnable 0070                   ??_Lcd_Clear 0020               Lcd_Clear@config 007D  
 Lcd_WriteCustomChar@location 007D                   __stringbase 0008                ?_Lcd_WriteChar 0079  
                    _Lcd_Init 03BD               _Lcd_WriteString 02D7     Lcd_WriteCustomChar@config 0020  
      ??_Lcd_CreateCustomChar 007D            __end_of__stringtab 0009    Lcd_CreateCustomChar@config 0022  
             ??_Lcd_SetCursor 0022                      __ptext10 0324                      main@F962 0033  
             ??_Lcd_WriteChar 007A       __end_of_Lcd_WriteString 02FC                      init_ram0 02B4  
                   stringcode 0003                 ??_Lcd_Command 007A                Lcd_Command@cmd 0079  
                    stringdir 0003                      stringtab 0003  
