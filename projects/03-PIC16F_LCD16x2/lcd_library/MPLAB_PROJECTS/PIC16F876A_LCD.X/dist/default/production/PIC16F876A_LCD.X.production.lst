

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 22:56:56 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 18/08/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F876A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     008C                     	;# 
   207     008D                     	;# 
   208     008E                     	;# 
   209     0091                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225                           
   226                           	psect	idataBANK0
   227     03FD                     __pidataBANK0:
   228                           
   229                           ;initializer for main@F952
   230     03FD  3407               	retlw	7
   231     03FE  3400               	retlw	0
   232     03FF  3402               	retlw	2
   233     0400  3403               	retlw	3
   234     0401  3404               	retlw	4
   235     0402  3405               	retlw	5
   236     0403  3406               	retlw	6
   237     0404  3407               	retlw	7
   238     0007                     _PORTC	set	7
   239     0087                     _TRISC	set	135
   240                           
   241                           	psect	strings
   242     0003                     __pstrings:
   243     0003                     stringtab:
   244     0003                     __stringtab:
   245     0003                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248     0003                     stringdir:
   249     0003  3000               	movlw	high stringdir
   250     0004  008A               	movwf	10
   251     0005  0804               	movf	4,w
   252     0006  0A84               	incf	4,f
   253     0007  0782               	addwf	2,f
   254     0008                     __stringbase:
   255     0008  3400               	retlw	0
   256     0009                     __end_of__stringtab:
   257     0009                     STR_2:
   258     0009  3457               	retlw	87	;'W'
   259     000A  346F               	retlw	111	;'o'
   260     000B  3472               	retlw	114	;'r'
   261     000C  346C               	retlw	108	;'l'
   262     000D  3464               	retlw	100	;'d'
   263     000E  3400               	retlw	0
   264     000F                     STR_1:
   265     000F  3448               	retlw	72	;'H'
   266     0010  3465               	retlw	101	;'e'
   267     0011  346C               	retlw	108	;'l'
   268     0012  346C               	retlw	108	;'l'
   269     0013  346F               	retlw	111	;'o'
   270     0014  3400               	retlw	0
   271                           
   272                           	psect	cinit
   273     07EE                     start_initialization:	
   274                           ; #config settings
   275                           
   276     07EE                     __initialization:
   277                           
   278                           ; Initialize objects allocated to BANK0
   279     07EE  1383               	bcf	3,7	;select IRP bank0
   280     07EF  303A               	movlw	low (__pdataBANK0+8)
   281     07F0  00FD               	movwf	btemp+-1
   282     07F1  3003               	movlw	high __pidataBANK0
   283     07F2  00FE               	movwf	btemp
   284     07F3  30FD               	movlw	low __pidataBANK0
   285     07F4  00FF               	movwf	btemp+1
   286     07F5  3032               	movlw	low __pdataBANK0
   287     07F6  0084               	movwf	4
   288     07F7  120A  118A  2409  120A  118A  	fcall	init_ram0
   289     07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292     07FC                     __end_of__initialization:
   293     07FC  0183               	clrf	3
   294     07FD  120A  118A  2CD9   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	dataBANK0
   297     0032                     __pdataBANK0:
   298     0032                     main@F952:
   299     0032                     	ds	8
   300                           
   301                           	psect	inittext
   302     0405                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305     0405  087E               	movf	btemp,w
   306     0406  008A               	movwf	10
   307     0407  087F               	movf	btemp+1,w
   308     0408  0082               	movwf	2
   309     0409                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316     0409  120A  118A  2405  120A  118A  	fcall	init_fetch0
   317     040E  0080               	movwf	0
   318     040F  0A84               	incf	4,f
   319     0410  0804               	movf	4,w
   320     0411  067D               	xorwf	btemp+-1,w
   321     0412  1903               	btfsc	3,2
   322     0413  3400               	retlw	0
   323     0414  0AFF               	incf	btemp+1,f
   324     0415  1903               	btfsc	3,2
   325     0416  0AFE               	incf	btemp,f
   326     0417  2C09               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329     0070                     __pcstackCOMMON:
   330     0070                     ?_Lcd_Init:
   331     0070                     ?_Lcd_Clear:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_SetBit:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_PulseEnable:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     SetBit@port:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 2 bytes @ 0x0
   348     0070                     	ds	2
   349     0072                     SetBit@pin:
   350                           
   351                           ; 1 bytes @ 0x2
   352     0072                     	ds	1
   353     0073                     SetBit@value:
   354                           
   355                           ; 1 bytes @ 0x3
   356     0073                     	ds	1
   357     0074                     ??_SetBit:
   358                           
   359                           ; 1 bytes @ 0x4
   360     0074                     	ds	2
   361     0076                     ??_PulseEnable:
   362                           
   363                           ; 1 bytes @ 0x6
   364     0076                     	ds	2
   365     0078                     PulseEnable@config:
   366                           
   367                           ; 1 bytes @ 0x8
   368     0078                     	ds	1
   369     0079                     ?_Lcd_Command:
   370     0079                     ?_Lcd_WriteChar:	
   371                           ; 1 bytes @ 0x9
   372                           
   373     0079                     Lcd_Command@cmd:	
   374                           ; 1 bytes @ 0x9
   375                           
   376     0079                     Lcd_WriteChar@data:	
   377                           ; 1 bytes @ 0x9
   378                           
   379                           
   380                           ; 1 bytes @ 0x9
   381     0079                     	ds	1
   382     007A                     ??_Lcd_Command:
   383     007A                     ??_Lcd_WriteChar:	
   384                           ; 1 bytes @ 0xA
   385                           
   386                           
   387                           ; 1 bytes @ 0xA
   388     007A                     	ds	2
   389     007C                     Lcd_Command@config:
   390     007C                     Lcd_WriteChar@config:	
   391                           ; 1 bytes @ 0xC
   392                           
   393                           
   394                           ; 1 bytes @ 0xC
   395     007C                     	ds	1
   396     007D                     ?_Lcd_WriteString:
   397     007D                     Lcd_WriteString@str:	
   398                           ; 1 bytes @ 0xD
   399                           
   400     007D                     Lcd_Clear@config:	
   401                           ; 1 bytes @ 0xD
   402                           
   403                           
   404                           ; 1 bytes @ 0xD
   405     007D                     	ds	1
   406                           
   407                           	psect	cstackBANK0
   408     0020                     __pcstackBANK0:
   409     0020                     ??_Lcd_Clear:
   410     0020                     ?_Lcd_SetCursor:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ??_Lcd_WriteString:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     Lcd_SetCursor@row:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421     0020                     	ds	1
   422     0021                     Lcd_WriteString@config:
   423     0021                     Lcd_SetCursor@column:	
   424                           ; 1 bytes @ 0x1
   425                           
   426                           
   427                           ; 1 bytes @ 0x1
   428     0021                     	ds	1
   429     0022                     ??_Lcd_Init:
   430     0022                     ??_Lcd_SetCursor:	
   431                           ; 1 bytes @ 0x2
   432                           
   433                           
   434                           ; 1 bytes @ 0x2
   435     0022                     	ds	2
   436     0024                     Lcd_Init@config:
   437     0024                     Lcd_SetCursor@config:	
   438                           ; 1 bytes @ 0x4
   439                           
   440                           
   441                           ; 1 bytes @ 0x4
   442     0024                     	ds	1
   443     0025                     Lcd_SetCursor@address:
   444                           
   445                           ; 1 bytes @ 0x5
   446     0025                     	ds	1
   447     0026                     ??_main:
   448                           
   449                           ; 1 bytes @ 0x6
   450     0026                     	ds	4
   451     002A                     main@lcd:
   452                           
   453                           ; 8 bytes @ 0xA
   454     002A                     	ds	8
   455                           
   456                           	psect	maintext
   457     04D9                     __pmaintext:	
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 16 in file "newmain.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  lcd             8   10[BANK0 ] struct .
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : B00/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       8       0       0       0
   479 ;;      Temps:          0       4       0       0       0
   480 ;;      Totals:         0      12       0       0       0
   481 ;;Total ram usage:       12 bytes
   482 ;; Hardware stack levels required when called: 5
   483 ;; This function calls:
   484 ;;		_Lcd_Clear
   485 ;;		_Lcd_Init
   486 ;;		_Lcd_SetCursor
   487 ;;		_Lcd_WriteString
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493     04D9                     _main:	
   494                           ;psect for function _main
   495                           
   496     04D9                     l774:	
   497                           ;incstack = 0
   498                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   499                           
   500                           
   501                           ;newmain.c: 18:     Lcd_Clear(&lcd);
   502     04D9  1683               	bsf	3,5	;RP0=1, select bank1
   503     04DA  1303               	bcf	3,6	;RP1=0, select bank1
   504     04DB  0187               	clrf	7	;volatile
   505     04DC                     l776:
   506                           
   507                           ;newmain.c: 19: 
   508     04DC  302A               	movlw	main@lcd& (0+255)
   509     04DD  0084               	movwf	4
   510     04DE  3032               	movlw	low main@F952
   511     04DF  1283               	bcf	3,5	;RP0=0, select bank0
   512     04E0  1303               	bcf	3,6	;RP1=0, select bank0
   513     04E1  00A6               	movwf	??_main
   514     04E2  0804               	movf	4,w
   515     04E3  00A7               	movwf	??_main+1
   516     04E4  3008               	movlw	8
   517     04E5  00A8               	movwf	??_main+2
   518     04E6                     u1020:
   519     04E6  0826               	movf	??_main,w
   520     04E7  0084               	movwf	4
   521     04E8  1383               	bcf	3,7	;select IRP bank0
   522     04E9  0800               	movf	0,w
   523     04EA  00A9               	movwf	??_main+3
   524     04EB  0AA6               	incf	??_main,f
   525     04EC  0827               	movf	??_main+1,w
   526     04ED  0084               	movwf	4
   527     04EE  0829               	movf	??_main+3,w
   528     04EF  0080               	movwf	0
   529     04F0  0AA7               	incf	??_main+1,f
   530     04F1  0BA8               	decfsz	??_main+2,f
   531     04F2  2CE6               	goto	u1020
   532     04F3                     l778:
   533     04F3  302A               	movlw	(low (main@lcd| 0))& (0+255)
   534     04F4  120A  118A  252B  120A  118A  	fcall	_Lcd_Init
   535     04F9                     l780:
   536     04F9  302A               	movlw	(low (main@lcd| 0))& (0+255)
   537     04FA  120A  118A  2418  120A  118A  	fcall	_Lcd_Clear
   538     04FF                     l782:
   539     04FF  1283               	bcf	3,5	;RP0=0, select bank0
   540     0500  1303               	bcf	3,6	;RP1=0, select bank0
   541     0501  01A0               	clrf	Lcd_SetCursor@row
   542     0502  0AA0               	incf	Lcd_SetCursor@row,f
   543     0503  01A1               	clrf	Lcd_SetCursor@column
   544     0504  0AA1               	incf	Lcd_SetCursor@column,f
   545     0505  302A               	movlw	(low (main@lcd| 0))& (0+255)
   546     0506  120A  118A  2451  120A  118A  	fcall	_Lcd_SetCursor
   547     050B                     l784:
   548     050B  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   549     050C  00FD               	movwf	Lcd_WriteString@str
   550     050D  302A               	movlw	(low (main@lcd| 0))& (0+255)
   551     050E  120A  118A  242C  120A  118A  	fcall	_Lcd_WriteString
   552     0513                     l786:
   553     0513  3002               	movlw	2
   554     0514  1283               	bcf	3,5	;RP0=0, select bank0
   555     0515  1303               	bcf	3,6	;RP1=0, select bank0
   556     0516  00A0               	movwf	Lcd_SetCursor@row
   557     0517  01A1               	clrf	Lcd_SetCursor@column
   558     0518  0AA1               	incf	Lcd_SetCursor@column,f
   559     0519  302A               	movlw	(low (main@lcd| 0))& (0+255)
   560     051A  120A  118A  2451  120A  118A  	fcall	_Lcd_SetCursor
   561     051F                     l788:
   562     051F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   563     0520  00FD               	movwf	Lcd_WriteString@str
   564     0521  302A               	movlw	(low (main@lcd| 0))& (0+255)
   565     0522  120A  118A  242C  120A  118A  	fcall	_Lcd_WriteString
   566     0527                     l19:
   567     0527                     l20:
   568     0527  2D27               	goto	l19
   569     0528  120A  118A  2800   	ljmp	start
   570     052B                     __end_of_main:
   571                           
   572                           	psect	text1
   573     042C                     __ptext1:	
   574 ;; *************** function _Lcd_WriteString *****************
   575 ;; Defined at:
   576 ;;		line 103 in file "../../pic16flcd.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  config          1    wreg     PTR struct .
   579 ;;		 -> main@lcd(8), 
   580 ;;  str             1   13[COMMON] PTR unsigned char 
   581 ;;		 -> STR_2(6), STR_1(6), 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  config          1    1[BANK0 ] PTR struct .
   584 ;;		 -> main@lcd(8), 
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         1       0       0       0       0
   595 ;;      Locals:         0       1       0       0       0
   596 ;;      Temps:          0       1       0       0       0
   597 ;;      Totals:         1       2       0       0       0
   598 ;;Total ram usage:        3 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 3
   601 ;; This function calls:
   602 ;;		_Lcd_WriteChar
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     042C                     _Lcd_WriteString:	
   609                           ;psect for function _Lcd_WriteString
   610                           
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   614                           ;Lcd_WriteString@config stored from wreg
   615     042C  1283               	bcf	3,5	;RP0=0, select bank0
   616     042D  1303               	bcf	3,6	;RP1=0, select bank0
   617     042E  00A1               	movwf	Lcd_WriteString@config
   618     042F                     l766:
   619                           
   620                           ;../../pic16flcd.c: 104:     while(*str != '\0') {
   621     042F  2C44               	goto	l772
   622     0430                     l768:
   623                           
   624                           ;../../pic16flcd.c: 105:         Lcd_WriteChar(config, (unsigned char)(*str));
   625     0430  087D               	movf	Lcd_WriteString@str,w
   626     0431  0084               	movwf	4
   627     0432  120A  118A  2003  120A  118A  	fcall	stringdir
   628     0437  00F9               	movwf	Lcd_WriteChar@data
   629     0438  0821               	movf	Lcd_WriteString@config,w
   630     0439  120A  118A  26C3  120A  118A  	fcall	_Lcd_WriteChar
   631     043E                     l770:
   632                           
   633                           ;../../pic16flcd.c: 106:         str++;
   634     043E  3001               	movlw	1
   635     043F  1283               	bcf	3,5	;RP0=0, select bank0
   636     0440  1303               	bcf	3,6	;RP1=0, select bank0
   637     0441  00A0               	movwf	??_Lcd_WriteString
   638     0442  0820               	movf	??_Lcd_WriteString,w
   639     0443  07FD               	addwf	Lcd_WriteString@str,f
   640     0444                     l772:
   641                           
   642                           ;../../pic16flcd.c: 104:     while(*str != '\0') {
   643     0444  087D               	movf	Lcd_WriteString@str,w
   644     0445  0084               	movwf	4
   645     0446  120A  118A  2003  120A  118A  	fcall	stringdir
   646     044B  3A00               	xorlw	0
   647     044C  1D03               	skipz
   648     044D  2C4F               	goto	u1011
   649     044E  2C50               	goto	u1010
   650     044F                     u1011:
   651     044F  2C30               	goto	l768
   652     0450                     u1010:
   653     0450                     l46:
   654     0450  0008               	return
   655     0451                     __end_of_Lcd_WriteString:
   656                           
   657                           	psect	text2
   658     06C3                     __ptext2:	
   659 ;; *************** function _Lcd_WriteChar *****************
   660 ;; Defined at:
   661 ;;		line 78 in file "../../pic16flcd.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  config          1    wreg     PTR struct .
   664 ;;		 -> main@lcd(8), 
   665 ;;  data            1    9[COMMON] unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  config          1   12[COMMON] PTR struct .
   668 ;;		 -> main@lcd(8), 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         1       0       0       0       0
   679 ;;      Locals:         1       0       0       0       0
   680 ;;      Temps:          2       0       0       0       0
   681 ;;      Totals:         4       0       0       0       0
   682 ;;Total ram usage:        4 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 2
   685 ;; This function calls:
   686 ;;		_PulseEnable
   687 ;;		_SetBit
   688 ;; This function is called by:
   689 ;;		_Lcd_WriteString
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693     06C3                     _Lcd_WriteChar:	
   694                           ;psect for function _Lcd_WriteChar
   695                           
   696                           
   697                           ;incstack = 0
   698                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   699                           ;Lcd_WriteChar@config stored from wreg
   700     06C3  00FC               	movwf	Lcd_WriteChar@config
   701     06C4                     l724:
   702                           
   703                           ;../../pic16flcd.c: 80:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
   704     06C4  087C               	movf	Lcd_WriteChar@config,w
   705     06C5  0084               	movwf	4
   706     06C6  1383               	bcf	3,7	;select IRP bank0
   707     06C7  0800               	movf	0,w
   708     06C8  00F0               	movwf	SetBit@port
   709     06C9  0A84               	incf	4,f
   710     06CA  0800               	movf	0,w
   711     06CB  0384               	decf	4,f
   712     06CC  00F1               	movwf	SetBit@port+1
   713     06CD  087C               	movf	Lcd_WriteChar@config,w
   714     06CE  3E04               	addlw	4
   715     06CF  0084               	movwf	4
   716     06D0  0800               	movf	0,w
   717     06D1  00F2               	movwf	SetBit@pin
   718     06D2  0879               	movf	Lcd_WriteChar@data,w
   719     06D3  00FB               	movwf	??_Lcd_WriteChar+1
   720     06D4  3004               	movlw	4
   721     06D5                     u785:
   722     06D5  1003               	clrc
   723     06D6  0CFB               	rrf	??_Lcd_WriteChar+1,f
   724     06D7  3EFF               	addlw	-1
   725     06D8  1D03               	skipz
   726     06D9  2ED5               	goto	u785
   727     06DA  187B               	btfsc	??_Lcd_WriteChar+1,0
   728     06DB  2EDD               	goto	u791
   729     06DC  2EDF               	goto	u790
   730     06DD                     u791:
   731     06DD  3001               	movlw	1
   732     06DE  2EE0               	goto	u800
   733     06DF                     u790:
   734     06DF  3000               	movlw	0
   735     06E0                     u800:
   736     06E0  00F3               	movwf	SetBit@value
   737     06E1  120A  118A  2479  120A  118A  	fcall	_SetBit
   738                           
   739                           ;../../pic16flcd.c: 81:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
   740     06E6  087C               	movf	Lcd_WriteChar@config,w
   741     06E7  0084               	movwf	4
   742     06E8  1383               	bcf	3,7	;select IRP bank0
   743     06E9  0800               	movf	0,w
   744     06EA  00F0               	movwf	SetBit@port
   745     06EB  0A84               	incf	4,f
   746     06EC  0800               	movf	0,w
   747     06ED  0384               	decf	4,f
   748     06EE  00F1               	movwf	SetBit@port+1
   749     06EF  087C               	movf	Lcd_WriteChar@config,w
   750     06F0  3E05               	addlw	5
   751     06F1  0084               	movwf	4
   752     06F2  0800               	movf	0,w
   753     06F3  00F2               	movwf	SetBit@pin
   754     06F4  0879               	movf	Lcd_WriteChar@data,w
   755     06F5  00FB               	movwf	??_Lcd_WriteChar+1
   756     06F6  3005               	movlw	5
   757     06F7                     u815:
   758     06F7  1003               	clrc
   759     06F8  0CFB               	rrf	??_Lcd_WriteChar+1,f
   760     06F9  3EFF               	addlw	-1
   761     06FA  1D03               	skipz
   762     06FB  2EF7               	goto	u815
   763     06FC  187B               	btfsc	??_Lcd_WriteChar+1,0
   764     06FD  2EFF               	goto	u821
   765     06FE  2F01               	goto	u820
   766     06FF                     u821:
   767     06FF  3001               	movlw	1
   768     0700  2F02               	goto	u830
   769     0701                     u820:
   770     0701  3000               	movlw	0
   771     0702                     u830:
   772     0702  00F3               	movwf	SetBit@value
   773     0703  120A  118A  2479  120A  118A  	fcall	_SetBit
   774                           
   775                           ;../../pic16flcd.c: 82:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
   776     0708  087C               	movf	Lcd_WriteChar@config,w
   777     0709  0084               	movwf	4
   778     070A  1383               	bcf	3,7	;select IRP bank0
   779     070B  0800               	movf	0,w
   780     070C  00F0               	movwf	SetBit@port
   781     070D  0A84               	incf	4,f
   782     070E  0800               	movf	0,w
   783     070F  0384               	decf	4,f
   784     0710  00F1               	movwf	SetBit@port+1
   785     0711  087C               	movf	Lcd_WriteChar@config,w
   786     0712  3E06               	addlw	6
   787     0713  0084               	movwf	4
   788     0714  0800               	movf	0,w
   789     0715  00F2               	movwf	SetBit@pin
   790     0716  0879               	movf	Lcd_WriteChar@data,w
   791     0717  00FB               	movwf	??_Lcd_WriteChar+1
   792     0718  3006               	movlw	6
   793     0719                     u845:
   794     0719  1003               	clrc
   795     071A  0CFB               	rrf	??_Lcd_WriteChar+1,f
   796     071B  3EFF               	addlw	-1
   797     071C  1D03               	skipz
   798     071D  2F19               	goto	u845
   799     071E  187B               	btfsc	??_Lcd_WriteChar+1,0
   800     071F  2F21               	goto	u851
   801     0720  2F23               	goto	u850
   802     0721                     u851:
   803     0721  3001               	movlw	1
   804     0722  2F24               	goto	u860
   805     0723                     u850:
   806     0723  3000               	movlw	0
   807     0724                     u860:
   808     0724  00F3               	movwf	SetBit@value
   809     0725  120A  118A  2479  120A  118A  	fcall	_SetBit
   810                           
   811                           ;../../pic16flcd.c: 83:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
   812     072A  087C               	movf	Lcd_WriteChar@config,w
   813     072B  0084               	movwf	4
   814     072C  1383               	bcf	3,7	;select IRP bank0
   815     072D  0800               	movf	0,w
   816     072E  00F0               	movwf	SetBit@port
   817     072F  0A84               	incf	4,f
   818     0730  0800               	movf	0,w
   819     0731  0384               	decf	4,f
   820     0732  00F1               	movwf	SetBit@port+1
   821     0733  087C               	movf	Lcd_WriteChar@config,w
   822     0734  3E07               	addlw	7
   823     0735  0084               	movwf	4
   824     0736  0800               	movf	0,w
   825     0737  00F2               	movwf	SetBit@pin
   826     0738  0879               	movf	Lcd_WriteChar@data,w
   827     0739  00FB               	movwf	??_Lcd_WriteChar+1
   828     073A  3007               	movlw	7
   829     073B                     u875:
   830     073B  1003               	clrc
   831     073C  0CFB               	rrf	??_Lcd_WriteChar+1,f
   832     073D  3EFF               	addlw	-1
   833     073E  1D03               	skipz
   834     073F  2F3B               	goto	u875
   835     0740  187B               	btfsc	??_Lcd_WriteChar+1,0
   836     0741  2F43               	goto	u881
   837     0742  2F45               	goto	u880
   838     0743                     u881:
   839     0743  3001               	movlw	1
   840     0744  2F46               	goto	u890
   841     0745                     u880:
   842     0745  3000               	movlw	0
   843     0746                     u890:
   844     0746  00F3               	movwf	SetBit@value
   845     0747  120A  118A  2479  120A  118A  	fcall	_SetBit
   846                           
   847                           ;../../pic16flcd.c: 85:     SetBit(config->port, config->rs_pin, 1);
   848     074C  087C               	movf	Lcd_WriteChar@config,w
   849     074D  0084               	movwf	4
   850     074E  1383               	bcf	3,7	;select IRP bank0
   851     074F  0800               	movf	0,w
   852     0750  00F0               	movwf	SetBit@port
   853     0751  0A84               	incf	4,f
   854     0752  0800               	movf	0,w
   855     0753  0384               	decf	4,f
   856     0754  00F1               	movwf	SetBit@port+1
   857     0755  087C               	movf	Lcd_WriteChar@config,w
   858     0756  3E02               	addlw	2
   859     0757  0084               	movwf	4
   860     0758  0800               	movf	0,w
   861     0759  00F2               	movwf	SetBit@pin
   862     075A  01F3               	clrf	SetBit@value
   863     075B  0AF3               	incf	SetBit@value,f
   864     075C  120A  118A  2479  120A  118A  	fcall	_SetBit
   865                           
   866                           ;../../pic16flcd.c: 86:     PulseEnable(config);
   867     0761  087C               	movf	Lcd_WriteChar@config,w
   868     0762  120A  118A  24A5  120A  118A  	fcall	_PulseEnable
   869                           
   870                           ;../../pic16flcd.c: 89:     SetBit(config->port, config->d4_pin, data & 0x01);
   871     0767  087C               	movf	Lcd_WriteChar@config,w
   872     0768  0084               	movwf	4
   873     0769  1383               	bcf	3,7	;select IRP bank0
   874     076A  0800               	movf	0,w
   875     076B  00F0               	movwf	SetBit@port
   876     076C  0A84               	incf	4,f
   877     076D  0800               	movf	0,w
   878     076E  0384               	decf	4,f
   879     076F  00F1               	movwf	SetBit@port+1
   880     0770  087C               	movf	Lcd_WriteChar@config,w
   881     0771  3E04               	addlw	4
   882     0772  0084               	movwf	4
   883     0773  0800               	movf	0,w
   884     0774  00F2               	movwf	SetBit@pin
   885     0775  1879               	btfsc	Lcd_WriteChar@data,0
   886     0776  2F78               	goto	u901
   887     0777  2F7A               	goto	u900
   888     0778                     u901:
   889     0778  3001               	movlw	1
   890     0779  2F7B               	goto	u910
   891     077A                     u900:
   892     077A  3000               	movlw	0
   893     077B                     u910:
   894     077B  00F3               	movwf	SetBit@value
   895     077C  120A  118A  2479  120A  118A  	fcall	_SetBit
   896                           
   897                           ;../../pic16flcd.c: 90:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
   898     0781  087C               	movf	Lcd_WriteChar@config,w
   899     0782  0084               	movwf	4
   900     0783  1383               	bcf	3,7	;select IRP bank0
   901     0784  0800               	movf	0,w
   902     0785  00F0               	movwf	SetBit@port
   903     0786  0A84               	incf	4,f
   904     0787  0800               	movf	0,w
   905     0788  0384               	decf	4,f
   906     0789  00F1               	movwf	SetBit@port+1
   907     078A  087C               	movf	Lcd_WriteChar@config,w
   908     078B  3E05               	addlw	5
   909     078C  0084               	movwf	4
   910     078D  0800               	movf	0,w
   911     078E  00F2               	movwf	SetBit@pin
   912     078F  0879               	movf	Lcd_WriteChar@data,w
   913     0790  00FB               	movwf	??_Lcd_WriteChar+1
   914     0791  3001               	movlw	1
   915     0792                     u925:
   916     0792  1003               	clrc
   917     0793  0CFB               	rrf	??_Lcd_WriteChar+1,f
   918     0794  3EFF               	addlw	-1
   919     0795  1D03               	skipz
   920     0796  2F92               	goto	u925
   921     0797  187B               	btfsc	??_Lcd_WriteChar+1,0
   922     0798  2F9A               	goto	u931
   923     0799  2F9C               	goto	u930
   924     079A                     u931:
   925     079A  3001               	movlw	1
   926     079B  2F9D               	goto	u940
   927     079C                     u930:
   928     079C  3000               	movlw	0
   929     079D                     u940:
   930     079D  00F3               	movwf	SetBit@value
   931     079E  120A  118A  2479  120A  118A  	fcall	_SetBit
   932                           
   933                           ;../../pic16flcd.c: 91:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
   934     07A3  087C               	movf	Lcd_WriteChar@config,w
   935     07A4  0084               	movwf	4
   936     07A5  1383               	bcf	3,7	;select IRP bank0
   937     07A6  0800               	movf	0,w
   938     07A7  00F0               	movwf	SetBit@port
   939     07A8  0A84               	incf	4,f
   940     07A9  0800               	movf	0,w
   941     07AA  0384               	decf	4,f
   942     07AB  00F1               	movwf	SetBit@port+1
   943     07AC  087C               	movf	Lcd_WriteChar@config,w
   944     07AD  3E06               	addlw	6
   945     07AE  0084               	movwf	4
   946     07AF  0800               	movf	0,w
   947     07B0  00F2               	movwf	SetBit@pin
   948     07B1  0879               	movf	Lcd_WriteChar@data,w
   949     07B2  00FB               	movwf	??_Lcd_WriteChar+1
   950     07B3  3002               	movlw	2
   951     07B4                     u955:
   952     07B4  1003               	clrc
   953     07B5  0CFB               	rrf	??_Lcd_WriteChar+1,f
   954     07B6  3EFF               	addlw	-1
   955     07B7  1D03               	skipz
   956     07B8  2FB4               	goto	u955
   957     07B9  187B               	btfsc	??_Lcd_WriteChar+1,0
   958     07BA  2FBC               	goto	u961
   959     07BB  2FBE               	goto	u960
   960     07BC                     u961:
   961     07BC  3001               	movlw	1
   962     07BD  2FBF               	goto	u970
   963     07BE                     u960:
   964     07BE  3000               	movlw	0
   965     07BF                     u970:
   966     07BF  00F3               	movwf	SetBit@value
   967     07C0  120A  118A  2479  120A  118A  	fcall	_SetBit
   968                           
   969                           ;../../pic16flcd.c: 92:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
   970     07C5  087C               	movf	Lcd_WriteChar@config,w
   971     07C6  0084               	movwf	4
   972     07C7  1383               	bcf	3,7	;select IRP bank0
   973     07C8  0800               	movf	0,w
   974     07C9  00F0               	movwf	SetBit@port
   975     07CA  0A84               	incf	4,f
   976     07CB  0800               	movf	0,w
   977     07CC  0384               	decf	4,f
   978     07CD  00F1               	movwf	SetBit@port+1
   979     07CE  087C               	movf	Lcd_WriteChar@config,w
   980     07CF  3E07               	addlw	7
   981     07D0  0084               	movwf	4
   982     07D1  0800               	movf	0,w
   983     07D2  00F2               	movwf	SetBit@pin
   984     07D3  0879               	movf	Lcd_WriteChar@data,w
   985     07D4  00FB               	movwf	??_Lcd_WriteChar+1
   986     07D5  3003               	movlw	3
   987     07D6                     u985:
   988     07D6  1003               	clrc
   989     07D7  0CFB               	rrf	??_Lcd_WriteChar+1,f
   990     07D8  3EFF               	addlw	-1
   991     07D9  1D03               	skipz
   992     07DA  2FD6               	goto	u985
   993     07DB  187B               	btfsc	??_Lcd_WriteChar+1,0
   994     07DC  2FDE               	goto	u991
   995     07DD  2FE0               	goto	u990
   996     07DE                     u991:
   997     07DE  3001               	movlw	1
   998     07DF  2FE1               	goto	u1000
   999     07E0                     u990:
  1000     07E0  3000               	movlw	0
  1001     07E1                     u1000:
  1002     07E1  00F3               	movwf	SetBit@value
  1003     07E2  120A  118A  2479  120A  118A  	fcall	_SetBit
  1004                           
  1005                           ;../../pic16flcd.c: 94:     PulseEnable(config);
  1006     07E7  087C               	movf	Lcd_WriteChar@config,w
  1007     07E8  120A  118A  24A5  120A  118A  	fcall	_PulseEnable
  1008     07ED                     l40:
  1009     07ED  0008               	return
  1010     07EE                     __end_of_Lcd_WriteChar:
  1011                           
  1012                           	psect	text3
  1013     0451                     __ptext3:	
  1014 ;; *************** function _Lcd_SetCursor *****************
  1015 ;; Defined at:
  1016 ;;		line 149 in file "../../pic16flcd.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  config          1    wreg     PTR struct .
  1019 ;;		 -> main@lcd(8), 
  1020 ;;  row             1    0[BANK0 ] unsigned char 
  1021 ;;  column          1    1[BANK0 ] unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  config          1    4[BANK0 ] PTR struct .
  1024 ;;		 -> main@lcd(8), 
  1025 ;;  address         1    5[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       2       0       0       0
  1036 ;;      Locals:         0       2       0       0       0
  1037 ;;      Temps:          0       2       0       0       0
  1038 ;;      Totals:         0       6       0       0       0
  1039 ;;Total ram usage:        6 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 3
  1042 ;; This function calls:
  1043 ;;		_Lcd_Command
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049     0451                     _Lcd_SetCursor:	
  1050                           ;psect for function _Lcd_SetCursor
  1051                           
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1055                           ;Lcd_SetCursor@config stored from wreg
  1056     0451  1283               	bcf	3,5	;RP0=0, select bank0
  1057     0452  1303               	bcf	3,6	;RP1=0, select bank0
  1058     0453  00A4               	movwf	Lcd_SetCursor@config
  1059     0454                     l746:
  1060                           
  1061                           ;../../pic16flcd.c: 150:     unsigned char address;;../../pic16flcd.c: 153:     switch(r
      +                          ow) {
  1062     0454  2C5B               	goto	l754
  1063     0455                     l748:
  1064                           
  1065                           ;../../pic16flcd.c: 155:             address = 0x80;
  1066     0455  3080               	movlw	128
  1067     0456  00A5               	movwf	Lcd_SetCursor@address
  1068                           
  1069                           ;../../pic16flcd.c: 156:             break;
  1070     0457  2C6B               	goto	l756
  1071     0458                     l750:
  1072                           
  1073                           ;../../pic16flcd.c: 158:             address = 0xC0;
  1074     0458  30C0               	movlw	192
  1075     0459  00A5               	movwf	Lcd_SetCursor@address
  1076                           
  1077                           ;../../pic16flcd.c: 159:             break;
  1078     045A  2C6B               	goto	l756
  1079     045B                     l754:
  1080     045B  0820               	movf	Lcd_SetCursor@row,w
  1081     045C  00A2               	movwf	??_Lcd_SetCursor
  1082     045D  01A3               	clrf	??_Lcd_SetCursor+1
  1083                           
  1084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1085                           ; Switch size 1, requested type "simple"
  1086                           ; Number of cases is 1, Range of values is 0 to 0
  1087                           ; switch strategies available:
  1088                           ; Name         Instructions Cycles
  1089                           ; simple_byte            4     3 (average)
  1090                           ; direct_byte           11     8 (fixed)
  1091                           ; jumptable            260     6 (fixed)
  1092                           ;	Chosen strategy is simple_byte
  1093     045E  0823               	movf	??_Lcd_SetCursor+1,w
  1094     045F  3A00               	xorlw	0	; case 0
  1095     0460  1903               	skipnz
  1096     0461  2C63               	goto	l820
  1097     0462  2C55               	goto	l748
  1098     0463                     l820:
  1099                           
  1100                           ; Switch size 1, requested type "simple"
  1101                           ; Number of cases is 2, Range of values is 1 to 2
  1102                           ; switch strategies available:
  1103                           ; Name         Instructions Cycles
  1104                           ; simple_byte            7     4 (average)
  1105                           ; direct_byte           17    11 (fixed)
  1106                           ; jumptable            263     9 (fixed)
  1107                           ;	Chosen strategy is simple_byte
  1108     0463  0822               	movf	??_Lcd_SetCursor,w
  1109     0464  3A01               	xorlw	1	; case 1
  1110     0465  1903               	skipnz
  1111     0466  2C55               	goto	l748
  1112     0467  3A03               	xorlw	3	; case 2
  1113     0468  1903               	skipnz
  1114     0469  2C58               	goto	l750
  1115     046A  2C55               	goto	l748
  1116     046B                     l756:
  1117                           
  1118                           ;../../pic16flcd.c: 165:     address += (column - 1);
  1119     046B  0821               	movf	Lcd_SetCursor@column,w
  1120     046C  3EFF               	addlw	255
  1121     046D  00A2               	movwf	??_Lcd_SetCursor
  1122     046E  0822               	movf	??_Lcd_SetCursor,w
  1123     046F  07A5               	addwf	Lcd_SetCursor@address,f
  1124     0470                     l758:
  1125                           
  1126                           ;../../pic16flcd.c: 168:     Lcd_Command(config, address);
  1127     0470  0825               	movf	Lcd_SetCursor@address,w
  1128     0471  00F9               	movwf	Lcd_Command@cmd
  1129     0472  0824               	movf	Lcd_SetCursor@config,w
  1130     0473  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1131     0478                     l60:
  1132     0478  0008               	return
  1133     0479                     __end_of_Lcd_SetCursor:
  1134                           
  1135                           	psect	text4
  1136     052B                     __ptext4:	
  1137 ;; *************** function _Lcd_Init *****************
  1138 ;; Defined at:
  1139 ;;		line 111 in file "../../pic16flcd.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  config          1    wreg     PTR struct .
  1142 ;;		 -> main@lcd(8), 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  config          1    4[BANK0 ] PTR struct .
  1145 ;;		 -> main@lcd(8), 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         0       1       0       0       0
  1157 ;;      Temps:          0       2       0       0       0
  1158 ;;      Totals:         0       3       0       0       0
  1159 ;;Total ram usage:        3 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 4
  1162 ;; This function calls:
  1163 ;;		_Lcd_Clear
  1164 ;;		_Lcd_Command
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170     052B                     _Lcd_Init:	
  1171                           ;psect for function _Lcd_Init
  1172                           
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1176                           ;Lcd_Init@config stored from wreg
  1177     052B  1283               	bcf	3,5	;RP0=0, select bank0
  1178     052C  1303               	bcf	3,6	;RP1=0, select bank0
  1179     052D  00A4               	movwf	Lcd_Init@config
  1180     052E                     l726:
  1181                           
  1182                           ;../../pic16flcd.c: 117:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1183     052E  3014               	movlw	20
  1184     052F  1283               	bcf	3,5	;RP0=0, select bank0
  1185     0530  1303               	bcf	3,6	;RP1=0, select bank0
  1186     0531  00A3               	movwf	??_Lcd_Init+1
  1187     0532  3079               	movlw	121
  1188     0533  00A2               	movwf	??_Lcd_Init
  1189     0534                     u1037:
  1190     0534  0BA2               	decfsz	??_Lcd_Init,f
  1191     0535  2D34               	goto	u1037
  1192     0536  0BA3               	decfsz	??_Lcd_Init+1,f
  1193     0537  2D34               	goto	u1037
  1194     0538                     l728:
  1195                           
  1196                           ;../../pic16flcd.c: 118:     Lcd_Command(config, 0x03);
  1197     0538  3003               	movlw	3
  1198     0539  00F9               	movwf	Lcd_Command@cmd
  1199     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1200     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1201     053C  0824               	movf	Lcd_Init@config,w
  1202     053D  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1203     0542                     l730:
  1204                           
  1205                           ;../../pic16flcd.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1206     0542  3007               	movlw	7
  1207     0543  1283               	bcf	3,5	;RP0=0, select bank0
  1208     0544  1303               	bcf	3,6	;RP1=0, select bank0
  1209     0545  00A3               	movwf	??_Lcd_Init+1
  1210     0546  307C               	movlw	124
  1211     0547  00A2               	movwf	??_Lcd_Init
  1212     0548                     u1047:
  1213     0548  0BA2               	decfsz	??_Lcd_Init,f
  1214     0549  2D48               	goto	u1047
  1215     054A  0BA3               	decfsz	??_Lcd_Init+1,f
  1216     054B  2D48               	goto	u1047
  1217     054C  0000               	nop
  1218                           
  1219                           ;../../pic16flcd.c: 120:     Lcd_Command(config, 0x03);
  1220     054D  3003               	movlw	3
  1221     054E  00F9               	movwf	Lcd_Command@cmd
  1222     054F  1283               	bcf	3,5	;RP0=0, select bank0
  1223     0550  1303               	bcf	3,6	;RP1=0, select bank0
  1224     0551  0824               	movf	Lcd_Init@config,w
  1225     0552  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1226     0557                     l732:
  1227                           
  1228                           ;../../pic16flcd.c: 121:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1229     0557  3020               	movlw	32
  1230     0558  1283               	bcf	3,5	;RP0=0, select bank0
  1231     0559  1303               	bcf	3,6	;RP1=0, select bank0
  1232     055A  00A2               	movwf	??_Lcd_Init
  1233     055B                     u1057:
  1234     055B  0BA2               	decfsz	??_Lcd_Init,f
  1235     055C  2D5B               	goto	u1057
  1236     055D  0000               	nop
  1237     055E                     l734:
  1238                           
  1239                           ;../../pic16flcd.c: 122:     Lcd_Command(config, 0x03);
  1240     055E  3003               	movlw	3
  1241     055F  00F9               	movwf	Lcd_Command@cmd
  1242     0560  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0561  1303               	bcf	3,6	;RP1=0, select bank0
  1244     0562  0824               	movf	Lcd_Init@config,w
  1245     0563  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1246     0568                     l736:
  1247                           
  1248                           ;../../pic16flcd.c: 123:     Lcd_Command(config, 0x02);
  1249     0568  3002               	movlw	2
  1250     0569  00F9               	movwf	Lcd_Command@cmd
  1251     056A  1283               	bcf	3,5	;RP0=0, select bank0
  1252     056B  1303               	bcf	3,6	;RP1=0, select bank0
  1253     056C  0824               	movf	Lcd_Init@config,w
  1254     056D  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1255     0572                     l738:
  1256                           
  1257                           ;../../pic16flcd.c: 125:     Lcd_Command(config, 0x28);
  1258     0572  3028               	movlw	40
  1259     0573  00F9               	movwf	Lcd_Command@cmd
  1260     0574  1283               	bcf	3,5	;RP0=0, select bank0
  1261     0575  1303               	bcf	3,6	;RP1=0, select bank0
  1262     0576  0824               	movf	Lcd_Init@config,w
  1263     0577  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1264     057C                     l740:
  1265                           
  1266                           ;../../pic16flcd.c: 126:     Lcd_Command(config, 0x0C);
  1267     057C  300C               	movlw	12
  1268     057D  00F9               	movwf	Lcd_Command@cmd
  1269     057E  1283               	bcf	3,5	;RP0=0, select bank0
  1270     057F  1303               	bcf	3,6	;RP1=0, select bank0
  1271     0580  0824               	movf	Lcd_Init@config,w
  1272     0581  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1273     0586                     l742:
  1274                           
  1275                           ;../../pic16flcd.c: 127:     Lcd_Command(config, 0x06);
  1276     0586  3006               	movlw	6
  1277     0587  00F9               	movwf	Lcd_Command@cmd
  1278     0588  1283               	bcf	3,5	;RP0=0, select bank0
  1279     0589  1303               	bcf	3,6	;RP1=0, select bank0
  1280     058A  0824               	movf	Lcd_Init@config,w
  1281     058B  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1282     0590                     l744:
  1283                           
  1284                           ;../../pic16flcd.c: 128:     Lcd_Clear(config);
  1285     0590  1283               	bcf	3,5	;RP0=0, select bank0
  1286     0591  1303               	bcf	3,6	;RP1=0, select bank0
  1287     0592  0824               	movf	Lcd_Init@config,w
  1288     0593  120A  118A  2418  120A  118A  	fcall	_Lcd_Clear
  1289     0598                     l49:
  1290     0598  0008               	return
  1291     0599                     __end_of_Lcd_Init:
  1292                           
  1293                           	psect	text5
  1294     0418                     __ptext5:	
  1295 ;; *************** function _Lcd_Clear *****************
  1296 ;; Defined at:
  1297 ;;		line 136 in file "../../pic16flcd.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  config          1    wreg     PTR struct .
  1300 ;;		 -> main@lcd(8), 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  config          1   13[COMMON] PTR struct .
  1303 ;;		 -> main@lcd(8), 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         1       0       0       0       0
  1315 ;;      Temps:          0       2       0       0       0
  1316 ;;      Totals:         1       2       0       0       0
  1317 ;;Total ram usage:        3 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 3
  1320 ;; This function calls:
  1321 ;;		_Lcd_Command
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;;		_Lcd_Init
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328     0418                     _Lcd_Clear:	
  1329                           ;psect for function _Lcd_Clear
  1330                           
  1331                           
  1332                           ;incstack = 0
  1333                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1334                           ;Lcd_Clear@config stored from wreg
  1335     0418  00FD               	movwf	Lcd_Clear@config
  1336     0419                     l720:
  1337                           
  1338                           ;../../pic16flcd.c: 137:     Lcd_Command(config, 0x01);
  1339     0419  01F9               	clrf	Lcd_Command@cmd
  1340     041A  0AF9               	incf	Lcd_Command@cmd,f
  1341     041B  087D               	movf	Lcd_Clear@config,w
  1342     041C  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1343     0421                     l722:
  1344                           
  1345                           ;../../pic16flcd.c: 138:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1346     0421  3003               	movlw	3
  1347     0422  1283               	bcf	3,5	;RP0=0, select bank0
  1348     0423  1303               	bcf	3,6	;RP1=0, select bank0
  1349     0424  00A1               	movwf	??_Lcd_Clear+1
  1350     0425  3097               	movlw	151
  1351     0426  00A0               	movwf	??_Lcd_Clear
  1352     0427                     u1067:
  1353     0427  0BA0               	decfsz	??_Lcd_Clear,f
  1354     0428  2C27               	goto	u1067
  1355     0429  0BA1               	decfsz	??_Lcd_Clear+1,f
  1356     042A  2C27               	goto	u1067
  1357     042B                     l52:
  1358     042B  0008               	return
  1359     042C                     __end_of_Lcd_Clear:
  1360                           
  1361                           	psect	text6
  1362     0599                     __ptext6:	
  1363 ;; *************** function _Lcd_Command *****************
  1364 ;; Defined at:
  1365 ;;		line 52 in file "../../pic16flcd.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  config          1    wreg     PTR struct .
  1368 ;;		 -> main@lcd(8), 
  1369 ;;  cmd             1    9[COMMON] unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  config          1   12[COMMON] PTR struct .
  1372 ;;		 -> main@lcd(8), 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         1       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0
  1385 ;;      Totals:         4       0       0       0       0
  1386 ;;Total ram usage:        4 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 2
  1389 ;; This function calls:
  1390 ;;		_PulseEnable
  1391 ;;		_SetBit
  1392 ;; This function is called by:
  1393 ;;		_Lcd_Init
  1394 ;;		_Lcd_Clear
  1395 ;;		_Lcd_SetCursor
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399     0599                     _Lcd_Command:	
  1400                           ;psect for function _Lcd_Command
  1401                           
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1405                           ;Lcd_Command@config stored from wreg
  1406     0599  00FC               	movwf	Lcd_Command@config
  1407     059A                     l718:
  1408                           
  1409                           ;../../pic16flcd.c: 54:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1410     059A  087C               	movf	Lcd_Command@config,w
  1411     059B  0084               	movwf	4
  1412     059C  1383               	bcf	3,7	;select IRP bank0
  1413     059D  0800               	movf	0,w
  1414     059E  00F0               	movwf	SetBit@port
  1415     059F  0A84               	incf	4,f
  1416     05A0  0800               	movf	0,w
  1417     05A1  0384               	decf	4,f
  1418     05A2  00F1               	movwf	SetBit@port+1
  1419     05A3  087C               	movf	Lcd_Command@config,w
  1420     05A4  3E04               	addlw	4
  1421     05A5  0084               	movwf	4
  1422     05A6  0800               	movf	0,w
  1423     05A7  00F2               	movwf	SetBit@pin
  1424     05A8  0879               	movf	Lcd_Command@cmd,w
  1425     05A9  00FB               	movwf	??_Lcd_Command+1
  1426     05AA  3004               	movlw	4
  1427     05AB                     u555:
  1428     05AB  1003               	clrc
  1429     05AC  0CFB               	rrf	??_Lcd_Command+1,f
  1430     05AD  3EFF               	addlw	-1
  1431     05AE  1D03               	skipz
  1432     05AF  2DAB               	goto	u555
  1433     05B0  187B               	btfsc	??_Lcd_Command+1,0
  1434     05B1  2DB3               	goto	u561
  1435     05B2  2DB5               	goto	u560
  1436     05B3                     u561:
  1437     05B3  3001               	movlw	1
  1438     05B4  2DB6               	goto	u570
  1439     05B5                     u560:
  1440     05B5  3000               	movlw	0
  1441     05B6                     u570:
  1442     05B6  00F3               	movwf	SetBit@value
  1443     05B7  120A  118A  2479  120A  118A  	fcall	_SetBit
  1444                           
  1445                           ;../../pic16flcd.c: 55:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1446     05BC  087C               	movf	Lcd_Command@config,w
  1447     05BD  0084               	movwf	4
  1448     05BE  1383               	bcf	3,7	;select IRP bank0
  1449     05BF  0800               	movf	0,w
  1450     05C0  00F0               	movwf	SetBit@port
  1451     05C1  0A84               	incf	4,f
  1452     05C2  0800               	movf	0,w
  1453     05C3  0384               	decf	4,f
  1454     05C4  00F1               	movwf	SetBit@port+1
  1455     05C5  087C               	movf	Lcd_Command@config,w
  1456     05C6  3E05               	addlw	5
  1457     05C7  0084               	movwf	4
  1458     05C8  0800               	movf	0,w
  1459     05C9  00F2               	movwf	SetBit@pin
  1460     05CA  0879               	movf	Lcd_Command@cmd,w
  1461     05CB  00FB               	movwf	??_Lcd_Command+1
  1462     05CC  3005               	movlw	5
  1463     05CD                     u585:
  1464     05CD  1003               	clrc
  1465     05CE  0CFB               	rrf	??_Lcd_Command+1,f
  1466     05CF  3EFF               	addlw	-1
  1467     05D0  1D03               	skipz
  1468     05D1  2DCD               	goto	u585
  1469     05D2  187B               	btfsc	??_Lcd_Command+1,0
  1470     05D3  2DD5               	goto	u591
  1471     05D4  2DD7               	goto	u590
  1472     05D5                     u591:
  1473     05D5  3001               	movlw	1
  1474     05D6  2DD8               	goto	u600
  1475     05D7                     u590:
  1476     05D7  3000               	movlw	0
  1477     05D8                     u600:
  1478     05D8  00F3               	movwf	SetBit@value
  1479     05D9  120A  118A  2479  120A  118A  	fcall	_SetBit
  1480                           
  1481                           ;../../pic16flcd.c: 56:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  1482     05DE  087C               	movf	Lcd_Command@config,w
  1483     05DF  0084               	movwf	4
  1484     05E0  1383               	bcf	3,7	;select IRP bank0
  1485     05E1  0800               	movf	0,w
  1486     05E2  00F0               	movwf	SetBit@port
  1487     05E3  0A84               	incf	4,f
  1488     05E4  0800               	movf	0,w
  1489     05E5  0384               	decf	4,f
  1490     05E6  00F1               	movwf	SetBit@port+1
  1491     05E7  087C               	movf	Lcd_Command@config,w
  1492     05E8  3E06               	addlw	6
  1493     05E9  0084               	movwf	4
  1494     05EA  0800               	movf	0,w
  1495     05EB  00F2               	movwf	SetBit@pin
  1496     05EC  0879               	movf	Lcd_Command@cmd,w
  1497     05ED  00FB               	movwf	??_Lcd_Command+1
  1498     05EE  3006               	movlw	6
  1499     05EF                     u615:
  1500     05EF  1003               	clrc
  1501     05F0  0CFB               	rrf	??_Lcd_Command+1,f
  1502     05F1  3EFF               	addlw	-1
  1503     05F2  1D03               	skipz
  1504     05F3  2DEF               	goto	u615
  1505     05F4  187B               	btfsc	??_Lcd_Command+1,0
  1506     05F5  2DF7               	goto	u621
  1507     05F6  2DF9               	goto	u620
  1508     05F7                     u621:
  1509     05F7  3001               	movlw	1
  1510     05F8  2DFA               	goto	u630
  1511     05F9                     u620:
  1512     05F9  3000               	movlw	0
  1513     05FA                     u630:
  1514     05FA  00F3               	movwf	SetBit@value
  1515     05FB  120A  118A  2479  120A  118A  	fcall	_SetBit
  1516                           
  1517                           ;../../pic16flcd.c: 57:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  1518     0600  087C               	movf	Lcd_Command@config,w
  1519     0601  0084               	movwf	4
  1520     0602  1383               	bcf	3,7	;select IRP bank0
  1521     0603  0800               	movf	0,w
  1522     0604  00F0               	movwf	SetBit@port
  1523     0605  0A84               	incf	4,f
  1524     0606  0800               	movf	0,w
  1525     0607  0384               	decf	4,f
  1526     0608  00F1               	movwf	SetBit@port+1
  1527     0609  087C               	movf	Lcd_Command@config,w
  1528     060A  3E07               	addlw	7
  1529     060B  0084               	movwf	4
  1530     060C  0800               	movf	0,w
  1531     060D  00F2               	movwf	SetBit@pin
  1532     060E  0879               	movf	Lcd_Command@cmd,w
  1533     060F  00FB               	movwf	??_Lcd_Command+1
  1534     0610  3007               	movlw	7
  1535     0611                     u645:
  1536     0611  1003               	clrc
  1537     0612  0CFB               	rrf	??_Lcd_Command+1,f
  1538     0613  3EFF               	addlw	-1
  1539     0614  1D03               	skipz
  1540     0615  2E11               	goto	u645
  1541     0616  187B               	btfsc	??_Lcd_Command+1,0
  1542     0617  2E19               	goto	u651
  1543     0618  2E1B               	goto	u650
  1544     0619                     u651:
  1545     0619  3001               	movlw	1
  1546     061A  2E1C               	goto	u660
  1547     061B                     u650:
  1548     061B  3000               	movlw	0
  1549     061C                     u660:
  1550     061C  00F3               	movwf	SetBit@value
  1551     061D  120A  118A  2479  120A  118A  	fcall	_SetBit
  1552                           
  1553                           ;../../pic16flcd.c: 59:     SetBit(config->port, config->rs_pin, 0);
  1554     0622  087C               	movf	Lcd_Command@config,w
  1555     0623  0084               	movwf	4
  1556     0624  1383               	bcf	3,7	;select IRP bank0
  1557     0625  0800               	movf	0,w
  1558     0626  00F0               	movwf	SetBit@port
  1559     0627  0A84               	incf	4,f
  1560     0628  0800               	movf	0,w
  1561     0629  0384               	decf	4,f
  1562     062A  00F1               	movwf	SetBit@port+1
  1563     062B  087C               	movf	Lcd_Command@config,w
  1564     062C  3E02               	addlw	2
  1565     062D  0084               	movwf	4
  1566     062E  0800               	movf	0,w
  1567     062F  00F2               	movwf	SetBit@pin
  1568     0630  01F3               	clrf	SetBit@value
  1569     0631  120A  118A  2479  120A  118A  	fcall	_SetBit
  1570                           
  1571                           ;../../pic16flcd.c: 60:     PulseEnable(config);
  1572     0636  087C               	movf	Lcd_Command@config,w
  1573     0637  120A  118A  24A5  120A  118A  	fcall	_PulseEnable
  1574                           
  1575                           ;../../pic16flcd.c: 63:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  1576     063C  087C               	movf	Lcd_Command@config,w
  1577     063D  0084               	movwf	4
  1578     063E  1383               	bcf	3,7	;select IRP bank0
  1579     063F  0800               	movf	0,w
  1580     0640  00F0               	movwf	SetBit@port
  1581     0641  0A84               	incf	4,f
  1582     0642  0800               	movf	0,w
  1583     0643  0384               	decf	4,f
  1584     0644  00F1               	movwf	SetBit@port+1
  1585     0645  087C               	movf	Lcd_Command@config,w
  1586     0646  3E04               	addlw	4
  1587     0647  0084               	movwf	4
  1588     0648  0800               	movf	0,w
  1589     0649  00F2               	movwf	SetBit@pin
  1590     064A  1879               	btfsc	Lcd_Command@cmd,0
  1591     064B  2E4D               	goto	u671
  1592     064C  2E4F               	goto	u670
  1593     064D                     u671:
  1594     064D  3001               	movlw	1
  1595     064E  2E50               	goto	u680
  1596     064F                     u670:
  1597     064F  3000               	movlw	0
  1598     0650                     u680:
  1599     0650  00F3               	movwf	SetBit@value
  1600     0651  120A  118A  2479  120A  118A  	fcall	_SetBit
  1601                           
  1602                           ;../../pic16flcd.c: 64:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  1603     0656  087C               	movf	Lcd_Command@config,w
  1604     0657  0084               	movwf	4
  1605     0658  1383               	bcf	3,7	;select IRP bank0
  1606     0659  0800               	movf	0,w
  1607     065A  00F0               	movwf	SetBit@port
  1608     065B  0A84               	incf	4,f
  1609     065C  0800               	movf	0,w
  1610     065D  0384               	decf	4,f
  1611     065E  00F1               	movwf	SetBit@port+1
  1612     065F  087C               	movf	Lcd_Command@config,w
  1613     0660  3E05               	addlw	5
  1614     0661  0084               	movwf	4
  1615     0662  0800               	movf	0,w
  1616     0663  00F2               	movwf	SetBit@pin
  1617     0664  0879               	movf	Lcd_Command@cmd,w
  1618     0665  00FB               	movwf	??_Lcd_Command+1
  1619     0666  3001               	movlw	1
  1620     0667                     u695:
  1621     0667  1003               	clrc
  1622     0668  0CFB               	rrf	??_Lcd_Command+1,f
  1623     0669  3EFF               	addlw	-1
  1624     066A  1D03               	skipz
  1625     066B  2E67               	goto	u695
  1626     066C  187B               	btfsc	??_Lcd_Command+1,0
  1627     066D  2E6F               	goto	u701
  1628     066E  2E71               	goto	u700
  1629     066F                     u701:
  1630     066F  3001               	movlw	1
  1631     0670  2E72               	goto	u710
  1632     0671                     u700:
  1633     0671  3000               	movlw	0
  1634     0672                     u710:
  1635     0672  00F3               	movwf	SetBit@value
  1636     0673  120A  118A  2479  120A  118A  	fcall	_SetBit
  1637                           
  1638                           ;../../pic16flcd.c: 65:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  1639     0678  087C               	movf	Lcd_Command@config,w
  1640     0679  0084               	movwf	4
  1641     067A  1383               	bcf	3,7	;select IRP bank0
  1642     067B  0800               	movf	0,w
  1643     067C  00F0               	movwf	SetBit@port
  1644     067D  0A84               	incf	4,f
  1645     067E  0800               	movf	0,w
  1646     067F  0384               	decf	4,f
  1647     0680  00F1               	movwf	SetBit@port+1
  1648     0681  087C               	movf	Lcd_Command@config,w
  1649     0682  3E06               	addlw	6
  1650     0683  0084               	movwf	4
  1651     0684  0800               	movf	0,w
  1652     0685  00F2               	movwf	SetBit@pin
  1653     0686  0879               	movf	Lcd_Command@cmd,w
  1654     0687  00FB               	movwf	??_Lcd_Command+1
  1655     0688  3002               	movlw	2
  1656     0689                     u725:
  1657     0689  1003               	clrc
  1658     068A  0CFB               	rrf	??_Lcd_Command+1,f
  1659     068B  3EFF               	addlw	-1
  1660     068C  1D03               	skipz
  1661     068D  2E89               	goto	u725
  1662     068E  187B               	btfsc	??_Lcd_Command+1,0
  1663     068F  2E91               	goto	u731
  1664     0690  2E93               	goto	u730
  1665     0691                     u731:
  1666     0691  3001               	movlw	1
  1667     0692  2E94               	goto	u740
  1668     0693                     u730:
  1669     0693  3000               	movlw	0
  1670     0694                     u740:
  1671     0694  00F3               	movwf	SetBit@value
  1672     0695  120A  118A  2479  120A  118A  	fcall	_SetBit
  1673                           
  1674                           ;../../pic16flcd.c: 66:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  1675     069A  087C               	movf	Lcd_Command@config,w
  1676     069B  0084               	movwf	4
  1677     069C  1383               	bcf	3,7	;select IRP bank0
  1678     069D  0800               	movf	0,w
  1679     069E  00F0               	movwf	SetBit@port
  1680     069F  0A84               	incf	4,f
  1681     06A0  0800               	movf	0,w
  1682     06A1  0384               	decf	4,f
  1683     06A2  00F1               	movwf	SetBit@port+1
  1684     06A3  087C               	movf	Lcd_Command@config,w
  1685     06A4  3E07               	addlw	7
  1686     06A5  0084               	movwf	4
  1687     06A6  0800               	movf	0,w
  1688     06A7  00F2               	movwf	SetBit@pin
  1689     06A8  0879               	movf	Lcd_Command@cmd,w
  1690     06A9  00FB               	movwf	??_Lcd_Command+1
  1691     06AA  3003               	movlw	3
  1692     06AB                     u755:
  1693     06AB  1003               	clrc
  1694     06AC  0CFB               	rrf	??_Lcd_Command+1,f
  1695     06AD  3EFF               	addlw	-1
  1696     06AE  1D03               	skipz
  1697     06AF  2EAB               	goto	u755
  1698     06B0  187B               	btfsc	??_Lcd_Command+1,0
  1699     06B1  2EB3               	goto	u761
  1700     06B2  2EB5               	goto	u760
  1701     06B3                     u761:
  1702     06B3  3001               	movlw	1
  1703     06B4  2EB6               	goto	u770
  1704     06B5                     u760:
  1705     06B5  3000               	movlw	0
  1706     06B6                     u770:
  1707     06B6  00F3               	movwf	SetBit@value
  1708     06B7  120A  118A  2479  120A  118A  	fcall	_SetBit
  1709                           
  1710                           ;../../pic16flcd.c: 68:     PulseEnable(config);
  1711     06BC  087C               	movf	Lcd_Command@config,w
  1712     06BD  120A  118A  24A5  120A  118A  	fcall	_PulseEnable
  1713     06C2                     l37:
  1714     06C2  0008               	return
  1715     06C3                     __end_of_Lcd_Command:
  1716                           
  1717                           	psect	text7
  1718     04A5                     __ptext7:	
  1719 ;; *************** function _PulseEnable *****************
  1720 ;; Defined at:
  1721 ;;		line 38 in file "../../pic16flcd.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  config          1    wreg     PTR struct .
  1724 ;;		 -> main@lcd(8), 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  config          1    8[COMMON] PTR struct .
  1727 ;;		 -> main@lcd(8), 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         1       0       0       0       0
  1739 ;;      Temps:          2       0       0       0       0
  1740 ;;      Totals:         3       0       0       0       0
  1741 ;;Total ram usage:        3 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		_SetBit
  1746 ;; This function is called by:
  1747 ;;		_Lcd_Command
  1748 ;;		_Lcd_WriteChar
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752     04A5                     _PulseEnable:	
  1753                           ;psect for function _PulseEnable
  1754                           
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1758                           ;PulseEnable@config stored from wreg
  1759     04A5  00F8               	movwf	PulseEnable@config
  1760     04A6                     l712:
  1761                           
  1762                           ;../../pic16flcd.c: 39:     SetBit(config->port, config->en_pin, 1);
  1763     04A6  0878               	movf	PulseEnable@config,w
  1764     04A7  0084               	movwf	4
  1765     04A8  1383               	bcf	3,7	;select IRP bank0
  1766     04A9  0800               	movf	0,w
  1767     04AA  00F0               	movwf	SetBit@port
  1768     04AB  0A84               	incf	4,f
  1769     04AC  0800               	movf	0,w
  1770     04AD  0384               	decf	4,f
  1771     04AE  00F1               	movwf	SetBit@port+1
  1772     04AF  0878               	movf	PulseEnable@config,w
  1773     04B0  3E03               	addlw	3
  1774     04B1  0084               	movwf	4
  1775     04B2  0800               	movf	0,w
  1776     04B3  00F2               	movwf	SetBit@pin
  1777     04B4  01F3               	clrf	SetBit@value
  1778     04B5  0AF3               	incf	SetBit@value,f
  1779     04B6  120A  118A  2479  120A  118A  	fcall	_SetBit
  1780     04BB                     l714:
  1781                           
  1782                           ;../../pic16flcd.c: 40:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1783     04BB  3003               	movlw	3
  1784     04BC  00F7               	movwf	??_PulseEnable+1
  1785     04BD  3097               	movlw	151
  1786     04BE  00F6               	movwf	??_PulseEnable
  1787     04BF                     u1077:
  1788     04BF  0BF6               	decfsz	??_PulseEnable,f
  1789     04C0  2CBF               	goto	u1077
  1790     04C1  0BF7               	decfsz	??_PulseEnable+1,f
  1791     04C2  2CBF               	goto	u1077
  1792     04C3  2CC4               	nop2
  1793     04C4                     l716:
  1794                           
  1795                           ;../../pic16flcd.c: 41:     SetBit(config->port, config->en_pin, 0);
  1796     04C4  0878               	movf	PulseEnable@config,w
  1797     04C5  0084               	movwf	4
  1798     04C6  1383               	bcf	3,7	;select IRP bank0
  1799     04C7  0800               	movf	0,w
  1800     04C8  00F0               	movwf	SetBit@port
  1801     04C9  0A84               	incf	4,f
  1802     04CA  0800               	movf	0,w
  1803     04CB  0384               	decf	4,f
  1804     04CC  00F1               	movwf	SetBit@port+1
  1805     04CD  0878               	movf	PulseEnable@config,w
  1806     04CE  3E03               	addlw	3
  1807     04CF  0084               	movwf	4
  1808     04D0  0800               	movf	0,w
  1809     04D1  00F2               	movwf	SetBit@pin
  1810     04D2  01F3               	clrf	SetBit@value
  1811     04D3  120A  118A  2479  120A  118A  	fcall	_SetBit
  1812     04D8                     l34:
  1813     04D8  0008               	return
  1814     04D9                     __end_of_PulseEnable:
  1815                           
  1816                           	psect	text8
  1817     0479                     __ptext8:	
  1818 ;; *************** function _SetBit *****************
  1819 ;; Defined at:
  1820 ;;		line 24 in file "../../pic16flcd.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  1823 ;;		 -> PORTC(1), 
  1824 ;;  pin             1    2[COMMON] unsigned char 
  1825 ;;  value           1    3[COMMON] _Bool 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         4       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          2       0       0       0       0
  1840 ;;      Totals:         6       0       0       0       0
  1841 ;;Total ram usage:        6 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_PulseEnable
  1847 ;;		_Lcd_Command
  1848 ;;		_Lcd_WriteChar
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852     0479                     _SetBit:	
  1853                           ;psect for function _SetBit
  1854                           
  1855     0479                     l706:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  1858                           
  1859                           
  1860                           ;../../pic16flcd.c: 25:     if (value) {
  1861     0479  0873               	movf	SetBit@value,w
  1862     047A  1903               	btfsc	3,2
  1863     047B  2C7D               	goto	u521
  1864     047C  2C7E               	goto	u520
  1865     047D                     u521:
  1866     047D  2C91               	goto	l710
  1867     047E                     u520:
  1868     047E                     l708:
  1869                           
  1870                           ;../../pic16flcd.c: 26:         *port |= (1 << pin);
  1871     047E  3001               	movlw	1
  1872     047F  00F4               	movwf	??_SetBit
  1873     0480  0A72               	incf	SetBit@pin,w
  1874     0481  2C84               	goto	u534
  1875     0482                     u535:
  1876     0482  1003               	clrc
  1877     0483  0DF4               	rlf	??_SetBit,f
  1878     0484                     u534:
  1879     0484  3EFF               	addlw	-1
  1880     0485  1D03               	skipz
  1881     0486  2C82               	goto	u535
  1882     0487  0874               	movf	??_SetBit,w
  1883     0488  00F5               	movwf	??_SetBit+1
  1884     0489  0870               	movf	SetBit@port,w
  1885     048A  0084               	movwf	4
  1886     048B  1783               	bsf	3,7
  1887     048C  1C71               	btfss	SetBit@port+1,0
  1888     048D  1383               	bcf	3,7
  1889     048E  0875               	movf	??_SetBit+1,w
  1890     048F  0480               	iorwf	0,f
  1891                           
  1892                           ;../../pic16flcd.c: 27:     } else {
  1893     0490  2CA4               	goto	l31
  1894     0491                     l710:
  1895                           
  1896                           ;../../pic16flcd.c: 28:         *port &= ~(1 << pin);
  1897     0491  3001               	movlw	1
  1898     0492  00F4               	movwf	??_SetBit
  1899     0493  0A72               	incf	SetBit@pin,w
  1900     0494  2C97               	goto	u544
  1901     0495                     u545:
  1902     0495  1003               	clrc
  1903     0496  0DF4               	rlf	??_SetBit,f
  1904     0497                     u544:
  1905     0497  3EFF               	addlw	-1
  1906     0498  1D03               	skipz
  1907     0499  2C95               	goto	u545
  1908     049A  0874               	movf	??_SetBit,w
  1909     049B  3AFF               	xorlw	255
  1910     049C  00F5               	movwf	??_SetBit+1
  1911     049D  0870               	movf	SetBit@port,w
  1912     049E  0084               	movwf	4
  1913     049F  1783               	bsf	3,7
  1914     04A0  1C71               	btfss	SetBit@port+1,0
  1915     04A1  1383               	bcf	3,7
  1916     04A2  0875               	movf	??_SetBit+1,w
  1917     04A3  0580               	andwf	0,f
  1918     04A4                     l31:
  1919     04A4  0008               	return
  1920     04A5                     __end_of_SetBit:
  1921     007E                     btemp	set	126	;btemp
  1922     007E                     wtemp0	set	126
  1923                           
  1924                           	psect	config
  1925                           
  1926                           ;Config register CONFIG @ 0x2007
  1927                           ;	Oscillator Selection bits
  1928                           ;	FOSC = 0x68, user specified literal
  1929                           ;	Watchdog Timer Enable bit
  1930                           ;	WDTE = OFF, WDT disabled
  1931                           ;	Power-up Timer Enable bit
  1932                           ;	PWRTE = OFF, PWRT disabled
  1933                           ;	Brown-out Reset Enable bit
  1934                           ;	BOREN = OFF, BOR disabled
  1935                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1936                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1937                           ;	Data EEPROM Memory Code Protection bit
  1938                           ;	CPD = OFF, Data EEPROM code protection off
  1939                           ;	Flash Program Memory Write Enable bits
  1940                           ;	WRT = 0x3, unprogrammed default
  1941                           ;	In-Circuit Debugger Mode bit
  1942                           ;	DEBUG = 0x1, unprogrammed default
  1943                           ;	Flash Program Memory Code Protection bit
  1944                           ;	CP = OFF, Code protection off
  1945     2007                     	org	8199
  1946     2007  3F38               	dw	16184

Data Sizes:
    Strings     12
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    F952$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S23$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   56218
                                              6 BANK0     12    12      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     2      1   10570
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10285
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11619
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22611
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11245
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11157
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteString
     _Lcd_WriteChar
       _PulseEnable
       _SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 22:56:56 2023

                      pc 0002                       l20 0527                       l31 04A4  
                     l40 07ED                       l34 04D8                       l19 0527  
                     l52 042B                       l60 0478                       l37 06C2  
                     l46 0450                       l49 0598           Lcd_Init@config 0024  
                     fsr 0004                      l710 0491                      l712 04A6  
                    l720 0419                      l706 0479                      l714 04BB  
                    l722 0421                      l730 0542                      l708 047E  
                    l716 04C4                      l740 057C                      l732 0557  
                    l820 0463                      l724 06C4                      l718 059A  
                    l742 0586                      l734 055E                      l726 052E  
                    l750 0458                      l744 0590                      l736 0568  
                    l728 0538                      l738 0572                      l754 045B  
                    l746 0454                      l770 043E                      l756 046B  
                    l748 0455                      l772 0444                      l780 04F9  
                    l758 0470                      l766 042F                      l782 04FF  
                    l774 04D9                      l768 0430                      l784 050B  
                    l776 04DC                      l786 0513                      l778 04F3  
                    l788 051F                      u520 047E                      u600 05D8  
                    u521 047D                      u700 0671                      u620 05F9  
                    u701 066F                      u621 05F7                      u534 0484  
                    u710 0672                      u630 05FA                      u535 0482  
                    u615 05EF                      u544 0497                      u560 05B5  
                    u800 06E0                      u545 0495                      u561 05B3  
                    u730 0693                      u650 061B                      u570 05B6  
                    u731 0691                      u651 0619                      u555 05AB  
                    u740 0694                      u660 061C                      u900 077A  
                    u820 0701                      u725 0689                      u645 0611  
                    u901 0778                      u821 06FF                      u670 064F  
                    u590 05D7                      u910 077B                      u830 0702  
                    u671 064D                      u591 05D5                      u815 06F7  
                    u760 06B5                      u680 0650                      u761 06B3  
                    u585 05CD                      u770 06B6                      u930 079C  
                    u850 0723                      u755 06AB                      u931 079A  
                    u851 0721                      u940 079D                      u860 0724  
                    u925 0792                      u845 0719                      u790 06DF  
                    u695 0667                      u791 06DD                      u960 07BE  
                    u880 0745                      u961 07BC                      u881 0743  
                    u785 06D5                      u970 07BF                      u890 0746  
                    u955 07B4                      u875 073B                      u990 07E0  
                    u991 07DE                      u985 07D6                      fsr0 0004  
       ?_Lcd_WriteString 007D                      indf 0000      __end_of_Lcd_Command 06C3  
                   STR_1 000F                     STR_2 0009                     u1000 07E1  
                   u1010 0450                     u1011 044F                     u1020 04E6  
                   u1037 0534                     u1047 0548                     u1057 055B  
                   u1067 0427                     u1077 04BF       Lcd_WriteString@str 007D  
                   _main 04D9                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTC 0007                    _TRISC 0087  
             SetBit@port 0070                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Lcd_Init 0599        PulseEnable@config 0078  
        __initialization 07EE             __end_of_main 052B              _Lcd_Command 0599  
                 ??_main 0026    __end_of_Lcd_SetCursor 0479                   _SetBit 0479  
   Lcd_SetCursor@address 0025              SetBit@value 0073    __end_of_Lcd_WriteChar 07EE  
__end_of__initialization 07FC            ??_PulseEnable 0076        __end_of_Lcd_Clear 042C  
         __pcstackCOMMON 0070             __pidataBANK0 03FD                ?_Lcd_Init 0070  
                ?_SetBit 0070               __pmaintext 04D9      __end_of_PulseEnable 04D9  
             ??_Lcd_Init 0022    Lcd_WriteString@config 0021               __stringtab 0003  
      Lcd_WriteChar@data 0079             ?_Lcd_Command 0079                  __ptext1 042C  
                __ptext2 06C3                  __ptext3 0451                  __ptext4 052B  
                __ptext5 0418                  __ptext6 0599                  __ptext7 04A5  
                __ptext8 0479                  main@lcd 002A     end_of_initialization 07FC  
       Lcd_SetCursor@row 0020              _PulseEnable 04A5        ??_Lcd_WriteString 0020  
              _Lcd_Clear 0418           __end_of_SetBit 04A5                SetBit@pin 0072  
    start_initialization 07EE                 ??_SetBit 0074               ?_Lcd_Clear 0070  
    Lcd_SetCursor@config 0024      Lcd_SetCursor@column 0021               init_fetch0 0405  
            __pdataBANK0 0032        Lcd_Command@config 007C      Lcd_WriteChar@config 007C  
              ___latbits 0002            __pcstackBANK0 0020            _Lcd_SetCursor 0451  
              __pstrings 0003            _Lcd_WriteChar 06C3           ?_Lcd_SetCursor 0020  
           ?_PulseEnable 0070              ??_Lcd_Clear 0020          Lcd_Clear@config 007D  
            __stringbase 0008           ?_Lcd_WriteChar 0079                 _Lcd_Init 052B  
        _Lcd_WriteString 042C       __end_of__stringtab 0009          ??_Lcd_SetCursor 0022  
               main@F952 0032          ??_Lcd_WriteChar 007A  __end_of_Lcd_WriteString 0451  
               init_ram0 0409                stringcode 0003            ??_Lcd_Command 007A  
         Lcd_Command@cmd 0079                 stringdir 0003                 stringtab 0003  
