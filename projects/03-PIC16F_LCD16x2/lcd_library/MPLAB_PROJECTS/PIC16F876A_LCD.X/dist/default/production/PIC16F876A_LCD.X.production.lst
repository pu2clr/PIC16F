

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 23:18:16 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F876A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     008C                     	;# 
   207     008D                     	;# 
   208     008E                     	;# 
   209     0091                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225                           
   226                           	psect	idataBANK0
   227     0375                     __pidataBANK0:
   228                           
   229                           ;initializer for main@F953
   230     0375  3407               	retlw	7
   231     0376  3400               	retlw	0
   232     0377  3402               	retlw	2
   233     0378  3403               	retlw	3
   234     0379  3404               	retlw	4
   235     037A  3405               	retlw	5
   236     037B  3406               	retlw	6
   237     037C  3407               	retlw	7
   238     0007                     _PORTC	set	7
   239     0087                     _TRISC	set	135
   240                           
   241                           	psect	strings
   242     0003                     __pstrings:
   243     0003                     stringtab:
   244     0003                     __stringtab:
   245     0003                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248     0003                     stringdir:
   249     0003  3000               	movlw	high stringdir
   250     0004  008A               	movwf	10
   251     0005  0804               	movf	4,w
   252     0006  0A84               	incf	4,f
   253     0007  0782               	addwf	2,f
   254     0008                     __stringbase:
   255     0008  3400               	retlw	0
   256     0009                     __end_of__stringtab:
   257     0009                     STR_2:
   258     0009  3457               	retlw	87	;'W'
   259     000A  346F               	retlw	111	;'o'
   260     000B  3472               	retlw	114	;'r'
   261     000C  346C               	retlw	108	;'l'
   262     000D  3464               	retlw	100	;'d'
   263     000E  3400               	retlw	0
   264     000F                     STR_1:
   265     000F  3448               	retlw	72	;'H'
   266     0010  3465               	retlw	101	;'e'
   267     0011  346C               	retlw	108	;'l'
   268     0012  346C               	retlw	108	;'l'
   269     0013  346F               	retlw	111	;'o'
   270     0014  3400               	retlw	0
   271                           
   272                           	psect	cinit
   273     07EE                     start_initialization:	
   274                           ; #config settings
   275                           
   276     07EE                     __initialization:
   277                           
   278                           ; Initialize objects allocated to BANK0
   279     07EE  1383               	bcf	3,7	;select IRP bank0
   280     07EF  303B               	movlw	low (__pdataBANK0+8)
   281     07F0  00FD               	movwf	btemp+-1
   282     07F1  3003               	movlw	high __pidataBANK0
   283     07F2  00FE               	movwf	btemp
   284     07F3  3075               	movlw	low __pidataBANK0
   285     07F4  00FF               	movwf	btemp+1
   286     07F5  3033               	movlw	low __pdataBANK0
   287     07F6  0084               	movwf	4
   288     07F7  120A  118A  2381  120A  118A  	fcall	init_ram0
   289     07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292     07FC                     __end_of__initialization:
   293     07FC  0183               	clrf	3
   294     07FD  120A  118A  2CBF   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	dataBANK0
   297     0033                     __pdataBANK0:
   298     0033                     main@F953:
   299     0033                     	ds	8
   300                           
   301                           	psect	inittext
   302     037D                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305     037D  087E               	movf	btemp,w
   306     037E  008A               	movwf	10
   307     037F  087F               	movf	btemp+1,w
   308     0380  0082               	movwf	2
   309     0381                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316     0381  120A  118A  237D  120A  118A  	fcall	init_fetch0
   317     0386  0080               	movwf	0
   318     0387  0A84               	incf	4,f
   319     0388  0804               	movf	4,w
   320     0389  067D               	xorwf	btemp+-1,w
   321     038A  1903               	btfsc	3,2
   322     038B  3400               	retlw	0
   323     038C  0AFF               	incf	btemp+1,f
   324     038D  1903               	btfsc	3,2
   325     038E  0AFE               	incf	btemp,f
   326     038F  2B81               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329     0070                     __pcstackCOMMON:
   330     0070                     ?_Lcd_Init:
   331     0070                     ?_Lcd_Clear:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_SetBit:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_PulseEnable:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     SetBit@port:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 2 bytes @ 0x0
   348     0070                     	ds	2
   349     0072                     SetBit@pin:
   350                           
   351                           ; 1 bytes @ 0x2
   352     0072                     	ds	1
   353     0073                     SetBit@value:
   354                           
   355                           ; 1 bytes @ 0x3
   356     0073                     	ds	1
   357     0074                     ??_SetBit:
   358                           
   359                           ; 1 bytes @ 0x4
   360     0074                     	ds	2
   361     0076                     ??_PulseEnable:
   362                           
   363                           ; 1 bytes @ 0x6
   364     0076                     	ds	2
   365     0078                     PulseEnable@config:
   366                           
   367                           ; 1 bytes @ 0x8
   368     0078                     	ds	1
   369     0079                     ?_Lcd_WriteChar:
   370     0079                     ?_Lcd_Command:	
   371                           ; 1 bytes @ 0x9
   372                           
   373     0079                     Lcd_Command@cmd:	
   374                           ; 1 bytes @ 0x9
   375                           
   376     0079                     Lcd_WriteChar@data:	
   377                           ; 1 bytes @ 0x9
   378                           
   379                           
   380                           ; 1 bytes @ 0x9
   381     0079                     	ds	1
   382     007A                     ??_Lcd_WriteChar:
   383     007A                     ??_Lcd_Command:	
   384                           ; 1 bytes @ 0xA
   385                           
   386                           
   387                           ; 1 bytes @ 0xA
   388     007A                     	ds	2
   389     007C                     Lcd_Command@config:
   390     007C                     Lcd_WriteChar@config:	
   391                           ; 1 bytes @ 0xC
   392                           
   393                           
   394                           ; 1 bytes @ 0xC
   395     007C                     	ds	1
   396     007D                     ?_Lcd_WriteString:
   397     007D                     Lcd_WriteString@str:	
   398                           ; 1 bytes @ 0xD
   399                           
   400     007D                     Lcd_Clear@config:	
   401                           ; 1 bytes @ 0xD
   402                           
   403                           
   404                           ; 1 bytes @ 0xD
   405     007D                     	ds	1
   406                           
   407                           	psect	cstackBANK0
   408     0020                     __pcstackBANK0:
   409     0020                     ??_Lcd_Clear:
   410     0020                     ?_Lcd_SetCursor:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0020                     ??_Lcd_WriteString:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0020                     Lcd_SetCursor@row:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421     0020                     	ds	1
   422     0021                     Lcd_WriteString@config:
   423     0021                     Lcd_SetCursor@column:	
   424                           ; 1 bytes @ 0x1
   425                           
   426                           
   427                           ; 1 bytes @ 0x1
   428     0021                     	ds	1
   429     0022                     ??_Lcd_Init:
   430     0022                     ??_Lcd_SetCursor:	
   431                           ; 1 bytes @ 0x2
   432                           
   433                           
   434                           ; 1 bytes @ 0x2
   435     0022                     	ds	2
   436     0024                     Lcd_Init@config:
   437     0024                     Lcd_SetCursor@address:	
   438                           ; 1 bytes @ 0x4
   439                           
   440                           
   441                           ; 1 bytes @ 0x4
   442     0024                     	ds	1
   443     0025                     Lcd_SetCursor@config:
   444                           
   445                           ; 1 bytes @ 0x5
   446     0025                     	ds	1
   447     0026                     ??_main:
   448                           
   449                           ; 1 bytes @ 0x6
   450     0026                     	ds	4
   451     002A                     main@i:
   452                           
   453                           ; 1 bytes @ 0xA
   454     002A                     	ds	1
   455     002B                     main@lcd:
   456                           
   457                           ; 8 bytes @ 0xB
   458     002B                     	ds	8
   459                           
   460                           	psect	maintext
   461     04BF                     __pmaintext:	
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 16 in file "newmain.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  lcd             8   11[BANK0 ] struct .
   472 ;;  i               1   10[BANK0 ] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : B00/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       9       0       0       0
   484 ;;      Temps:          0       4       0       0       0
   485 ;;      Totals:         0      13       0       0       0
   486 ;;Total ram usage:       13 bytes
   487 ;; Hardware stack levels required when called: 5
   488 ;; This function calls:
   489 ;;		_Lcd_Clear
   490 ;;		_Lcd_Init
   491 ;;		_Lcd_SetCursor
   492 ;;		_Lcd_WriteChar
   493 ;;		_Lcd_WriteString
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     04BF                     _main:	
   500                           ;psect for function _main
   501                           
   502     04BF                     l816:	
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   505                           
   506                           
   507                           ;newmain.c: 17: ;newmain.c: 19:     Lcd_Clear(&lcd);
   508     04BF  1683               	bsf	3,5	;RP0=1, select bank1
   509     04C0  1303               	bcf	3,6	;RP1=0, select bank1
   510     04C1  0187               	clrf	7	;volatile
   511     04C2                     l818:
   512                           
   513                           ;newmain.c: 20: 
   514     04C2  302B               	movlw	main@lcd& (0+255)
   515     04C3  0084               	movwf	4
   516     04C4  3033               	movlw	low main@F953
   517     04C5  1283               	bcf	3,5	;RP0=0, select bank0
   518     04C6  1303               	bcf	3,6	;RP1=0, select bank0
   519     04C7  00A6               	movwf	??_main
   520     04C8  0804               	movf	4,w
   521     04C9  00A7               	movwf	??_main+1
   522     04CA  3008               	movlw	8
   523     04CB  00A8               	movwf	??_main+2
   524     04CC                     u1040:
   525     04CC  0826               	movf	??_main,w
   526     04CD  0084               	movwf	4
   527     04CE  1383               	bcf	3,7	;select IRP bank0
   528     04CF  0800               	movf	0,w
   529     04D0  00A9               	movwf	??_main+3
   530     04D1  0AA6               	incf	??_main,f
   531     04D2  0827               	movf	??_main+1,w
   532     04D3  0084               	movwf	4
   533     04D4  0829               	movf	??_main+3,w
   534     04D5  0080               	movwf	0
   535     04D6  0AA7               	incf	??_main+1,f
   536     04D7  0BA8               	decfsz	??_main+2,f
   537     04D8  2CCC               	goto	u1040
   538     04D9                     l820:
   539                           
   540                           ;newmain.c: 31:             Lcd_WriteChar(&lcd,'A' + (i-1));
   541     04D9  302B               	movlw	(low (main@lcd| 0))& (0+255)
   542     04DA  120A  118A  2451  120A  118A  	fcall	_Lcd_Init
   543     04DF                     l822:
   544                           
   545                           ;newmain.c: 32:             _delay((unsigned long)((500)*(8000000/4000.0)));
   546     04DF  302B               	movlw	(low (main@lcd| 0))& (0+255)
   547     04E0  120A  118A  2390  120A  118A  	fcall	_Lcd_Clear
   548     04E5                     l824:
   549                           
   550                           ;newmain.c: 35: 
   551     04E5  1283               	bcf	3,5	;RP0=0, select bank0
   552     04E6  1303               	bcf	3,6	;RP1=0, select bank0
   553     04E7  01A0               	clrf	Lcd_SetCursor@row
   554     04E8  0AA0               	incf	Lcd_SetCursor@row,f
   555     04E9  01A1               	clrf	Lcd_SetCursor@column
   556     04EA  0AA1               	incf	Lcd_SetCursor@column,f
   557     04EB  302B               	movlw	(low (main@lcd| 0))& (0+255)
   558     04EC  120A  118A  23C9  120A  118A  	fcall	_Lcd_SetCursor
   559     04F1                     l826:
   560                           
   561                           ;newmain.c: 36:         for (i = 1; i <= 16; i++) {
   562     04F1  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   563     04F2  00FD               	movwf	Lcd_WriteString@str
   564     04F3  302B               	movlw	(low (main@lcd| 0))& (0+255)
   565     04F4  120A  118A  23A4  120A  118A  	fcall	_Lcd_WriteString
   566     04F9                     l828:
   567                           
   568                           ;newmain.c: 37:             Lcd_SetCursor(&lcd, 2, i);
   569     04F9  3002               	movlw	2
   570     04FA  1283               	bcf	3,5	;RP0=0, select bank0
   571     04FB  1303               	bcf	3,6	;RP1=0, select bank0
   572     04FC  00A0               	movwf	Lcd_SetCursor@row
   573     04FD  01A1               	clrf	Lcd_SetCursor@column
   574     04FE  0AA1               	incf	Lcd_SetCursor@column,f
   575     04FF  302B               	movlw	(low (main@lcd| 0))& (0+255)
   576     0500  120A  118A  23C9  120A  118A  	fcall	_Lcd_SetCursor
   577     0505                     l830:
   578                           
   579                           ;newmain.c: 38:             Lcd_WriteChar(&lcd,'I' + (i-1));
   580     0505  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   581     0506  00FD               	movwf	Lcd_WriteString@str
   582     0507  302B               	movlw	(low (main@lcd| 0))& (0+255)
   583     0508  120A  118A  23A4  120A  118A  	fcall	_Lcd_WriteString
   584     050D                     l832:
   585                           
   586                           ;newmain.c: 39:             _delay((unsigned long)((500)*(8000000/4000.0)));
   587     050D  3033               	movlw	51
   588     050E  1283               	bcf	3,5	;RP0=0, select bank0
   589     050F  1303               	bcf	3,6	;RP1=0, select bank0
   590     0510  00A8               	movwf	??_main+2
   591     0511  30BB               	movlw	187
   592     0512  00A7               	movwf	??_main+1
   593     0513  30DF               	movlw	223
   594     0514  00A6               	movwf	??_main
   595     0515                     u1077:
   596     0515  0BA6               	decfsz	??_main,f
   597     0516  2D15               	goto	u1077
   598     0517  0BA7               	decfsz	??_main+1,f
   599     0518  2D15               	goto	u1077
   600     0519  0BA8               	decfsz	??_main+2,f
   601     051A  2D15               	goto	u1077
   602     051B                     l834:
   603                           
   604                           ;newmain.c: 41:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   605     051B  302B               	movlw	(low (main@lcd| 0))& (0+255)
   606     051C  120A  118A  2390  120A  118A  	fcall	_Lcd_Clear
   607     0521                     l836:
   608                           
   609                           ;newmain.c: 42:     }
   610     0521  1283               	bcf	3,5	;RP0=0, select bank0
   611     0522  1303               	bcf	3,6	;RP1=0, select bank0
   612     0523  01AA               	clrf	main@i
   613     0524  0AAA               	incf	main@i,f
   614     0525                     l842:
   615                           
   616                           ;newmain.c: 43: }
   617     0525  01A0               	clrf	Lcd_SetCursor@row
   618     0526  0AA0               	incf	Lcd_SetCursor@row,f
   619     0527  082A               	movf	main@i,w
   620     0528  00A1               	movwf	Lcd_SetCursor@column
   621     0529  302B               	movlw	(low (main@lcd| 0))& (0+255)
   622     052A  120A  118A  23C9  120A  118A  	fcall	_Lcd_SetCursor
   623     052F  1283               	bcf	3,5	;RP0=0, select bank0
   624     0530  1303               	bcf	3,6	;RP1=0, select bank0
   625     0531  082A               	movf	main@i,w
   626     0532  3E40               	addlw	64
   627     0533  00F9               	movwf	Lcd_WriteChar@data
   628     0534  302B               	movlw	(low (main@lcd| 0))& (0+255)
   629     0535  120A  118A  26C3  120A  118A  	fcall	_Lcd_WriteChar
   630     053A                     l844:
   631     053A  3006               	movlw	6
   632     053B  1283               	bcf	3,5	;RP0=0, select bank0
   633     053C  1303               	bcf	3,6	;RP1=0, select bank0
   634     053D  00A8               	movwf	??_main+2
   635     053E  3013               	movlw	19
   636     053F  00A7               	movwf	??_main+1
   637     0540  30AD               	movlw	173
   638     0541  00A6               	movwf	??_main
   639     0542                     u1087:
   640     0542  0BA6               	decfsz	??_main,f
   641     0543  2D42               	goto	u1087
   642     0544  0BA7               	decfsz	??_main+1,f
   643     0545  2D42               	goto	u1087
   644     0546  0BA8               	decfsz	??_main+2,f
   645     0547  2D42               	goto	u1087
   646     0548                     l846:
   647     0548  3001               	movlw	1
   648     0549  1283               	bcf	3,5	;RP0=0, select bank0
   649     054A  1303               	bcf	3,6	;RP1=0, select bank0
   650     054B  00A6               	movwf	??_main
   651     054C  0826               	movf	??_main,w
   652     054D  07AA               	addwf	main@i,f
   653     054E                     l848:
   654     054E  3011               	movlw	17
   655     054F  022A               	subwf	main@i,w
   656     0550  1C03               	skipc
   657     0551  2D53               	goto	u1051
   658     0552  2D54               	goto	u1050
   659     0553                     u1051:
   660     0553  2D25               	goto	l842
   661     0554                     u1050:
   662     0554                     l850:
   663     0554  3033               	movlw	51
   664     0555  1283               	bcf	3,5	;RP0=0, select bank0
   665     0556  1303               	bcf	3,6	;RP1=0, select bank0
   666     0557  00A8               	movwf	??_main+2
   667     0558  30BB               	movlw	187
   668     0559  00A7               	movwf	??_main+1
   669     055A  30DF               	movlw	223
   670     055B  00A6               	movwf	??_main
   671     055C                     u1097:
   672     055C  0BA6               	decfsz	??_main,f
   673     055D  2D5C               	goto	u1097
   674     055E  0BA7               	decfsz	??_main+1,f
   675     055F  2D5C               	goto	u1097
   676     0560  0BA8               	decfsz	??_main+2,f
   677     0561  2D5C               	goto	u1097
   678     0562                     l852:
   679     0562  1283               	bcf	3,5	;RP0=0, select bank0
   680     0563  1303               	bcf	3,6	;RP1=0, select bank0
   681     0564  01AA               	clrf	main@i
   682     0565  0AAA               	incf	main@i,f
   683     0566                     l856:
   684     0566  3002               	movlw	2
   685     0567  00A0               	movwf	Lcd_SetCursor@row
   686     0568  082A               	movf	main@i,w
   687     0569  00A1               	movwf	Lcd_SetCursor@column
   688     056A  302B               	movlw	(low (main@lcd| 0))& (0+255)
   689     056B  120A  118A  23C9  120A  118A  	fcall	_Lcd_SetCursor
   690     0570  1283               	bcf	3,5	;RP0=0, select bank0
   691     0571  1303               	bcf	3,6	;RP1=0, select bank0
   692     0572  082A               	movf	main@i,w
   693     0573  3E48               	addlw	72
   694     0574  00F9               	movwf	Lcd_WriteChar@data
   695     0575  302B               	movlw	(low (main@lcd| 0))& (0+255)
   696     0576  120A  118A  26C3  120A  118A  	fcall	_Lcd_WriteChar
   697     057B                     l858:
   698     057B  3006               	movlw	6
   699     057C  1283               	bcf	3,5	;RP0=0, select bank0
   700     057D  1303               	bcf	3,6	;RP1=0, select bank0
   701     057E  00A8               	movwf	??_main+2
   702     057F  3013               	movlw	19
   703     0580  00A7               	movwf	??_main+1
   704     0581  30AD               	movlw	173
   705     0582  00A6               	movwf	??_main
   706     0583                     u1107:
   707     0583  0BA6               	decfsz	??_main,f
   708     0584  2D83               	goto	u1107
   709     0585  0BA7               	decfsz	??_main+1,f
   710     0586  2D83               	goto	u1107
   711     0587  0BA8               	decfsz	??_main+2,f
   712     0588  2D83               	goto	u1107
   713     0589                     l860:
   714     0589  3001               	movlw	1
   715     058A  1283               	bcf	3,5	;RP0=0, select bank0
   716     058B  1303               	bcf	3,6	;RP1=0, select bank0
   717     058C  00A6               	movwf	??_main
   718     058D  0826               	movf	??_main,w
   719     058E  07AA               	addwf	main@i,f
   720     058F                     l862:
   721     058F  3011               	movlw	17
   722     0590  022A               	subwf	main@i,w
   723     0591  1C03               	skipc
   724     0592  2D94               	goto	u1061
   725     0593  2D95               	goto	u1060
   726     0594                     u1061:
   727     0594  2D66               	goto	l856
   728     0595                     u1060:
   729     0595  2D0D               	goto	l832
   730     0596  120A  118A  2800   	ljmp	start
   731     0599                     __end_of_main:
   732                           
   733                           	psect	text1
   734     03A4                     __ptext1:	
   735 ;; *************** function _Lcd_WriteString *****************
   736 ;; Defined at:
   737 ;;		line 103 in file "../../pic16flcd.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  config          1    wreg     PTR struct .
   740 ;;		 -> main@lcd(8), 
   741 ;;  str             1   13[COMMON] PTR unsigned char 
   742 ;;		 -> STR_2(6), STR_1(6), 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  config          1    1[BANK0 ] PTR struct .
   745 ;;		 -> main@lcd(8), 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         1       0       0       0       0
   756 ;;      Locals:         0       1       0       0       0
   757 ;;      Temps:          0       1       0       0       0
   758 ;;      Totals:         1       2       0       0       0
   759 ;;Total ram usage:        3 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 3
   762 ;; This function calls:
   763 ;;		_Lcd_WriteChar
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769     03A4                     _Lcd_WriteString:	
   770                           ;psect for function _Lcd_WriteString
   771                           
   772                           
   773                           ;incstack = 0
   774                           ; Regs used in _Lcd_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   775                           ;Lcd_WriteString@config stored from wreg
   776     03A4  1283               	bcf	3,5	;RP0=0, select bank0
   777     03A5  1303               	bcf	3,6	;RP1=0, select bank0
   778     03A6  00A1               	movwf	Lcd_WriteString@config
   779     03A7                     l808:
   780                           
   781                           ;../../pic16flcd.c: 104:     while(*str != '\0') {
   782     03A7  2BBC               	goto	l814
   783     03A8                     l810:
   784                           
   785                           ;../../pic16flcd.c: 105:         Lcd_WriteChar(config, (unsigned char)(*str));
   786     03A8  087D               	movf	Lcd_WriteString@str,w
   787     03A9  0084               	movwf	4
   788     03AA  120A  118A  2003  120A  118A  	fcall	stringdir
   789     03AF  00F9               	movwf	Lcd_WriteChar@data
   790     03B0  0821               	movf	Lcd_WriteString@config,w
   791     03B1  120A  118A  26C3  120A  118A  	fcall	_Lcd_WriteChar
   792     03B6                     l812:
   793                           
   794                           ;../../pic16flcd.c: 106:         str++;
   795     03B6  3001               	movlw	1
   796     03B7  1283               	bcf	3,5	;RP0=0, select bank0
   797     03B8  1303               	bcf	3,6	;RP1=0, select bank0
   798     03B9  00A0               	movwf	??_Lcd_WriteString
   799     03BA  0820               	movf	??_Lcd_WriteString,w
   800     03BB  07FD               	addwf	Lcd_WriteString@str,f
   801     03BC                     l814:
   802                           
   803                           ;../../pic16flcd.c: 104:     while(*str != '\0') {
   804     03BC  087D               	movf	Lcd_WriteString@str,w
   805     03BD  0084               	movwf	4
   806     03BE  120A  118A  2003  120A  118A  	fcall	stringdir
   807     03C3  3A00               	xorlw	0
   808     03C4  1D03               	skipz
   809     03C5  2BC7               	goto	u1031
   810     03C6  2BC8               	goto	u1030
   811     03C7                     u1031:
   812     03C7  2BA8               	goto	l810
   813     03C8                     u1030:
   814     03C8                     l54:
   815     03C8  0008               	return
   816     03C9                     __end_of_Lcd_WriteString:
   817                           
   818                           	psect	text2
   819     06C3                     __ptext2:	
   820 ;; *************** function _Lcd_WriteChar *****************
   821 ;; Defined at:
   822 ;;		line 78 in file "../../pic16flcd.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  config          1    wreg     PTR struct .
   825 ;;		 -> main@lcd(8), 
   826 ;;  data            1    9[COMMON] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  config          1   12[COMMON] PTR struct .
   829 ;;		 -> main@lcd(8), 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         1       0       0       0       0
   840 ;;      Locals:         1       0       0       0       0
   841 ;;      Temps:          2       0       0       0       0
   842 ;;      Totals:         4       0       0       0       0
   843 ;;Total ram usage:        4 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; Hardware stack levels required when called: 2
   846 ;; This function calls:
   847 ;;		_PulseEnable
   848 ;;		_SetBit
   849 ;; This function is called by:
   850 ;;		_main
   851 ;;		_Lcd_WriteString
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855     06C3                     _Lcd_WriteChar:	
   856                           ;psect for function _Lcd_WriteChar
   857                           
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   861                           ;Lcd_WriteChar@config stored from wreg
   862     06C3  00FC               	movwf	Lcd_WriteChar@config
   863     06C4                     l766:
   864                           
   865                           ;../../pic16flcd.c: 80:     SetBit(config->port, config->d4_pin, (data >> 4) & 0x01);
   866     06C4  087C               	movf	Lcd_WriteChar@config,w
   867     06C5  0084               	movwf	4
   868     06C6  1383               	bcf	3,7	;select IRP bank0
   869     06C7  0800               	movf	0,w
   870     06C8  00F0               	movwf	SetBit@port
   871     06C9  0A84               	incf	4,f
   872     06CA  0800               	movf	0,w
   873     06CB  0384               	decf	4,f
   874     06CC  00F1               	movwf	SetBit@port+1
   875     06CD  087C               	movf	Lcd_WriteChar@config,w
   876     06CE  3E04               	addlw	4
   877     06CF  0084               	movwf	4
   878     06D0  0800               	movf	0,w
   879     06D1  00F2               	movwf	SetBit@pin
   880     06D2  0879               	movf	Lcd_WriteChar@data,w
   881     06D3  00FB               	movwf	??_Lcd_WriteChar+1
   882     06D4  3004               	movlw	4
   883     06D5                     u805:
   884     06D5  1003               	clrc
   885     06D6  0CFB               	rrf	??_Lcd_WriteChar+1,f
   886     06D7  3EFF               	addlw	-1
   887     06D8  1D03               	skipz
   888     06D9  2ED5               	goto	u805
   889     06DA  187B               	btfsc	??_Lcd_WriteChar+1,0
   890     06DB  2EDD               	goto	u811
   891     06DC  2EDF               	goto	u810
   892     06DD                     u811:
   893     06DD  3001               	movlw	1
   894     06DE  2EE0               	goto	u820
   895     06DF                     u810:
   896     06DF  3000               	movlw	0
   897     06E0                     u820:
   898     06E0  00F3               	movwf	SetBit@value
   899     06E1  120A  118A  23F1  120A  118A  	fcall	_SetBit
   900                           
   901                           ;../../pic16flcd.c: 81:     SetBit(config->port, config->d5_pin, (data >> 5) & 0x01);
   902     06E6  087C               	movf	Lcd_WriteChar@config,w
   903     06E7  0084               	movwf	4
   904     06E8  1383               	bcf	3,7	;select IRP bank0
   905     06E9  0800               	movf	0,w
   906     06EA  00F0               	movwf	SetBit@port
   907     06EB  0A84               	incf	4,f
   908     06EC  0800               	movf	0,w
   909     06ED  0384               	decf	4,f
   910     06EE  00F1               	movwf	SetBit@port+1
   911     06EF  087C               	movf	Lcd_WriteChar@config,w
   912     06F0  3E05               	addlw	5
   913     06F1  0084               	movwf	4
   914     06F2  0800               	movf	0,w
   915     06F3  00F2               	movwf	SetBit@pin
   916     06F4  0879               	movf	Lcd_WriteChar@data,w
   917     06F5  00FB               	movwf	??_Lcd_WriteChar+1
   918     06F6  3005               	movlw	5
   919     06F7                     u835:
   920     06F7  1003               	clrc
   921     06F8  0CFB               	rrf	??_Lcd_WriteChar+1,f
   922     06F9  3EFF               	addlw	-1
   923     06FA  1D03               	skipz
   924     06FB  2EF7               	goto	u835
   925     06FC  187B               	btfsc	??_Lcd_WriteChar+1,0
   926     06FD  2EFF               	goto	u841
   927     06FE  2F01               	goto	u840
   928     06FF                     u841:
   929     06FF  3001               	movlw	1
   930     0700  2F02               	goto	u850
   931     0701                     u840:
   932     0701  3000               	movlw	0
   933     0702                     u850:
   934     0702  00F3               	movwf	SetBit@value
   935     0703  120A  118A  23F1  120A  118A  	fcall	_SetBit
   936                           
   937                           ;../../pic16flcd.c: 82:     SetBit(config->port, config->d6_pin, (data >> 6) & 0x01);
   938     0708  087C               	movf	Lcd_WriteChar@config,w
   939     0709  0084               	movwf	4
   940     070A  1383               	bcf	3,7	;select IRP bank0
   941     070B  0800               	movf	0,w
   942     070C  00F0               	movwf	SetBit@port
   943     070D  0A84               	incf	4,f
   944     070E  0800               	movf	0,w
   945     070F  0384               	decf	4,f
   946     0710  00F1               	movwf	SetBit@port+1
   947     0711  087C               	movf	Lcd_WriteChar@config,w
   948     0712  3E06               	addlw	6
   949     0713  0084               	movwf	4
   950     0714  0800               	movf	0,w
   951     0715  00F2               	movwf	SetBit@pin
   952     0716  0879               	movf	Lcd_WriteChar@data,w
   953     0717  00FB               	movwf	??_Lcd_WriteChar+1
   954     0718  3006               	movlw	6
   955     0719                     u865:
   956     0719  1003               	clrc
   957     071A  0CFB               	rrf	??_Lcd_WriteChar+1,f
   958     071B  3EFF               	addlw	-1
   959     071C  1D03               	skipz
   960     071D  2F19               	goto	u865
   961     071E  187B               	btfsc	??_Lcd_WriteChar+1,0
   962     071F  2F21               	goto	u871
   963     0720  2F23               	goto	u870
   964     0721                     u871:
   965     0721  3001               	movlw	1
   966     0722  2F24               	goto	u880
   967     0723                     u870:
   968     0723  3000               	movlw	0
   969     0724                     u880:
   970     0724  00F3               	movwf	SetBit@value
   971     0725  120A  118A  23F1  120A  118A  	fcall	_SetBit
   972                           
   973                           ;../../pic16flcd.c: 83:     SetBit(config->port, config->d7_pin, (data >> 7) & 0x01);
   974     072A  087C               	movf	Lcd_WriteChar@config,w
   975     072B  0084               	movwf	4
   976     072C  1383               	bcf	3,7	;select IRP bank0
   977     072D  0800               	movf	0,w
   978     072E  00F0               	movwf	SetBit@port
   979     072F  0A84               	incf	4,f
   980     0730  0800               	movf	0,w
   981     0731  0384               	decf	4,f
   982     0732  00F1               	movwf	SetBit@port+1
   983     0733  087C               	movf	Lcd_WriteChar@config,w
   984     0734  3E07               	addlw	7
   985     0735  0084               	movwf	4
   986     0736  0800               	movf	0,w
   987     0737  00F2               	movwf	SetBit@pin
   988     0738  0879               	movf	Lcd_WriteChar@data,w
   989     0739  00FB               	movwf	??_Lcd_WriteChar+1
   990     073A  3007               	movlw	7
   991     073B                     u895:
   992     073B  1003               	clrc
   993     073C  0CFB               	rrf	??_Lcd_WriteChar+1,f
   994     073D  3EFF               	addlw	-1
   995     073E  1D03               	skipz
   996     073F  2F3B               	goto	u895
   997     0740  187B               	btfsc	??_Lcd_WriteChar+1,0
   998     0741  2F43               	goto	u901
   999     0742  2F45               	goto	u900
  1000     0743                     u901:
  1001     0743  3001               	movlw	1
  1002     0744  2F46               	goto	u910
  1003     0745                     u900:
  1004     0745  3000               	movlw	0
  1005     0746                     u910:
  1006     0746  00F3               	movwf	SetBit@value
  1007     0747  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1008                           
  1009                           ;../../pic16flcd.c: 85:     SetBit(config->port, config->rs_pin, 1);
  1010     074C  087C               	movf	Lcd_WriteChar@config,w
  1011     074D  0084               	movwf	4
  1012     074E  1383               	bcf	3,7	;select IRP bank0
  1013     074F  0800               	movf	0,w
  1014     0750  00F0               	movwf	SetBit@port
  1015     0751  0A84               	incf	4,f
  1016     0752  0800               	movf	0,w
  1017     0753  0384               	decf	4,f
  1018     0754  00F1               	movwf	SetBit@port+1
  1019     0755  087C               	movf	Lcd_WriteChar@config,w
  1020     0756  3E02               	addlw	2
  1021     0757  0084               	movwf	4
  1022     0758  0800               	movf	0,w
  1023     0759  00F2               	movwf	SetBit@pin
  1024     075A  01F3               	clrf	SetBit@value
  1025     075B  0AF3               	incf	SetBit@value,f
  1026     075C  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1027                           
  1028                           ;../../pic16flcd.c: 86:     PulseEnable(config);
  1029     0761  087C               	movf	Lcd_WriteChar@config,w
  1030     0762  120A  118A  241D  120A  118A  	fcall	_PulseEnable
  1031                           
  1032                           ;../../pic16flcd.c: 89:     SetBit(config->port, config->d4_pin, data & 0x01);
  1033     0767  087C               	movf	Lcd_WriteChar@config,w
  1034     0768  0084               	movwf	4
  1035     0769  1383               	bcf	3,7	;select IRP bank0
  1036     076A  0800               	movf	0,w
  1037     076B  00F0               	movwf	SetBit@port
  1038     076C  0A84               	incf	4,f
  1039     076D  0800               	movf	0,w
  1040     076E  0384               	decf	4,f
  1041     076F  00F1               	movwf	SetBit@port+1
  1042     0770  087C               	movf	Lcd_WriteChar@config,w
  1043     0771  3E04               	addlw	4
  1044     0772  0084               	movwf	4
  1045     0773  0800               	movf	0,w
  1046     0774  00F2               	movwf	SetBit@pin
  1047     0775  1879               	btfsc	Lcd_WriteChar@data,0
  1048     0776  2F78               	goto	u921
  1049     0777  2F7A               	goto	u920
  1050     0778                     u921:
  1051     0778  3001               	movlw	1
  1052     0779  2F7B               	goto	u930
  1053     077A                     u920:
  1054     077A  3000               	movlw	0
  1055     077B                     u930:
  1056     077B  00F3               	movwf	SetBit@value
  1057     077C  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1058                           
  1059                           ;../../pic16flcd.c: 90:     SetBit(config->port, config->d5_pin, (data >> 1) & 0x01);
  1060     0781  087C               	movf	Lcd_WriteChar@config,w
  1061     0782  0084               	movwf	4
  1062     0783  1383               	bcf	3,7	;select IRP bank0
  1063     0784  0800               	movf	0,w
  1064     0785  00F0               	movwf	SetBit@port
  1065     0786  0A84               	incf	4,f
  1066     0787  0800               	movf	0,w
  1067     0788  0384               	decf	4,f
  1068     0789  00F1               	movwf	SetBit@port+1
  1069     078A  087C               	movf	Lcd_WriteChar@config,w
  1070     078B  3E05               	addlw	5
  1071     078C  0084               	movwf	4
  1072     078D  0800               	movf	0,w
  1073     078E  00F2               	movwf	SetBit@pin
  1074     078F  0879               	movf	Lcd_WriteChar@data,w
  1075     0790  00FB               	movwf	??_Lcd_WriteChar+1
  1076     0791  3001               	movlw	1
  1077     0792                     u945:
  1078     0792  1003               	clrc
  1079     0793  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1080     0794  3EFF               	addlw	-1
  1081     0795  1D03               	skipz
  1082     0796  2F92               	goto	u945
  1083     0797  187B               	btfsc	??_Lcd_WriteChar+1,0
  1084     0798  2F9A               	goto	u951
  1085     0799  2F9C               	goto	u950
  1086     079A                     u951:
  1087     079A  3001               	movlw	1
  1088     079B  2F9D               	goto	u960
  1089     079C                     u950:
  1090     079C  3000               	movlw	0
  1091     079D                     u960:
  1092     079D  00F3               	movwf	SetBit@value
  1093     079E  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1094                           
  1095                           ;../../pic16flcd.c: 91:     SetBit(config->port, config->d6_pin, (data >> 2) & 0x01);
  1096     07A3  087C               	movf	Lcd_WriteChar@config,w
  1097     07A4  0084               	movwf	4
  1098     07A5  1383               	bcf	3,7	;select IRP bank0
  1099     07A6  0800               	movf	0,w
  1100     07A7  00F0               	movwf	SetBit@port
  1101     07A8  0A84               	incf	4,f
  1102     07A9  0800               	movf	0,w
  1103     07AA  0384               	decf	4,f
  1104     07AB  00F1               	movwf	SetBit@port+1
  1105     07AC  087C               	movf	Lcd_WriteChar@config,w
  1106     07AD  3E06               	addlw	6
  1107     07AE  0084               	movwf	4
  1108     07AF  0800               	movf	0,w
  1109     07B0  00F2               	movwf	SetBit@pin
  1110     07B1  0879               	movf	Lcd_WriteChar@data,w
  1111     07B2  00FB               	movwf	??_Lcd_WriteChar+1
  1112     07B3  3002               	movlw	2
  1113     07B4                     u975:
  1114     07B4  1003               	clrc
  1115     07B5  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1116     07B6  3EFF               	addlw	-1
  1117     07B7  1D03               	skipz
  1118     07B8  2FB4               	goto	u975
  1119     07B9  187B               	btfsc	??_Lcd_WriteChar+1,0
  1120     07BA  2FBC               	goto	u981
  1121     07BB  2FBE               	goto	u980
  1122     07BC                     u981:
  1123     07BC  3001               	movlw	1
  1124     07BD  2FBF               	goto	u990
  1125     07BE                     u980:
  1126     07BE  3000               	movlw	0
  1127     07BF                     u990:
  1128     07BF  00F3               	movwf	SetBit@value
  1129     07C0  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1130                           
  1131                           ;../../pic16flcd.c: 92:     SetBit(config->port, config->d7_pin, (data >> 3) & 0x01);
  1132     07C5  087C               	movf	Lcd_WriteChar@config,w
  1133     07C6  0084               	movwf	4
  1134     07C7  1383               	bcf	3,7	;select IRP bank0
  1135     07C8  0800               	movf	0,w
  1136     07C9  00F0               	movwf	SetBit@port
  1137     07CA  0A84               	incf	4,f
  1138     07CB  0800               	movf	0,w
  1139     07CC  0384               	decf	4,f
  1140     07CD  00F1               	movwf	SetBit@port+1
  1141     07CE  087C               	movf	Lcd_WriteChar@config,w
  1142     07CF  3E07               	addlw	7
  1143     07D0  0084               	movwf	4
  1144     07D1  0800               	movf	0,w
  1145     07D2  00F2               	movwf	SetBit@pin
  1146     07D3  0879               	movf	Lcd_WriteChar@data,w
  1147     07D4  00FB               	movwf	??_Lcd_WriteChar+1
  1148     07D5  3003               	movlw	3
  1149     07D6                     u1005:
  1150     07D6  1003               	clrc
  1151     07D7  0CFB               	rrf	??_Lcd_WriteChar+1,f
  1152     07D8  3EFF               	addlw	-1
  1153     07D9  1D03               	skipz
  1154     07DA  2FD6               	goto	u1005
  1155     07DB  187B               	btfsc	??_Lcd_WriteChar+1,0
  1156     07DC  2FDE               	goto	u1011
  1157     07DD  2FE0               	goto	u1010
  1158     07DE                     u1011:
  1159     07DE  3001               	movlw	1
  1160     07DF  2FE1               	goto	u1020
  1161     07E0                     u1010:
  1162     07E0  3000               	movlw	0
  1163     07E1                     u1020:
  1164     07E1  00F3               	movwf	SetBit@value
  1165     07E2  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1166                           
  1167                           ;../../pic16flcd.c: 94:     PulseEnable(config);
  1168     07E7  087C               	movf	Lcd_WriteChar@config,w
  1169     07E8  120A  118A  241D  120A  118A  	fcall	_PulseEnable
  1170     07ED                     l48:
  1171     07ED  0008               	return
  1172     07EE                     __end_of_Lcd_WriteChar:
  1173                           
  1174                           	psect	text3
  1175     03C9                     __ptext3:	
  1176 ;; *************** function _Lcd_SetCursor *****************
  1177 ;; Defined at:
  1178 ;;		line 149 in file "../../pic16flcd.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  config          1    wreg     PTR struct .
  1181 ;;		 -> main@lcd(8), 
  1182 ;;  row             1    0[BANK0 ] unsigned char 
  1183 ;;  column          1    1[BANK0 ] unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  config          1    5[BANK0 ] PTR struct .
  1186 ;;		 -> main@lcd(8), 
  1187 ;;  address         1    4[BANK0 ] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       2       0       0       0
  1198 ;;      Locals:         0       2       0       0       0
  1199 ;;      Temps:          0       2       0       0       0
  1200 ;;      Totals:         0       6       0       0       0
  1201 ;;Total ram usage:        6 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 3
  1204 ;; This function calls:
  1205 ;;		_Lcd_Command
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211     03C9                     _Lcd_SetCursor:	
  1212                           ;psect for function _Lcd_SetCursor
  1213                           
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _Lcd_SetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1217                           ;Lcd_SetCursor@config stored from wreg
  1218     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1219     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1220     03CB  00A5               	movwf	Lcd_SetCursor@config
  1221     03CC                     l788:
  1222                           
  1223                           ;../../pic16flcd.c: 150:     unsigned char address;;../../pic16flcd.c: 153:     switch(r
      +                          ow) {
  1224     03CC  2BD3               	goto	l796
  1225     03CD                     l790:
  1226                           
  1227                           ;../../pic16flcd.c: 155:             address = 0x80;
  1228     03CD  3080               	movlw	128
  1229     03CE  00A4               	movwf	Lcd_SetCursor@address
  1230                           
  1231                           ;../../pic16flcd.c: 156:             break;
  1232     03CF  2BE3               	goto	l798
  1233     03D0                     l792:
  1234                           
  1235                           ;../../pic16flcd.c: 158:             address = 0xC0;
  1236     03D0  30C0               	movlw	192
  1237     03D1  00A4               	movwf	Lcd_SetCursor@address
  1238                           
  1239                           ;../../pic16flcd.c: 159:             break;
  1240     03D2  2BE3               	goto	l798
  1241     03D3                     l796:
  1242     03D3  0820               	movf	Lcd_SetCursor@row,w
  1243     03D4  00A2               	movwf	??_Lcd_SetCursor
  1244     03D5  01A3               	clrf	??_Lcd_SetCursor+1
  1245                           
  1246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 1, Range of values is 0 to 0
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            4     3 (average)
  1252                           ; direct_byte           11     8 (fixed)
  1253                           ; jumptable            260     6 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255     03D6  0823               	movf	??_Lcd_SetCursor+1,w
  1256     03D7  3A00               	xorlw	0	; case 0
  1257     03D8  1903               	skipnz
  1258     03D9  2BDB               	goto	l896
  1259     03DA  2BCD               	goto	l790
  1260     03DB                     l896:
  1261                           
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 2, Range of values is 1 to 2
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte            7     4 (average)
  1267                           ; direct_byte           17    11 (fixed)
  1268                           ; jumptable            263     9 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270     03DB  0822               	movf	??_Lcd_SetCursor,w
  1271     03DC  3A01               	xorlw	1	; case 1
  1272     03DD  1903               	skipnz
  1273     03DE  2BCD               	goto	l790
  1274     03DF  3A03               	xorlw	3	; case 2
  1275     03E0  1903               	skipnz
  1276     03E1  2BD0               	goto	l792
  1277     03E2  2BCD               	goto	l790
  1278     03E3                     l798:
  1279                           
  1280                           ;../../pic16flcd.c: 165:     address += (column - 1);
  1281     03E3  0821               	movf	Lcd_SetCursor@column,w
  1282     03E4  3EFF               	addlw	255
  1283     03E5  00A2               	movwf	??_Lcd_SetCursor
  1284     03E6  0822               	movf	??_Lcd_SetCursor,w
  1285     03E7  07A4               	addwf	Lcd_SetCursor@address,f
  1286     03E8                     l800:
  1287                           
  1288                           ;../../pic16flcd.c: 168:     Lcd_Command(config, address);
  1289     03E8  0824               	movf	Lcd_SetCursor@address,w
  1290     03E9  00F9               	movwf	Lcd_Command@cmd
  1291     03EA  0825               	movf	Lcd_SetCursor@config,w
  1292     03EB  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1293     03F0                     l68:
  1294     03F0  0008               	return
  1295     03F1                     __end_of_Lcd_SetCursor:
  1296                           
  1297                           	psect	text4
  1298     0451                     __ptext4:	
  1299 ;; *************** function _Lcd_Init *****************
  1300 ;; Defined at:
  1301 ;;		line 111 in file "../../pic16flcd.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  config          1    wreg     PTR struct .
  1304 ;;		 -> main@lcd(8), 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  config          1    4[BANK0 ] PTR struct .
  1307 ;;		 -> main@lcd(8), 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         0       1       0       0       0
  1319 ;;      Temps:          0       2       0       0       0
  1320 ;;      Totals:         0       3       0       0       0
  1321 ;;Total ram usage:        3 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 4
  1324 ;; This function calls:
  1325 ;;		_Lcd_Clear
  1326 ;;		_Lcd_Command
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332     0451                     _Lcd_Init:	
  1333                           ;psect for function _Lcd_Init
  1334                           
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _Lcd_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1338                           ;Lcd_Init@config stored from wreg
  1339     0451  1283               	bcf	3,5	;RP0=0, select bank0
  1340     0452  1303               	bcf	3,6	;RP1=0, select bank0
  1341     0453  00A4               	movwf	Lcd_Init@config
  1342     0454                     l768:
  1343                           
  1344                           ;../../pic16flcd.c: 117:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1345     0454  3014               	movlw	20
  1346     0455  1283               	bcf	3,5	;RP0=0, select bank0
  1347     0456  1303               	bcf	3,6	;RP1=0, select bank0
  1348     0457  00A3               	movwf	??_Lcd_Init+1
  1349     0458  3079               	movlw	121
  1350     0459  00A2               	movwf	??_Lcd_Init
  1351     045A                     u1117:
  1352     045A  0BA2               	decfsz	??_Lcd_Init,f
  1353     045B  2C5A               	goto	u1117
  1354     045C  0BA3               	decfsz	??_Lcd_Init+1,f
  1355     045D  2C5A               	goto	u1117
  1356     045E                     l770:
  1357                           
  1358                           ;../../pic16flcd.c: 118:     Lcd_Command(config, 0x03);
  1359     045E  3003               	movlw	3
  1360     045F  00F9               	movwf	Lcd_Command@cmd
  1361     0460  1283               	bcf	3,5	;RP0=0, select bank0
  1362     0461  1303               	bcf	3,6	;RP1=0, select bank0
  1363     0462  0824               	movf	Lcd_Init@config,w
  1364     0463  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1365     0468                     l772:
  1366                           
  1367                           ;../../pic16flcd.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1368     0468  3007               	movlw	7
  1369     0469  1283               	bcf	3,5	;RP0=0, select bank0
  1370     046A  1303               	bcf	3,6	;RP1=0, select bank0
  1371     046B  00A3               	movwf	??_Lcd_Init+1
  1372     046C  307C               	movlw	124
  1373     046D  00A2               	movwf	??_Lcd_Init
  1374     046E                     u1127:
  1375     046E  0BA2               	decfsz	??_Lcd_Init,f
  1376     046F  2C6E               	goto	u1127
  1377     0470  0BA3               	decfsz	??_Lcd_Init+1,f
  1378     0471  2C6E               	goto	u1127
  1379     0472  0000               	nop
  1380                           
  1381                           ;../../pic16flcd.c: 120:     Lcd_Command(config, 0x03);
  1382     0473  3003               	movlw	3
  1383     0474  00F9               	movwf	Lcd_Command@cmd
  1384     0475  1283               	bcf	3,5	;RP0=0, select bank0
  1385     0476  1303               	bcf	3,6	;RP1=0, select bank0
  1386     0477  0824               	movf	Lcd_Init@config,w
  1387     0478  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1388     047D                     l774:
  1389                           
  1390                           ;../../pic16flcd.c: 121:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1391     047D  3020               	movlw	32
  1392     047E  1283               	bcf	3,5	;RP0=0, select bank0
  1393     047F  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0480  00A2               	movwf	??_Lcd_Init
  1395     0481                     u1137:
  1396     0481  0BA2               	decfsz	??_Lcd_Init,f
  1397     0482  2C81               	goto	u1137
  1398     0483  0000               	nop
  1399     0484                     l776:
  1400                           
  1401                           ;../../pic16flcd.c: 122:     Lcd_Command(config, 0x03);
  1402     0484  3003               	movlw	3
  1403     0485  00F9               	movwf	Lcd_Command@cmd
  1404     0486  1283               	bcf	3,5	;RP0=0, select bank0
  1405     0487  1303               	bcf	3,6	;RP1=0, select bank0
  1406     0488  0824               	movf	Lcd_Init@config,w
  1407     0489  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1408     048E                     l778:
  1409                           
  1410                           ;../../pic16flcd.c: 123:     Lcd_Command(config, 0x02);
  1411     048E  3002               	movlw	2
  1412     048F  00F9               	movwf	Lcd_Command@cmd
  1413     0490  1283               	bcf	3,5	;RP0=0, select bank0
  1414     0491  1303               	bcf	3,6	;RP1=0, select bank0
  1415     0492  0824               	movf	Lcd_Init@config,w
  1416     0493  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1417     0498                     l780:
  1418                           
  1419                           ;../../pic16flcd.c: 125:     Lcd_Command(config, 0x28);
  1420     0498  3028               	movlw	40
  1421     0499  00F9               	movwf	Lcd_Command@cmd
  1422     049A  1283               	bcf	3,5	;RP0=0, select bank0
  1423     049B  1303               	bcf	3,6	;RP1=0, select bank0
  1424     049C  0824               	movf	Lcd_Init@config,w
  1425     049D  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1426     04A2                     l782:
  1427                           
  1428                           ;../../pic16flcd.c: 126:     Lcd_Command(config, 0x0C);
  1429     04A2  300C               	movlw	12
  1430     04A3  00F9               	movwf	Lcd_Command@cmd
  1431     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1432     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1433     04A6  0824               	movf	Lcd_Init@config,w
  1434     04A7  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1435     04AC                     l784:
  1436                           
  1437                           ;../../pic16flcd.c: 127:     Lcd_Command(config, 0x06);
  1438     04AC  3006               	movlw	6
  1439     04AD  00F9               	movwf	Lcd_Command@cmd
  1440     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1441     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1442     04B0  0824               	movf	Lcd_Init@config,w
  1443     04B1  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1444     04B6                     l786:
  1445                           
  1446                           ;../../pic16flcd.c: 128:     Lcd_Clear(config);
  1447     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1448     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1449     04B8  0824               	movf	Lcd_Init@config,w
  1450     04B9  120A  118A  2390  120A  118A  	fcall	_Lcd_Clear
  1451     04BE                     l57:
  1452     04BE  0008               	return
  1453     04BF                     __end_of_Lcd_Init:
  1454                           
  1455                           	psect	text5
  1456     0390                     __ptext5:	
  1457 ;; *************** function _Lcd_Clear *****************
  1458 ;; Defined at:
  1459 ;;		line 136 in file "../../pic16flcd.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  config          1    wreg     PTR struct .
  1462 ;;		 -> main@lcd(8), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  config          1   13[COMMON] PTR struct .
  1465 ;;		 -> main@lcd(8), 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         1       0       0       0       0
  1477 ;;      Temps:          0       2       0       0       0
  1478 ;;      Totals:         1       2       0       0       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 3
  1482 ;; This function calls:
  1483 ;;		_Lcd_Command
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;;		_Lcd_Init
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490     0390                     _Lcd_Clear:	
  1491                           ;psect for function _Lcd_Clear
  1492                           
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _Lcd_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1496                           ;Lcd_Clear@config stored from wreg
  1497     0390  00FD               	movwf	Lcd_Clear@config
  1498     0391                     l762:
  1499                           
  1500                           ;../../pic16flcd.c: 137:     Lcd_Command(config, 0x01);
  1501     0391  01F9               	clrf	Lcd_Command@cmd
  1502     0392  0AF9               	incf	Lcd_Command@cmd,f
  1503     0393  087D               	movf	Lcd_Clear@config,w
  1504     0394  120A  118A  2599  120A  118A  	fcall	_Lcd_Command
  1505     0399                     l764:
  1506                           
  1507                           ;../../pic16flcd.c: 138:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1508     0399  3003               	movlw	3
  1509     039A  1283               	bcf	3,5	;RP0=0, select bank0
  1510     039B  1303               	bcf	3,6	;RP1=0, select bank0
  1511     039C  00A1               	movwf	??_Lcd_Clear+1
  1512     039D  3097               	movlw	151
  1513     039E  00A0               	movwf	??_Lcd_Clear
  1514     039F                     u1147:
  1515     039F  0BA0               	decfsz	??_Lcd_Clear,f
  1516     03A0  2B9F               	goto	u1147
  1517     03A1  0BA1               	decfsz	??_Lcd_Clear+1,f
  1518     03A2  2B9F               	goto	u1147
  1519     03A3                     l60:
  1520     03A3  0008               	return
  1521     03A4                     __end_of_Lcd_Clear:
  1522                           
  1523                           	psect	text6
  1524     0599                     __ptext6:	
  1525 ;; *************** function _Lcd_Command *****************
  1526 ;; Defined at:
  1527 ;;		line 52 in file "../../pic16flcd.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  config          1    wreg     PTR struct .
  1530 ;;		 -> main@lcd(8), 
  1531 ;;  cmd             1    9[COMMON] unsigned char 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  config          1   12[COMMON] PTR struct .
  1534 ;;		 -> main@lcd(8), 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         1       0       0       0       0
  1545 ;;      Locals:         1       0       0       0       0
  1546 ;;      Temps:          2       0       0       0       0
  1547 ;;      Totals:         4       0       0       0       0
  1548 ;;Total ram usage:        4 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 2
  1551 ;; This function calls:
  1552 ;;		_PulseEnable
  1553 ;;		_SetBit
  1554 ;; This function is called by:
  1555 ;;		_Lcd_Init
  1556 ;;		_Lcd_Clear
  1557 ;;		_Lcd_SetCursor
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     0599                     _Lcd_Command:	
  1562                           ;psect for function _Lcd_Command
  1563                           
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _Lcd_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1567                           ;Lcd_Command@config stored from wreg
  1568     0599  00FC               	movwf	Lcd_Command@config
  1569     059A                     l760:
  1570                           
  1571                           ;../../pic16flcd.c: 54:     SetBit(config->port, config->d4_pin, (cmd >> 4) & 0x01);
  1572     059A  087C               	movf	Lcd_Command@config,w
  1573     059B  0084               	movwf	4
  1574     059C  1383               	bcf	3,7	;select IRP bank0
  1575     059D  0800               	movf	0,w
  1576     059E  00F0               	movwf	SetBit@port
  1577     059F  0A84               	incf	4,f
  1578     05A0  0800               	movf	0,w
  1579     05A1  0384               	decf	4,f
  1580     05A2  00F1               	movwf	SetBit@port+1
  1581     05A3  087C               	movf	Lcd_Command@config,w
  1582     05A4  3E04               	addlw	4
  1583     05A5  0084               	movwf	4
  1584     05A6  0800               	movf	0,w
  1585     05A7  00F2               	movwf	SetBit@pin
  1586     05A8  0879               	movf	Lcd_Command@cmd,w
  1587     05A9  00FB               	movwf	??_Lcd_Command+1
  1588     05AA  3004               	movlw	4
  1589     05AB                     u575:
  1590     05AB  1003               	clrc
  1591     05AC  0CFB               	rrf	??_Lcd_Command+1,f
  1592     05AD  3EFF               	addlw	-1
  1593     05AE  1D03               	skipz
  1594     05AF  2DAB               	goto	u575
  1595     05B0  187B               	btfsc	??_Lcd_Command+1,0
  1596     05B1  2DB3               	goto	u581
  1597     05B2  2DB5               	goto	u580
  1598     05B3                     u581:
  1599     05B3  3001               	movlw	1
  1600     05B4  2DB6               	goto	u590
  1601     05B5                     u580:
  1602     05B5  3000               	movlw	0
  1603     05B6                     u590:
  1604     05B6  00F3               	movwf	SetBit@value
  1605     05B7  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1606                           
  1607                           ;../../pic16flcd.c: 55:     SetBit(config->port, config->d5_pin, (cmd >> 5) & 0x01);
  1608     05BC  087C               	movf	Lcd_Command@config,w
  1609     05BD  0084               	movwf	4
  1610     05BE  1383               	bcf	3,7	;select IRP bank0
  1611     05BF  0800               	movf	0,w
  1612     05C0  00F0               	movwf	SetBit@port
  1613     05C1  0A84               	incf	4,f
  1614     05C2  0800               	movf	0,w
  1615     05C3  0384               	decf	4,f
  1616     05C4  00F1               	movwf	SetBit@port+1
  1617     05C5  087C               	movf	Lcd_Command@config,w
  1618     05C6  3E05               	addlw	5
  1619     05C7  0084               	movwf	4
  1620     05C8  0800               	movf	0,w
  1621     05C9  00F2               	movwf	SetBit@pin
  1622     05CA  0879               	movf	Lcd_Command@cmd,w
  1623     05CB  00FB               	movwf	??_Lcd_Command+1
  1624     05CC  3005               	movlw	5
  1625     05CD                     u605:
  1626     05CD  1003               	clrc
  1627     05CE  0CFB               	rrf	??_Lcd_Command+1,f
  1628     05CF  3EFF               	addlw	-1
  1629     05D0  1D03               	skipz
  1630     05D1  2DCD               	goto	u605
  1631     05D2  187B               	btfsc	??_Lcd_Command+1,0
  1632     05D3  2DD5               	goto	u611
  1633     05D4  2DD7               	goto	u610
  1634     05D5                     u611:
  1635     05D5  3001               	movlw	1
  1636     05D6  2DD8               	goto	u620
  1637     05D7                     u610:
  1638     05D7  3000               	movlw	0
  1639     05D8                     u620:
  1640     05D8  00F3               	movwf	SetBit@value
  1641     05D9  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1642                           
  1643                           ;../../pic16flcd.c: 56:     SetBit(config->port, config->d6_pin, (cmd >> 6) & 0x01);
  1644     05DE  087C               	movf	Lcd_Command@config,w
  1645     05DF  0084               	movwf	4
  1646     05E0  1383               	bcf	3,7	;select IRP bank0
  1647     05E1  0800               	movf	0,w
  1648     05E2  00F0               	movwf	SetBit@port
  1649     05E3  0A84               	incf	4,f
  1650     05E4  0800               	movf	0,w
  1651     05E5  0384               	decf	4,f
  1652     05E6  00F1               	movwf	SetBit@port+1
  1653     05E7  087C               	movf	Lcd_Command@config,w
  1654     05E8  3E06               	addlw	6
  1655     05E9  0084               	movwf	4
  1656     05EA  0800               	movf	0,w
  1657     05EB  00F2               	movwf	SetBit@pin
  1658     05EC  0879               	movf	Lcd_Command@cmd,w
  1659     05ED  00FB               	movwf	??_Lcd_Command+1
  1660     05EE  3006               	movlw	6
  1661     05EF                     u635:
  1662     05EF  1003               	clrc
  1663     05F0  0CFB               	rrf	??_Lcd_Command+1,f
  1664     05F1  3EFF               	addlw	-1
  1665     05F2  1D03               	skipz
  1666     05F3  2DEF               	goto	u635
  1667     05F4  187B               	btfsc	??_Lcd_Command+1,0
  1668     05F5  2DF7               	goto	u641
  1669     05F6  2DF9               	goto	u640
  1670     05F7                     u641:
  1671     05F7  3001               	movlw	1
  1672     05F8  2DFA               	goto	u650
  1673     05F9                     u640:
  1674     05F9  3000               	movlw	0
  1675     05FA                     u650:
  1676     05FA  00F3               	movwf	SetBit@value
  1677     05FB  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1678                           
  1679                           ;../../pic16flcd.c: 57:     SetBit(config->port, config->d7_pin, (cmd >> 7) & 0x01);
  1680     0600  087C               	movf	Lcd_Command@config,w
  1681     0601  0084               	movwf	4
  1682     0602  1383               	bcf	3,7	;select IRP bank0
  1683     0603  0800               	movf	0,w
  1684     0604  00F0               	movwf	SetBit@port
  1685     0605  0A84               	incf	4,f
  1686     0606  0800               	movf	0,w
  1687     0607  0384               	decf	4,f
  1688     0608  00F1               	movwf	SetBit@port+1
  1689     0609  087C               	movf	Lcd_Command@config,w
  1690     060A  3E07               	addlw	7
  1691     060B  0084               	movwf	4
  1692     060C  0800               	movf	0,w
  1693     060D  00F2               	movwf	SetBit@pin
  1694     060E  0879               	movf	Lcd_Command@cmd,w
  1695     060F  00FB               	movwf	??_Lcd_Command+1
  1696     0610  3007               	movlw	7
  1697     0611                     u665:
  1698     0611  1003               	clrc
  1699     0612  0CFB               	rrf	??_Lcd_Command+1,f
  1700     0613  3EFF               	addlw	-1
  1701     0614  1D03               	skipz
  1702     0615  2E11               	goto	u665
  1703     0616  187B               	btfsc	??_Lcd_Command+1,0
  1704     0617  2E19               	goto	u671
  1705     0618  2E1B               	goto	u670
  1706     0619                     u671:
  1707     0619  3001               	movlw	1
  1708     061A  2E1C               	goto	u680
  1709     061B                     u670:
  1710     061B  3000               	movlw	0
  1711     061C                     u680:
  1712     061C  00F3               	movwf	SetBit@value
  1713     061D  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1714                           
  1715                           ;../../pic16flcd.c: 59:     SetBit(config->port, config->rs_pin, 0);
  1716     0622  087C               	movf	Lcd_Command@config,w
  1717     0623  0084               	movwf	4
  1718     0624  1383               	bcf	3,7	;select IRP bank0
  1719     0625  0800               	movf	0,w
  1720     0626  00F0               	movwf	SetBit@port
  1721     0627  0A84               	incf	4,f
  1722     0628  0800               	movf	0,w
  1723     0629  0384               	decf	4,f
  1724     062A  00F1               	movwf	SetBit@port+1
  1725     062B  087C               	movf	Lcd_Command@config,w
  1726     062C  3E02               	addlw	2
  1727     062D  0084               	movwf	4
  1728     062E  0800               	movf	0,w
  1729     062F  00F2               	movwf	SetBit@pin
  1730     0630  01F3               	clrf	SetBit@value
  1731     0631  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1732                           
  1733                           ;../../pic16flcd.c: 60:     PulseEnable(config);
  1734     0636  087C               	movf	Lcd_Command@config,w
  1735     0637  120A  118A  241D  120A  118A  	fcall	_PulseEnable
  1736                           
  1737                           ;../../pic16flcd.c: 63:     SetBit(config->port, config->d4_pin, cmd & 0x01);
  1738     063C  087C               	movf	Lcd_Command@config,w
  1739     063D  0084               	movwf	4
  1740     063E  1383               	bcf	3,7	;select IRP bank0
  1741     063F  0800               	movf	0,w
  1742     0640  00F0               	movwf	SetBit@port
  1743     0641  0A84               	incf	4,f
  1744     0642  0800               	movf	0,w
  1745     0643  0384               	decf	4,f
  1746     0644  00F1               	movwf	SetBit@port+1
  1747     0645  087C               	movf	Lcd_Command@config,w
  1748     0646  3E04               	addlw	4
  1749     0647  0084               	movwf	4
  1750     0648  0800               	movf	0,w
  1751     0649  00F2               	movwf	SetBit@pin
  1752     064A  1879               	btfsc	Lcd_Command@cmd,0
  1753     064B  2E4D               	goto	u691
  1754     064C  2E4F               	goto	u690
  1755     064D                     u691:
  1756     064D  3001               	movlw	1
  1757     064E  2E50               	goto	u700
  1758     064F                     u690:
  1759     064F  3000               	movlw	0
  1760     0650                     u700:
  1761     0650  00F3               	movwf	SetBit@value
  1762     0651  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1763                           
  1764                           ;../../pic16flcd.c: 64:     SetBit(config->port, config->d5_pin, (cmd >> 1) & 0x01);
  1765     0656  087C               	movf	Lcd_Command@config,w
  1766     0657  0084               	movwf	4
  1767     0658  1383               	bcf	3,7	;select IRP bank0
  1768     0659  0800               	movf	0,w
  1769     065A  00F0               	movwf	SetBit@port
  1770     065B  0A84               	incf	4,f
  1771     065C  0800               	movf	0,w
  1772     065D  0384               	decf	4,f
  1773     065E  00F1               	movwf	SetBit@port+1
  1774     065F  087C               	movf	Lcd_Command@config,w
  1775     0660  3E05               	addlw	5
  1776     0661  0084               	movwf	4
  1777     0662  0800               	movf	0,w
  1778     0663  00F2               	movwf	SetBit@pin
  1779     0664  0879               	movf	Lcd_Command@cmd,w
  1780     0665  00FB               	movwf	??_Lcd_Command+1
  1781     0666  3001               	movlw	1
  1782     0667                     u715:
  1783     0667  1003               	clrc
  1784     0668  0CFB               	rrf	??_Lcd_Command+1,f
  1785     0669  3EFF               	addlw	-1
  1786     066A  1D03               	skipz
  1787     066B  2E67               	goto	u715
  1788     066C  187B               	btfsc	??_Lcd_Command+1,0
  1789     066D  2E6F               	goto	u721
  1790     066E  2E71               	goto	u720
  1791     066F                     u721:
  1792     066F  3001               	movlw	1
  1793     0670  2E72               	goto	u730
  1794     0671                     u720:
  1795     0671  3000               	movlw	0
  1796     0672                     u730:
  1797     0672  00F3               	movwf	SetBit@value
  1798     0673  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1799                           
  1800                           ;../../pic16flcd.c: 65:     SetBit(config->port, config->d6_pin, (cmd >> 2) & 0x01);
  1801     0678  087C               	movf	Lcd_Command@config,w
  1802     0679  0084               	movwf	4
  1803     067A  1383               	bcf	3,7	;select IRP bank0
  1804     067B  0800               	movf	0,w
  1805     067C  00F0               	movwf	SetBit@port
  1806     067D  0A84               	incf	4,f
  1807     067E  0800               	movf	0,w
  1808     067F  0384               	decf	4,f
  1809     0680  00F1               	movwf	SetBit@port+1
  1810     0681  087C               	movf	Lcd_Command@config,w
  1811     0682  3E06               	addlw	6
  1812     0683  0084               	movwf	4
  1813     0684  0800               	movf	0,w
  1814     0685  00F2               	movwf	SetBit@pin
  1815     0686  0879               	movf	Lcd_Command@cmd,w
  1816     0687  00FB               	movwf	??_Lcd_Command+1
  1817     0688  3002               	movlw	2
  1818     0689                     u745:
  1819     0689  1003               	clrc
  1820     068A  0CFB               	rrf	??_Lcd_Command+1,f
  1821     068B  3EFF               	addlw	-1
  1822     068C  1D03               	skipz
  1823     068D  2E89               	goto	u745
  1824     068E  187B               	btfsc	??_Lcd_Command+1,0
  1825     068F  2E91               	goto	u751
  1826     0690  2E93               	goto	u750
  1827     0691                     u751:
  1828     0691  3001               	movlw	1
  1829     0692  2E94               	goto	u760
  1830     0693                     u750:
  1831     0693  3000               	movlw	0
  1832     0694                     u760:
  1833     0694  00F3               	movwf	SetBit@value
  1834     0695  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1835                           
  1836                           ;../../pic16flcd.c: 66:     SetBit(config->port, config->d7_pin, (cmd >> 3) & 0x01);
  1837     069A  087C               	movf	Lcd_Command@config,w
  1838     069B  0084               	movwf	4
  1839     069C  1383               	bcf	3,7	;select IRP bank0
  1840     069D  0800               	movf	0,w
  1841     069E  00F0               	movwf	SetBit@port
  1842     069F  0A84               	incf	4,f
  1843     06A0  0800               	movf	0,w
  1844     06A1  0384               	decf	4,f
  1845     06A2  00F1               	movwf	SetBit@port+1
  1846     06A3  087C               	movf	Lcd_Command@config,w
  1847     06A4  3E07               	addlw	7
  1848     06A5  0084               	movwf	4
  1849     06A6  0800               	movf	0,w
  1850     06A7  00F2               	movwf	SetBit@pin
  1851     06A8  0879               	movf	Lcd_Command@cmd,w
  1852     06A9  00FB               	movwf	??_Lcd_Command+1
  1853     06AA  3003               	movlw	3
  1854     06AB                     u775:
  1855     06AB  1003               	clrc
  1856     06AC  0CFB               	rrf	??_Lcd_Command+1,f
  1857     06AD  3EFF               	addlw	-1
  1858     06AE  1D03               	skipz
  1859     06AF  2EAB               	goto	u775
  1860     06B0  187B               	btfsc	??_Lcd_Command+1,0
  1861     06B1  2EB3               	goto	u781
  1862     06B2  2EB5               	goto	u780
  1863     06B3                     u781:
  1864     06B3  3001               	movlw	1
  1865     06B4  2EB6               	goto	u790
  1866     06B5                     u780:
  1867     06B5  3000               	movlw	0
  1868     06B6                     u790:
  1869     06B6  00F3               	movwf	SetBit@value
  1870     06B7  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1871                           
  1872                           ;../../pic16flcd.c: 68:     PulseEnable(config);
  1873     06BC  087C               	movf	Lcd_Command@config,w
  1874     06BD  120A  118A  241D  120A  118A  	fcall	_PulseEnable
  1875     06C2                     l45:
  1876     06C2  0008               	return
  1877     06C3                     __end_of_Lcd_Command:
  1878                           
  1879                           	psect	text7
  1880     041D                     __ptext7:	
  1881 ;; *************** function _PulseEnable *****************
  1882 ;; Defined at:
  1883 ;;		line 38 in file "../../pic16flcd.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  config          1    wreg     PTR struct .
  1886 ;;		 -> main@lcd(8), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  config          1    8[COMMON] PTR struct .
  1889 ;;		 -> main@lcd(8), 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0
  1901 ;;      Temps:          2       0       0       0       0
  1902 ;;      Totals:         3       0       0       0       0
  1903 ;;Total ram usage:        3 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 1
  1906 ;; This function calls:
  1907 ;;		_SetBit
  1908 ;; This function is called by:
  1909 ;;		_Lcd_Command
  1910 ;;		_Lcd_WriteChar
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914     041D                     _PulseEnable:	
  1915                           ;psect for function _PulseEnable
  1916                           
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _PulseEnable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1920                           ;PulseEnable@config stored from wreg
  1921     041D  00F8               	movwf	PulseEnable@config
  1922     041E                     l754:
  1923                           
  1924                           ;../../pic16flcd.c: 39:     SetBit(config->port, config->en_pin, 1);
  1925     041E  0878               	movf	PulseEnable@config,w
  1926     041F  0084               	movwf	4
  1927     0420  1383               	bcf	3,7	;select IRP bank0
  1928     0421  0800               	movf	0,w
  1929     0422  00F0               	movwf	SetBit@port
  1930     0423  0A84               	incf	4,f
  1931     0424  0800               	movf	0,w
  1932     0425  0384               	decf	4,f
  1933     0426  00F1               	movwf	SetBit@port+1
  1934     0427  0878               	movf	PulseEnable@config,w
  1935     0428  3E03               	addlw	3
  1936     0429  0084               	movwf	4
  1937     042A  0800               	movf	0,w
  1938     042B  00F2               	movwf	SetBit@pin
  1939     042C  01F3               	clrf	SetBit@value
  1940     042D  0AF3               	incf	SetBit@value,f
  1941     042E  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1942     0433                     l756:
  1943                           
  1944                           ;../../pic16flcd.c: 40:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1945     0433  3003               	movlw	3
  1946     0434  00F7               	movwf	??_PulseEnable+1
  1947     0435  3097               	movlw	151
  1948     0436  00F6               	movwf	??_PulseEnable
  1949     0437                     u1157:
  1950     0437  0BF6               	decfsz	??_PulseEnable,f
  1951     0438  2C37               	goto	u1157
  1952     0439  0BF7               	decfsz	??_PulseEnable+1,f
  1953     043A  2C37               	goto	u1157
  1954     043B  2C3C               	nop2
  1955     043C                     l758:
  1956                           
  1957                           ;../../pic16flcd.c: 41:     SetBit(config->port, config->en_pin, 0);
  1958     043C  0878               	movf	PulseEnable@config,w
  1959     043D  0084               	movwf	4
  1960     043E  1383               	bcf	3,7	;select IRP bank0
  1961     043F  0800               	movf	0,w
  1962     0440  00F0               	movwf	SetBit@port
  1963     0441  0A84               	incf	4,f
  1964     0442  0800               	movf	0,w
  1965     0443  0384               	decf	4,f
  1966     0444  00F1               	movwf	SetBit@port+1
  1967     0445  0878               	movf	PulseEnable@config,w
  1968     0446  3E03               	addlw	3
  1969     0447  0084               	movwf	4
  1970     0448  0800               	movf	0,w
  1971     0449  00F2               	movwf	SetBit@pin
  1972     044A  01F3               	clrf	SetBit@value
  1973     044B  120A  118A  23F1  120A  118A  	fcall	_SetBit
  1974     0450                     l42:
  1975     0450  0008               	return
  1976     0451                     __end_of_PulseEnable:
  1977                           
  1978                           	psect	text8
  1979     03F1                     __ptext8:	
  1980 ;; *************** function _SetBit *****************
  1981 ;; Defined at:
  1982 ;;		line 24 in file "../../pic16flcd.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  port            2    0[COMMON] PTR volatile unsigned ch
  1985 ;;		 -> PORTC(1), 
  1986 ;;  pin             1    2[COMMON] unsigned char 
  1987 ;;  value           1    3[COMMON] _Bool 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         4       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0
  2001 ;;      Temps:          2       0       0       0       0
  2002 ;;      Totals:         6       0       0       0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used: 1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_PulseEnable
  2009 ;;		_Lcd_Command
  2010 ;;		_Lcd_WriteChar
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014     03F1                     _SetBit:	
  2015                           ;psect for function _SetBit
  2016                           
  2017     03F1                     l748:	
  2018                           ;incstack = 0
  2019                           ; Regs used in _SetBit: [wreg-fsr0h+status,2+status,0]
  2020                           
  2021                           
  2022                           ;../../pic16flcd.c: 25:     if (value) {
  2023     03F1  0873               	movf	SetBit@value,w
  2024     03F2  1903               	btfsc	3,2
  2025     03F3  2BF5               	goto	u541
  2026     03F4  2BF6               	goto	u540
  2027     03F5                     u541:
  2028     03F5  2C09               	goto	l752
  2029     03F6                     u540:
  2030     03F6                     l750:
  2031                           
  2032                           ;../../pic16flcd.c: 26:         *port |= (1 << pin);
  2033     03F6  3001               	movlw	1
  2034     03F7  00F4               	movwf	??_SetBit
  2035     03F8  0A72               	incf	SetBit@pin,w
  2036     03F9  2BFC               	goto	u554
  2037     03FA                     u555:
  2038     03FA  1003               	clrc
  2039     03FB  0DF4               	rlf	??_SetBit,f
  2040     03FC                     u554:
  2041     03FC  3EFF               	addlw	-1
  2042     03FD  1D03               	skipz
  2043     03FE  2BFA               	goto	u555
  2044     03FF  0874               	movf	??_SetBit,w
  2045     0400  00F5               	movwf	??_SetBit+1
  2046     0401  0870               	movf	SetBit@port,w
  2047     0402  0084               	movwf	4
  2048     0403  1783               	bsf	3,7
  2049     0404  1C71               	btfss	SetBit@port+1,0
  2050     0405  1383               	bcf	3,7
  2051     0406  0875               	movf	??_SetBit+1,w
  2052     0407  0480               	iorwf	0,f
  2053                           
  2054                           ;../../pic16flcd.c: 27:     } else {
  2055     0408  2C1C               	goto	l39
  2056     0409                     l752:
  2057                           
  2058                           ;../../pic16flcd.c: 28:         *port &= ~(1 << pin);
  2059     0409  3001               	movlw	1
  2060     040A  00F4               	movwf	??_SetBit
  2061     040B  0A72               	incf	SetBit@pin,w
  2062     040C  2C0F               	goto	u564
  2063     040D                     u565:
  2064     040D  1003               	clrc
  2065     040E  0DF4               	rlf	??_SetBit,f
  2066     040F                     u564:
  2067     040F  3EFF               	addlw	-1
  2068     0410  1D03               	skipz
  2069     0411  2C0D               	goto	u565
  2070     0412  0874               	movf	??_SetBit,w
  2071     0413  3AFF               	xorlw	255
  2072     0414  00F5               	movwf	??_SetBit+1
  2073     0415  0870               	movf	SetBit@port,w
  2074     0416  0084               	movwf	4
  2075     0417  1783               	bsf	3,7
  2076     0418  1C71               	btfss	SetBit@port+1,0
  2077     0419  1383               	bcf	3,7
  2078     041A  0875               	movf	??_SetBit+1,w
  2079     041B  0580               	andwf	0,f
  2080     041C                     l39:
  2081     041C  0008               	return
  2082     041D                     __end_of_SetBit:
  2083     007E                     btemp	set	126	;btemp
  2084     007E                     wtemp0	set	126
  2085                           
  2086                           	psect	config
  2087                           
  2088                           ;Config register CONFIG @ 0x2007
  2089                           ;	Oscillator Selection bits
  2090                           ;	FOSC = HS, HS oscillator
  2091                           ;	Watchdog Timer Enable bit
  2092                           ;	WDTE = OFF, WDT disabled
  2093                           ;	Power-up Timer Enable bit
  2094                           ;	PWRTE = OFF, PWRT disabled
  2095                           ;	Brown-out Reset Enable bit
  2096                           ;	BOREN = OFF, BOR disabled
  2097                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2098                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2099                           ;	Data EEPROM Memory Code Protection bit
  2100                           ;	CPD = OFF, Data EEPROM code protection off
  2101                           ;	Flash Program Memory Write Enable bits
  2102                           ;	WRT = 0x3, unprogrammed default
  2103                           ;	In-Circuit Debugger Mode bit
  2104                           ;	DEBUG = 0x1, unprogrammed default
  2105                           ;	Flash Program Memory Code Protection bit
  2106                           ;	CP = OFF, Code protection off
  2107     2007                     	org	8199
  2108     2007  3F3A               	dw	16186

Data Sizes:
    Strings     12
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    F953$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Clear@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Clear@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Command@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Command@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_Init@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_Init@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_SetCursor@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_SetCursor@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteChar@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteChar@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    Lcd_WriteString@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    Lcd_WriteString@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 

    PulseEnable@config	PTR struct . size(1) Largest target is 8
		 -> main@lcd(BANK0[8]), 

    PulseEnable@config$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S23$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    SetBit@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Clear
    _main->_Lcd_WriteString
    _Lcd_WriteString->_Lcd_WriteChar
    _Lcd_WriteChar->_PulseEnable
    _Lcd_SetCursor->_Lcd_Command
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Command
    _Lcd_Command->_PulseEnable
    _PulseEnable->_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_SetCursor
    _Lcd_Init->_Lcd_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   67665
                                              6 BANK0     13    13      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_SetCursor
                      _Lcd_WriteChar
                    _Lcd_WriteString
 ---------------------------------------------------------------------------------
 (1) _Lcd_WriteString                                      3     2      1   10788
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     3      1   10503
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_SetCursor                                        6     4      2   11989
                                              0 BANK0      6     4      2
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0   22644
                                              2 BANK0      3     3      0
                          _Lcd_Clear
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            3     3      0   11278
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          4     3      1   11157
                                              9 COMMON     4     3      1
                        _PulseEnable
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _PulseEnable                                          3     3      0    4890
                                              6 COMMON     3     3      0
                             _SetBit
 ---------------------------------------------------------------------------------
 (3) _SetBit                                               6     2      4    4670
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _PulseEnable
         _SetBit
       _SetBit
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Command
   _Lcd_SetCursor
     _Lcd_Command
   _Lcd_WriteChar
     _PulseEnable
     _SetBit
   _Lcd_WriteString
     _Lcd_WriteChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 23:18:16 2023

                      pc 0002                       l42 0450                       l60 03A3  
                     l45 06C2                       l54 03C8                       l39 041C  
                     l48 07ED                       l57 04BE                       l68 03F0  
         Lcd_Init@config 0024                       fsr 0004                      l800 03E8  
                    l810 03A8                      l812 03B6                      l820 04D9  
                    l750 03F6                      l814 03BC                      l830 0505  
                    l822 04DF                      l752 0409                      l760 059A  
                    l808 03A7                      l832 050D                      l824 04E5  
                    l816 04BF                      l754 041E                      l762 0391  
                    l770 045E                      l850 0554                      l842 0525  
                    l834 051B                      l826 04F1                      l818 04C2  
                    l748 03F1                      l756 0433                      l764 0399  
                    l780 0498                      l772 0468                      l860 0589  
                    l852 0562                      l844 053A                      l836 0521  
                    l828 04F9                      l758 043C                      l782 04A2  
                    l774 047D                      l790 03CD                      l766 06C4  
                    l862 058F                      l846 0548                      l784 04AC  
                    l776 0484                      l768 0454                      l792 03D0  
                    l856 0566                      l848 054E                      l786 04B6  
                    l778 048E                      l858 057B                      l796 03D3  
                    l788 03CC                      l798 03E3                      l896 03DB  
                    u610 05D7                      u611 05D5                      u540 03F6  
                    u700 0650                      u620 05D8                      u541 03F5  
                    u605 05CD                      u720 0671                      u640 05F9  
                    u721 066F                      u641 05F7                      u554 03FC  
                    u730 0672                      u650 05FA                      u810 06DF  
                    u555 03FA                      u715 0667                      u635 05EF  
                    u811 06DD                      u564 040F                      u580 05B5  
                    u900 0745                      u820 06E0                      u565 040D  
                    u581 05B3                      u901 0743                      u805 06D5  
                    u750 0693                      u670 061B                      u590 05B6  
                    u910 0746                      u751 0691                      u671 0619  
                    u575 05AB                      u760 0694                      u680 061C  
                    u920 077A                      u840 0701                      u745 0689  
                    u665 0611                      u921 0778                      u841 06FF  
                    u690 064F                      u930 077B                      u850 0702  
                    u691 064D                      u835 06F7                      u780 06B5  
                    u781 06B3                      u790 06B6                      u950 079C  
                    u870 0723                      u775 06AB                      u951 079A  
                    u871 0721                      u960 079D                      u880 0724  
                    u945 0792                      u865 0719                      u980 07BE  
                    u981 07BC                      u990 07BF                      u975 07B4  
                    u895 073B                      fsr0 0004         ?_Lcd_WriteString 007D  
                    indf 0000      __end_of_Lcd_Command 06C3                     STR_1 000F  
                   STR_2 0009                     u1010 07E0                     u1011 07DE  
                   u1020 07E1                     u1005 07D6                     u1030 03C8  
                   u1031 03C7                     u1040 04CC                     u1050 0554  
                   u1107 0583                     u1051 0553                     u1060 0595  
                   u1117 045A                     u1061 0594                     u1127 046E  
                   u1137 0481                     u1147 039F                     u1157 0437  
                   u1077 0515                     u1087 0542                     u1097 055C  
     Lcd_WriteString@str 007D                     _main 04BF                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTC 0007  
                  _TRISC 0087               SetBit@port 0070                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_Lcd_Init 04BF        PulseEnable@config 0078          __initialization 07EE  
           __end_of_main 0599              _Lcd_Command 0599                   ??_main 0026  
  __end_of_Lcd_SetCursor 03F1                   _SetBit 03F1     Lcd_SetCursor@address 0024  
            SetBit@value 0073    __end_of_Lcd_WriteChar 07EE  __end_of__initialization 07FC  
          ??_PulseEnable 0076        __end_of_Lcd_Clear 03A4           __pcstackCOMMON 0070  
           __pidataBANK0 0375                ?_Lcd_Init 0070                  ?_SetBit 0070  
             __pmaintext 04BF      __end_of_PulseEnable 0451               ??_Lcd_Init 0022  
  Lcd_WriteString@config 0021               __stringtab 0003        Lcd_WriteChar@data 0079  
           ?_Lcd_Command 0079                  __ptext1 03A4                  __ptext2 06C3  
                __ptext3 03C9                  __ptext4 0451                  __ptext5 0390  
                __ptext6 0599                  __ptext7 041D                  __ptext8 03F1  
                main@lcd 002B     end_of_initialization 07FC         Lcd_SetCursor@row 0020  
            _PulseEnable 041D        ??_Lcd_WriteString 0020                _Lcd_Clear 0390  
         __end_of_SetBit 041D                SetBit@pin 0072      start_initialization 07EE  
               ??_SetBit 0074               ?_Lcd_Clear 0070      Lcd_SetCursor@config 0025  
    Lcd_SetCursor@column 0021               init_fetch0 037D              __pdataBANK0 0033  
      Lcd_Command@config 007C      Lcd_WriteChar@config 007C                ___latbits 0002  
          __pcstackBANK0 0020            _Lcd_SetCursor 03C9                __pstrings 0003  
          _Lcd_WriteChar 06C3           ?_Lcd_SetCursor 0020             ?_PulseEnable 0070  
            ??_Lcd_Clear 0020          Lcd_Clear@config 007D              __stringbase 0008  
         ?_Lcd_WriteChar 0079                 _Lcd_Init 0451          _Lcd_WriteString 03A4  
     __end_of__stringtab 0009          ??_Lcd_SetCursor 0022                 main@F953 0033  
        ??_Lcd_WriteChar 007A  __end_of_Lcd_WriteString 03C9                 init_ram0 0381  
              stringcode 0003            ??_Lcd_Command 007A           Lcd_Command@cmd 0079  
               stringdir 0003                 stringtab 0003  
